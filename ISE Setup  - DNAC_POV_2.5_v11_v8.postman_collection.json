{
	"info": {
		"_postman_id": "faceb7ff-f660-47bd-ac4b-d45c7c267e8a",
		"name": "ISE Setup  - DNAC_POV_2.5_v11_v8",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "0. Prep",
			"item": [
				{
					"name": "Get Auth Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "74e2bbf2-4d8a-4812-ae57-e05c65f9106d",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"dnacToken\", data.Token);",
									"",
									";",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{dnacAdminPwd}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{dnacAdmin}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{dnacAddress}}/api/system/v1/auth/token",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"system",
								"v1",
								"auth",
								"token"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "1. Discover",
			"item": [
				{
					"name": "Set Global CLI Credentials",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1ac78577-215e-4ed9-8822-80df88fcb090",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"taskId\", data.response.taskId);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-auth-token",
								"value": "{{dnacToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n\t{\n\t\t\"username\":\"{{credCliUser}}\",\n\t\t\"password\":\"{{credCliPwd}}\",\n\t\t\"enablePassword\":\"{{credCliEnablePwd}}\"\n\t}\n]"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/global-credential/cli",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"global-credential",
								"cli"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"var latestRequest = pm.variables.get(\"latestRequest\");\r",
									"var service = data.response.serviceType;\r",
									"var isError = data.response.isError.toString();\r",
									"\r",
									"\r",
									"if (isError == \"false\") {\r",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");\r",
									"}\r",
									"else {\r",
									"    console.log(\"........ \" + latestRequest + \" generated an ERROR !!!!!\");\r",
									"    console.log(\"........ Service type is \" + service);\r",
									"    console.log(\"........ Failure reason is \" + data.response.failureReason);\r",
									"    \r",
									"}\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-auth-token",
								"value": "{{dnacToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/task/{{taskId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"task",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Set SNMPv2 Read-Only String",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0ccd56d4-b107-459a-8386-dcd497563e75",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"taskId\", data.response.taskId);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest)",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-auth-token",
								"value": "{{dnacToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[{\"description\":\"{{credSnmpRo}}\",\"readCommunity\":\"{{credSnmpRo}}\"}]"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/global-credential/snmpv2-read-community",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"global-credential",
								"snmpv2-read-community"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"var latestRequest = pm.variables.get(\"latestRequest\");\r",
									"var service = data.response.serviceType;\r",
									"var isError = data.response.isError.toString();\r",
									"\r",
									"\r",
									"if (isError == \"false\") {\r",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");\r",
									"}\r",
									"else {\r",
									"    console.log(\"........ \" + latestRequest + \" generated an ERROR !!!!!\");\r",
									"    console.log(\"........ Service type is \" + service);\r",
									"    console.log(\"........ Failure reason is \" + data.response.failureReason);\r",
									"    \r",
									"}\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-auth-token",
								"value": "{{dnacToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/task/{{taskId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"task",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Set SNMPv2 Read-Write String",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "75367aa9-4d0e-4173-953f-aa9dc52d91f7",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"taskId\", data.response.taskId);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-auth-token",
								"value": "{{dnacToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[{\"description\":\"{{credSnmpRw}}\",\"writeCommunity\":\"{{credSnmpRw}}\"}]"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/global-credential/snmpv2-write-community",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"global-credential",
								"snmpv2-write-community"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"var latestRequest = pm.variables.get(\"latestRequest\");\r",
									"var service = data.response.serviceType;\r",
									"var isError = data.response.isError.toString();\r",
									"\r",
									"\r",
									"if (isError == \"false\") {\r",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");\r",
									"}\r",
									"else {\r",
									"    console.log(\"........ \" + latestRequest + \" generated an ERROR !!!!!\");\r",
									"    console.log(\"........ Service type is \" + service);\r",
									"    console.log(\"........ Failure reason is \" + data.response.failureReason);\r",
									"    \r",
									"}\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/task/{{taskId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"task",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get netadmin ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3bf4fce6-02fe-45d8-8363-3ff290e0048a",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var data = JSON.parse(responseBody);",
									"var credCliUser = pm.variables.get(\"credCliUser\");",
									"",
									"for (var i=0; i < data.response.length; i++) {",
									"    if (data.response[i].username == credCliUser) {",
									"        postman.setEnvironmentVariable(\"credCliUserId\", data.response[i].id);",
									"    }",
									"}",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest)",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-auth-token",
								"value": "{{dnacToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/global-credential?credentialSubType=CLI",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"global-credential"
							],
							"query": [
								{
									"key": "credentialSubType",
									"value": "CLI"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get SNMP RO ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5c03295c-aecc-4d1c-ad82-f2c1cf9242fb",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var data = JSON.parse(responseBody);",
									"var credSnmpRo = pm.variables.get(\"credSnmpRo\");",
									"",
									"for (var i=0; i < data.response.length; i++) {",
									"    if (data.response[i].description == credSnmpRo) {",
									"        postman.setEnvironmentVariable(\"credSnmpRoId\", data.response[i].id);",
									"    }",
									"}",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-auth-token",
								"value": "{{dnacToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/global-credential?credentialSubType=SNMPV2_READ_COMMUNITY",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"global-credential"
							],
							"query": [
								{
									"key": "credentialSubType",
									"value": "SNMPV2_READ_COMMUNITY"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get SNMP RW ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9184fe21-c167-43fa-8092-da0c91f596dc",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var data = JSON.parse(responseBody);",
									"var credSnmpRw = pm.variables.get(\"credSnmpRw\");",
									"",
									"for (var i=0; i < data.response.length; i++) {",
									"    if (data.response[i].description == credSnmpRw) {",
									"        postman.setEnvironmentVariable(\"credSnmpRwId\", data.response[i].id);",
									"    }",
									"}",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-auth-token",
								"value": "{{dnacToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/global-credential?credentialSubType=SNMPV2_WRITE_COMMUNITY",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"global-credential"
							],
							"query": [
								{
									"key": "credentialSubType",
									"value": "SNMPV2_WRITE_COMMUNITY"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Start Discovery",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "625de92c-9727-41e8-a7f7-636cff529e44",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"taskId\", data.response.taskId);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-auth-token",
								"value": "{{dnacToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\t{\"discoveryType\":\"Range\",\n\t\"preferredMgmtIPMethod\":\"UseLoopBack\",\n\t\"ipAddressList\":\"100.124.0.1-100.124.1.1\",\n\t\"ipFilterList\":[],\n\t\"protocolOrder\":\"ssh,telnet\",\n\t\"cdpLevel\":\"16\",\n\t\"lldpLevel\":\"16\",\n\t\"globalCredentialIdList\":[\n\t\t\"{{credCliUserId}}\",\n\t\t\"{{credSnmpRoId}}\",\n\t\t\"{{credSnmpRwId}}\"\n\t\t],\n\t\"timeout\":\"5\",\n\t\"retry\":\"3\",\n\t\"name\":\"Initial Discovery\"}"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/discovery",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"discovery"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"var latestRequest = pm.variables.get(\"latestRequest\");\r",
									"var service = data.response.serviceType;\r",
									"var isError = data.response.isError.toString();\r",
									"\r",
									"\r",
									"if (isError == \"false\") {\r",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");\r",
									"}\r",
									"else {\r",
									"    console.log(\"........ \" + latestRequest + \" generated an ERROR !!!!!\");\r",
									"    console.log(\"........ Service type is \" + service);\r",
									"    console.log(\"........ Failure reason is \" + data.response.failureReason);\r",
									"    \r",
									"}\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/task/{{taskId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"task",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Network Device Info - Wait for Discovery to Complete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3bf4fce6-02fe-45d8-8363-3ff290e0048a",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var data = JSON.parse(responseBody);",
									"var devCpBorder1Name = pm.variables.get(\"devCpBorder1Name\");",
									"var devCpBorder2Name = pm.variables.get(\"devCpBorder2Name\");",
									"var devEdge1Name = pm.variables.get(\"devEdge1Name\");",
									"",
									"var inprogress = 0;",
									"",
									"for (var i=0; i < data.response.length; i++) {",
									"    if (data.response[i].collectionStatus == \"In Progress\"){",
									"        inprogress +=1;",
									"    }",
									"    else if (data.response[i].hostname.includes(devCpBorder1Name)) {",
									"        postman.setEnvironmentVariable(\"devCpBorder1Id\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"devCpBorder1FullName\", data.response[i].hostname);",
									"        postman.setEnvironmentVariable(\"devCpBorder1MgmtIp\", data.response[i].managementIpAddress);",
									"    }",
									"    else if (data.response[i].hostname.includes (devCpBorder2Name)) {",
									"        postman.setEnvironmentVariable(\"devCpBorder2Id\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"devCpBorder2FullName\", data.response[i].hostname);",
									"        postman.setEnvironmentVariable(\"devCpBorder2MgmtIp\", data.response[i].managementIpAddress);",
									"    }",
									"    else if (data.response[i].hostname.includes (devEdge1Name)) {",
									"        postman.setEnvironmentVariable(\"devEdge1Id\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"devEdge1FullName\", data.response[i].hostname);",
									"        postman.setEnvironmentVariable(\"devEdge1MgmtIp\", data.response[i].managementIpAddress);",
									"    }",
									"}",
									"",
									"if (data.response.length === 0) {",
									"    inprogress +=3;",
									"}",
									"",
									"if (inprogress > 0) {",
									"    console.log(\"Sleeping for one min.\");",
									"    setTimeout(function(){}, 60000);",
									"    postman.setNextRequest(\"Get Network Device Info - Wait for Discovery to Complete\");",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-auth-token",
								"value": "{{dnacToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/network-device/",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"network-device",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Set cp-border-1 Device Role",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fb8416e0-6953-4830-888f-36c80b39ce44",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"taskId\", data.response.taskId);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest)",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-auth-token",
								"value": "{{dnacToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"id\":\"{{devCpBorder1Id}}\",\n\t\"role\":\"BORDER ROUTER\",\n\t\"roleSource\":\"MANUAL\"}"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/network-device/brief",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"network-device",
								"brief"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"var latestRequest = pm.variables.get(\"latestRequest\");\r",
									"var service = data.response.serviceType;\r",
									"var isError = data.response.isError.toString();\r",
									"\r",
									"\r",
									"if (isError == \"false\") {\r",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");\r",
									"}\r",
									"else {\r",
									"    console.log(\"........ \" + latestRequest + \" generated an ERROR !!!!!\");\r",
									"    console.log(\"........ Service type is \" + service);\r",
									"    console.log(\"........ Failure reason is \" + data.response.failureReason);\r",
									"    \r",
									"}\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/task/{{taskId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"task",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Set cp-border-2 Device Role",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "467def2b-193c-46ba-91fb-0c1f5c51cb5d",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"taskId\", data.response.taskId);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest)",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-auth-token",
								"value": "{{dnacToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"id\":\"{{devCpBorder2Id}}\",\n\t\"role\":\"BORDER ROUTER\",\n\t\"roleSource\":\"MANUAL\"}"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/network-device/brief",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"network-device",
								"brief"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"var latestRequest = pm.variables.get(\"latestRequest\");\r",
									"var service = data.response.serviceType;\r",
									"var isError = data.response.isError.toString();\r",
									"\r",
									"\r",
									"if (isError == \"false\") {\r",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");\r",
									"}\r",
									"else {\r",
									"    console.log(\"........ \" + latestRequest + \" generated an ERROR !!!!!\");\r",
									"    console.log(\"........ Service type is \" + service);\r",
									"    console.log(\"........ Failure reason is \" + data.response.failureReason);\r",
									"    \r",
									"}\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/task/{{taskId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"task",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Set edge-1 Device Role",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e359114d-af50-4991-8a72-9e3b55427823",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"taskId\", data.response.taskId);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest)",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-auth-token",
								"value": "{{dnacToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"id\":\"{{devEdge1Id}}\",\n\t\"role\":\"ACCESS\",\n\t\"roleSource\":\"MANUAL\"}"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/network-device/brief",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"network-device",
								"brief"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Status Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"var latestRequest = pm.variables.get(\"latestRequest\");\r",
									"var service = data.response.serviceType;\r",
									"var isError = data.response.isError.toString();\r",
									"\r",
									"\r",
									"if (isError == \"false\") {\r",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");\r",
									"}\r",
									"else {\r",
									"    console.log(\"........ \" + latestRequest + \" generated an ERROR !!!!!\");\r",
									"    console.log(\"........ Service type is \" + service);\r",
									"    console.log(\"........ Failure reason is \" + data.response.failureReason);\r",
									"    \r",
									"}\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/task/{{taskId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"task",
								"{{taskId}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "2. Initial Design",
			"item": [
				{
					"name": "Get Global Object ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"dsgnGlobalId\", data.response[0].id);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-auth-token",
								"value": "{{dnacToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/group?groupName=global",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"group"
							],
							"query": [
								{
									"key": "groupName",
									"value": "global"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create San Jose Area",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"taskId\", data.response.taskId);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest)",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-auth-token",
								"value": "{{dnacToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"groupTypeList\":[\"SITE\"],\n\t\"parentId\":\"{{dsgnGlobalId}}\",\n\t\"childIds\":[\"\"],\n\t\"name\":\"San Jose\",\n\t\"id\":\"\",\n\t\"additionalInfo\":[{\n\t\t\"nameSpace\":\"Location\",\n\t\t\"attributes\":{\"type\":\"area\"}\n\t\t}]\n\t\n}"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/group/",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"group",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"var latestRequest = pm.variables.get(\"latestRequest\");\r",
									"var service = data.response.serviceType;\r",
									"var isError = data.response.isError.toString();\r",
									"\r",
									"\r",
									"if (isError == \"false\") {\r",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");\r",
									"}\r",
									"else {\r",
									"    console.log(\"........ \" + latestRequest + \" generated an ERROR !!!!!\");\r",
									"    console.log(\"........ Service type is \" + service);\r",
									"    console.log(\"........ Failure reason is \" + data.response.failureReason);\r",
									"    \r",
									"}\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/task/{{taskId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"task",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get San Jose Area Object ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"dsgnAreaTopId\", data.response[0].id);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/group?groupName=San%20Jose",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"group"
							],
							"query": [
								{
									"key": "groupName",
									"value": "San%20Jose"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create SJC-13",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"taskId\", data.response.taskId);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest)",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"groupTypeList\":[\"SITE\"],\n\t\"parentId\":\"{{dsgnAreaTopId}}\",\n\t\"childIds\":[\"\"],\n\t\"name\":\"SJC-13\",\n\t\"id\":\"\",\n\t\"additionalInfo\":[{\n\t\t\"nameSpace\":\"Location\",\n\t\t\"attributes\":{\n\t\t\t\"latitude\":\"37.409598\",\n\t\t\t\"longitude\":\"-121.928828\",\n\t\t\t\"address\":\"\",\n\t\t\t\"type\":\"building\",\n\t\t\t\"country\":\"United States\"\n\t\t\t}\n\t\t}]\n\t\n}\n"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/group/",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"group",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"var latestRequest = pm.variables.get(\"latestRequest\");\r",
									"var service = data.response.serviceType;\r",
									"var isError = data.response.isError.toString();\r",
									"\r",
									"\r",
									"if (isError == \"false\") {\r",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");\r",
									"}\r",
									"else {\r",
									"    console.log(\"........ \" + latestRequest + \" generated an ERROR !!!!!\");\r",
									"    console.log(\"........ Service type is \" + service);\r",
									"    console.log(\"........ Failure reason is \" + data.response.failureReason);\r",
									"    \r",
									"}\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/task/{{taskId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"task",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get SJC-13 Object ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"dsgnBldg13Id\", data.response[0].id);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-auth-token",
								"value": "{{dnacToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/group?groupName=SJC-13",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"group"
							],
							"query": [
								{
									"key": "groupName",
									"value": "SJC-13"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create SJC-13-1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"taskId\", data.response.taskId);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest)",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"type\":4,\n\t\"status\":\"INFORMATION\",\n\t\"contact\":\"\",\n\t\"groupInstanceUuid\":\"\",\n\t\"buildingCount\":0,\n\t\"floorCount\":0,\n\t\"outdoorAreaCount\":0,\n\t\"apCount\":0,\n\t\"criticalRadioCount\":0,\n\t\"wirelessClientsCount\":0,\n\t\"maintainAspectRatio\":false,\n\t\"geometry\":{\"type\":\"DUMMYTYPE\",\n\t\"height\":\"10.00\",\"width\":\"100.00\",\n\t\"offsetX\":0,\n\t\"offsetY\":0,\n\t\"length\":\"100.00\"},\n\t\"parentGroupUuid\":\"{{dsgnBldg13Id}}\",\n\t\"dot11aRadioCount\":0,\n\t\"dot11bRadioCount\":0,\n\t\"dot11gRadioCount\":0,\n\t\"incomplete\":false,\n\t\"floorTotalCount\":0,\n\t\"basementTotalCount\":0,\n\t\"rfModel\":60060,\n\t\"name\":\"SJC-13-1\"}\n"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/dna-maps-service/domains",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"dna-maps-service",
								"domains"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"var latestRequest = pm.variables.get(\"latestRequest\");\r",
									"var service = data.response.serviceType;\r",
									"var isError = data.response.isError.toString();\r",
									"\r",
									"\r",
									"if (isError == \"false\") {\r",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");\r",
									"}\r",
									"else {\r",
									"    console.log(\"........ \" + latestRequest + \" generated an ERROR !!!!!\");\r",
									"    console.log(\"........ Service type is \" + service);\r",
									"    console.log(\"........ Failure reason is \" + data.response.failureReason);\r",
									"    \r",
									"}\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/task/{{taskId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"task",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create SJC-13-MDF",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"taskId\", data.response.taskId);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest)",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"type\":4,\n\t\"status\":\"INFORMATION\",\n\t\"contact\":\"\",\n\t\"groupInstanceUuid\":\"\",\n\t\"buildingCount\":0,\n\t\"floorCount\":0,\n\t\"outdoorAreaCount\":0,\n\t\"apCount\":0,\n\t\"criticalRadioCount\":0,\n\t\"wirelessClientsCount\":0,\n\t\"maintainAspectRatio\":false,\n\t\"geometry\":{\"type\":\"DUMMYTYPE\",\n\t\"height\":\"10.00\",\"width\":\"100.00\",\n\t\"offsetX\":0,\n\t\"offsetY\":0,\n\t\"length\":\"100.00\"},\n\t\"parentGroupUuid\":\"{{dsgnBldg13Id}}\",\n\t\"dot11aRadioCount\":0,\n\t\"dot11bRadioCount\":0,\n\t\"dot11gRadioCount\":0,\n\t\"incomplete\":false,\n\t\"floorTotalCount\":0,\n\t\"basementTotalCount\":0,\n\t\"rfModel\":60060,\n\t\"name\":\"SJC-13-MDF\"}\n"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/dna-maps-service/domains",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"dna-maps-service",
								"domains"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"var latestRequest = pm.variables.get(\"latestRequest\");\r",
									"var service = data.response.serviceType;\r",
									"var isError = data.response.isError.toString();\r",
									"\r",
									"\r",
									"if (isError == \"false\") {\r",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");\r",
									"}\r",
									"else {\r",
									"    console.log(\"........ \" + latestRequest + \" generated an ERROR !!!!!\");\r",
									"    console.log(\"........ Service type is \" + service);\r",
									"    console.log(\"........ Failure reason is \" + data.response.failureReason);\r",
									"    \r",
									"}\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/task/{{taskId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"task",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create SJC-14",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"taskId\", data.response.taskId);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest)",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"groupTypeList\":[\"SITE\"],\n\t\"parentId\":\"{{dsgnAreaTopId}}\",\n\t\"childIds\":[\"\"],\n\t\"name\":\"SJC-14\",\n\t\"id\":\"\",\n\t\"additionalInfo\":[{\n\t\t\"nameSpace\":\"Location\",\n\t\t\"attributes\":{\n\t\t\t\"latitude\":\"37.4071557\",\n\t\t\t\"longitude\":\"-121.928679\",\n\t\t\t\"address\":\"\",\n\t\t\t\"type\":\"building\",\n\t\t\t\"country\":\"United States\"\n\t\t\t}\n\t\t}]\n\t\n}\n"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/group/",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"group",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"var latestRequest = pm.variables.get(\"latestRequest\");\r",
									"var service = data.response.serviceType;\r",
									"var isError = data.response.isError.toString();\r",
									"\r",
									"\r",
									"if (isError == \"false\") {\r",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");\r",
									"}\r",
									"else {\r",
									"    console.log(\"........ \" + latestRequest + \" generated an ERROR !!!!!\");\r",
									"    console.log(\"........ Service type is \" + service);\r",
									"    console.log(\"........ Failure reason is \" + data.response.failureReason);\r",
									"    \r",
									"}\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/task/{{taskId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"task",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get SJC-BLD-14 Object ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"dsgnBldg14Id\", data.response[0].id);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-auth-token",
								"value": "{{dnacToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/group?groupName=SJC-14",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"group"
							],
							"query": [
								{
									"key": "groupName",
									"value": "SJC-14"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"var latestRequest = pm.variables.get(\"latestRequest\");\r",
									"var service = data.response.serviceType;\r",
									"var isError = data.response.isError.toString();\r",
									"\r",
									"\r",
									"if (isError == \"false\") {\r",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");\r",
									"}\r",
									"else {\r",
									"    console.log(\"........ \" + latestRequest + \" generated an ERROR !!!!!\");\r",
									"    console.log(\"........ Service type is \" + service);\r",
									"    console.log(\"........ Failure reason is \" + data.response.failureReason);\r",
									"    \r",
									"}\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/task/{{taskId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"task",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create SJC-14-1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"taskId\", data.response.taskId);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest)",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-auth-token",
								"value": "{{dnacToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"type\":4,\n\t\"status\":\"INFORMATION\",\n\t\"contact\":\"\",\n\t\"groupInstanceUuid\":\"\",\n\t\"buildingCount\":0,\n\t\"floorCount\":0,\n\t\"outdoorAreaCount\":0,\n\t\"apCount\":0,\n\t\"criticalRadioCount\":0,\n\t\"wirelessClientsCount\":0,\n\t\"maintainAspectRatio\":false,\n\t\"geometry\":{\"type\":\"DUMMYTYPE\",\n\t\"height\":\"10.00\",\"width\":\"100.00\",\n\t\"offsetX\":0,\n\t\"offsetY\":0,\n\t\"length\":\"100.00\"},\n\t\"parentGroupUuid\":\"{{dsgnBldg14Id}}\",\n\t\"dot11aRadioCount\":0,\n\t\"dot11bRadioCount\":0,\n\t\"dot11gRadioCount\":0,\n\t\"incomplete\":false,\n\t\"floorTotalCount\":0,\n\t\"basementTotalCount\":0,\n\t\"rfModel\":60060,\n\t\"name\":\"SJC-14-1\"}\n"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/dna-maps-service/domains",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"dna-maps-service",
								"domains"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"var latestRequest = pm.variables.get(\"latestRequest\");\r",
									"var service = data.response.serviceType;\r",
									"var isError = data.response.isError.toString();\r",
									"\r",
									"\r",
									"if (isError == \"false\") {\r",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");\r",
									"}\r",
									"else {\r",
									"    console.log(\"........ \" + latestRequest + \" generated an ERROR !!!!!\");\r",
									"    console.log(\"........ Service type is \" + service);\r",
									"    console.log(\"........ Failure reason is \" + data.response.failureReason);\r",
									"    \r",
									"}\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/task/{{taskId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"task",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Global Configuration Version",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var data = JSON.parse(responseBody);",
									"",
									"postman.setEnvironmentVariable(\"dsgnGlobalConfVersion\",data.response[0].version + 1);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/commonsetting/global/-1",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"commonsetting",
								"global",
								"-1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Set Global Design Settings and Activate Global Credentials",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"taskId\", data.response.taskId);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest)",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[{\n\t\"instanceType\":\"pan\",\n\t\"namespace\":\"global\",\n\t\"type\":\"pan.setting\",\n\t\"key\":\"aaa.server.pan.network\",\n\t\"version\": {{dsgnGlobalConfVersion}},\n\t\"value\":[\"100.64.0.100\"],\n\t\"groupUuid\":\"-1\",\n\t\"inheritedGroupUuid\":\"\",\n\t\"inheritedGroupName\":\"\"\n\t\n},\n{\n    \"instanceType\": \"aaa\",\n    \"namespace\": \"global\",\n    \"type\": \"aaa.setting\",\n    \"key\": \"aaa.network.server.1\",\n    \"version\": {{dsgnGlobalConfVersion}},\n    \"value\": [{\n    \t\"ipAddress\": \"100.64.0.100\",\n    \t\"protocol\": \"TACACS\"\n\t}],\n    \"groupUuid\": \"-1\",\n    \"inheritedGroupUuid\": \"\",\n    \"inheritedGroupName\": \"\"\n},\n{\n    \"instanceType\": \"pan\",\n    \"namespace\": \"global\",\n    \"type\": \"pan.setting\",\n    \"key\": \"aaa.server.pan.endpoint\",\n    \"version\": {{dsgnGlobalConfVersion}},\n    \"value\": [\"100.64.0.100\"],\n    \"groupUuid\": \"-1\",\n    \"inheritedGroupUuid\": \"\",\n    \"inheritedGroupName\": \"\"\n},\n{\n    \"instanceType\": \"aaa\",\n    \"namespace\": \"global\",\n    \"type\": \"aaa.setting\",\n    \"key\": \"aaa.endpoint.server.1\",\n    \"version\": {{dsgnGlobalConfVersion}},\n    \"value\": [{\n    \t\"ipAddress\": \"100.64.0.100\",\n    \t\"protocol\": \"RADIUS\"\n\t}],\n    \"groupUuid\": \"-1\",\n    \"inheritedGroupUuid\": \"\",\n    \"inheritedGroupName\": \"\"\n},\n{\n    \"instanceType\": \"ip\",\n    \"namespace\": \"global\",\n    \"type\": \"ip.address\",\n    \"key\": \"ntp.server\",\n    \"version\": {{dsgnGlobalConfVersion}},\n    \"value\": [\"100.127.0.1\"],\n    \"groupUuid\": \"-1\",\n    \"inheritedGroupUuid\": \"\",\n    \"inheritedGroupName\": \"\"\n},\n{\n    \"instanceType\": \"ip\",\n    \"namespace\": \"global\",\n    \"type\": \"ip.address\",\n    \"key\": \"dhcp.server\",\n    \"version\": {{dsgnGlobalConfVersion}},\n    \"value\": [\"100.127.0.1\",\"100.64.0.100\"],\n    \"groupUuid\": \"-1\",\n    \"inheritedGroupUuid\": \"\",\n    \"inheritedGroupName\": \"\"\n},\n{\n    \"instanceType\": \"dns\",\n    \"namespace\": \"global\",\n    \"type\": \"dns.setting\",\n    \"key\": \"dns.server\",\n    \"version\": {{dsgnGlobalConfVersion}},\n    \"value\": [\n{\n    \"domainName\": \"dcloud.cisco.com\",\n    \"primaryIpAddress\": \"208.67.222.222\",\n    \"secondaryIpAddress\": \"208.67.220.220\"\n}\n    ],\n    \"groupUuid\": \"-1\",\n    \"inheritedGroupUuid\": \"\",\n    \"inheritedGroupName\": \"\"\n},   \n{\n\t\"instanceType\":\"reference\",\n\t\"namespace\":\"global\",\n\t\"type\":\"reference.setting\",\n\t\"key\":\"credential.cli\",\n\t\"version\":{{dsgnGlobalConfVersion}},\n\t\"value\":[{\n\t\t\"objReferences\":[\"{{credCliUserId}}\"],\n\t\t\"type\":\"credential_cli\",\n\t\t\"url\":\"\"\n\t\t\n\t}],\n\t\"groupUuid\":\"-1\",\n\t\"inheritedGroupUuid\":\"\",\n\t\"inheritedGroupName\":\"\"},\n{\n\t\"instanceType\":\"reference\",\n\t\"namespace\":\"global\",\n\t\"type\":\"reference.setting\",\n\t\"key\":\"credential.snmp_v2_read\",\n\t\"version\":{{dsgnGlobalConfVersion}},\n\t\"value\":[{\n\t\t\"objReferences\":[\"{{credSnmpRoId}}\"],\n\t\t\"type\":\"credential_snmp_v2_read\",\n\t\t\"url\":\"\"\n\t\t\n\t}],\n\t\"groupUuid\":\"-1\",\n\t\"inheritedGroupUuid\":\"\",\n\t\"inheritedGroupName\":\"\"},\n\n{\n\t\"instanceType\":\"reference\",\n\t\"namespace\":\"global\",\n\t\"type\":\"reference.setting\",\n\t\"key\":\"credential.snmp_v2_write\",\n\t\"version\":{{dsgnGlobalConfVersion}},\n\t\"value\":[{\n\t\t\"objReferences\":[\"{{credSnmpRwId}}\"],\n\t\t\"type\":\"credential_snmp_v2_write\",\n\t\t\"url\":\"\"\n\t\t\n\t}],\n\t\"groupUuid\":\"-1\",\n\t\"inheritedGroupUuid\":\"\",\n\t\"inheritedGroupName\":\"\"\n\t\n}]"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/commonsetting/global/-1",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"commonsetting",
								"global",
								"-1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"var latestRequest = pm.variables.get(\"latestRequest\");\r",
									"var service = data.response.serviceType;\r",
									"var isError = data.response.isError.toString();\r",
									"\r",
									"\r",
									"if (isError == \"false\") {\r",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");\r",
									"}\r",
									"else {\r",
									"    console.log(\"........ \" + latestRequest + \" generated an ERROR !!!!!\");\r",
									"    console.log(\"........ Service type is \" + service);\r",
									"    console.log(\"........ Failure reason is \" + data.response.failureReason);\r",
									"    \r",
									"}\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/task/{{taskId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"task",
								"{{taskId}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "3. Initial Device Provisioning",
			"item": [
				{
					"name": "Get SJC-13 Floor IDs",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "479e440f-62e7-445f-b894-bc3a3d97e5d3",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var data = JSON.parse(responseBody);",
									"",
									"for (var i=0; i < data.response.length; i++) {",
									"    if (data.response[i].name == \"SJC-13-MDF\") {",
									"        postman.setEnvironmentVariable(\"dsgnSjc13MdfId\", data.response[i].id);",
									"    }",
									"    if (data.response[i].name == \"SJC-13-1\") {",
									"        postman.setEnvironmentVariable(\"dsgnSjc13FirstFloorId\", data.response[i].id);",
									"    }",
									"",
									"}",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/group/{{dsgnBldg13Id}}/child?level=1",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"group",
								"{{dsgnBldg13Id}}",
								"child"
							],
							"query": [
								{
									"key": "level",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Add edge-1 to SJC-13-1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"taskId\", data.response.taskId);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"networkdevice\":[\"{{devEdge1Id}}\"]\n\t\n}"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/group/{{dsgnSjc13FirstFloorId}}/member",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"group",
								"{{dsgnSjc13FirstFloorId}}",
								"member"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"var latestRequest = pm.variables.get(\"latestRequest\");\r",
									"var service = data.response.serviceType;\r",
									"var isError = data.response.isError.toString();\r",
									"\r",
									"\r",
									"if (isError == \"false\") {\r",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");\r",
									"}\r",
									"else {\r",
									"    console.log(\"........ \" + latestRequest + \" generated an ERROR !!!!!\");\r",
									"    console.log(\"........ Service type is \" + service);\r",
									"    console.log(\"........ Failure reason is \" + data.response.failureReason);\r",
									"    \r",
									"}\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/task/{{taskId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"task",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add cp-borders to SJC-13-MDF",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"taskId\", data.response.taskId);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"networkdevice\":\n\t[\n\t\t\"{{devCpBorder1Id}}\",\n\t\t\"{{devCpBorder2Id}}\"\n\t]\n\t\n}"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/group/{{dsgnSjc13MdfId}}/member",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"group",
								"{{dsgnSjc13MdfId}}",
								"member"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"var latestRequest = pm.variables.get(\"latestRequest\");\r",
									"var service = data.response.serviceType;\r",
									"var isError = data.response.isError.toString();\r",
									"\r",
									"\r",
									"if (isError == \"false\") {\r",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");\r",
									"}\r",
									"else {\r",
									"    console.log(\"........ \" + latestRequest + \" generated an ERROR !!!!!\");\r",
									"    console.log(\"........ Service type is \" + service);\r",
									"    console.log(\"........ Failure reason is \" + data.response.failureReason);\r",
									"    \r",
									"}\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/task/{{taskId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"task",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Edge-1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"taskId\", data.response.taskId);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n\t{\n\t\t\"type\":\"DeviceInfo\",\n\t\t\"name\":\"{{devEdge1FullName}}\",\n\t\t\"networkDeviceId\":\"{{devEdge1Id}}\",\n\t\t\"siteId\":\"{{dsgnSjc13FirstFloorId}}\"\n\t\t\n\t}\n]"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/data/customer-facing-service/DeviceInfo",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"data",
								"customer-facing-service",
								"DeviceInfo"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"var latestRequest = pm.variables.get(\"latestRequest\");\r",
									"var service = data.response.serviceType;\r",
									"var isError = data.response.isError.toString();\r",
									"\r",
									"\r",
									"if (isError == \"false\") {\r",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");\r",
									"}\r",
									"else {\r",
									"    console.log(\"........ \" + latestRequest + \" generated an ERROR !!!!!\");\r",
									"    console.log(\"........ Service type is \" + service);\r",
									"    console.log(\"........ Failure reason is \" + data.response.failureReason);\r",
									"    \r",
									"}\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/task/{{taskId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"task",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update cp-border-1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"taskId\", data.response.taskId);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n\t{\n\t\t\"type\":\"DeviceInfo\",\n\t\t\"name\":\"{{devCpBorder1FullName}}\",\n\t\t\"networkDeviceId\":\"{{devCpBorder1Id}}\",\n\t\t\"siteId\":\"{{dsgnSjc13MdfId}}\"\n\t\t\n\t}\n]"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/data/customer-facing-service/DeviceInfo",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"data",
								"customer-facing-service",
								"DeviceInfo"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"var latestRequest = pm.variables.get(\"latestRequest\");\r",
									"var service = data.response.serviceType;\r",
									"var isError = data.response.isError.toString();\r",
									"\r",
									"\r",
									"if (isError == \"false\") {\r",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");\r",
									"}\r",
									"else {\r",
									"    console.log(\"........ \" + latestRequest + \" generated an ERROR !!!!!\");\r",
									"    console.log(\"........ Service type is \" + service);\r",
									"    console.log(\"........ Failure reason is \" + data.response.failureReason);\r",
									"    \r",
									"}\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/task/{{taskId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"task",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update cp-border-2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"taskId\", data.response.taskId);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n\t{\n\t\t\"type\":\"DeviceInfo\",\n\t\t\"name\":\"{{devCpBorder2FullName}}\",\n\t\t\"networkDeviceId\":\"{{devCpBorder2Id}}\",\n\t\t\"siteId\":\"{{dsgnSjc13MdfId}}\"\n\t\t\n\t}\n]"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/data/customer-facing-service/DeviceInfo",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"data",
								"customer-facing-service",
								"DeviceInfo"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"var latestRequest = pm.variables.get(\"latestRequest\");\r",
									"var service = data.response.serviceType;\r",
									"var isError = data.response.isError.toString();\r",
									"\r",
									"\r",
									"if (isError == \"false\") {\r",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");\r",
									"}\r",
									"else {\r",
									"    console.log(\"........ \" + latestRequest + \" generated an ERROR !!!!!\");\r",
									"    console.log(\"........ Service type is \" + service);\r",
									"    console.log(\"........ Failure reason is \" + data.response.failureReason);\r",
									"    \r",
									"}\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/task/{{taskId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"task",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Network Settings",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3bf4fce6-02fe-45d8-8363-3ff290e0048a",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var data = JSON.parse(responseBody);",
									"var devCpBorder1Name = pm.variables.get(\"devCpBorder1Name\");",
									"var devCpBorder2Name = pm.variables.get(\"devCpBorder2Name\");",
									"var devEdge1Name = pm.variables.get(\"devEdge1Name\");",
									"",
									"for (var i=0; i < data.response.length; i++) {",
									"    if (data.response[i].hostname.includes(devCpBorder1Name)) {",
									"        postman.setEnvironmentVariable(\"devCpBorder1Id\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"devCpBorder1FullName\", data.response[i].hostname);",
									"        postman.setEnvironmentVariable(\"devCpBorder1MgmtIp\", data.response[i].managementIpAddress);",
									"    }",
									"    else if (data.response[i].hostname.includes (devCpBorder2Name)) {",
									"        postman.setEnvironmentVariable(\"devCpBorder2Id\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"devCpBorder2FullName\", data.response[i].hostname);",
									"        postman.setEnvironmentVariable(\"devCpBorder2MgmtIp\", data.response[i].managementIpAddress);",
									"    }",
									"    else if (data.response[i].hostname.includes (devEdge1Name)) {",
									"        postman.setEnvironmentVariable(\"devEdge1Id\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"devEdge1FullName\", data.response[i].hostname);",
									"        postman.setEnvironmentVariable(\"devEdge1MgmtIp\", data.response[i].managementIpAddress);",
									"    }",
									"}",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/network-device/",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"network-device",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Status - Pause 1 min",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"var latestRequest = pm.variables.get(\"latestRequest\");",
									"var service = data.response.serviceType;",
									"var isError = data.response.isError.toString();",
									"",
									"",
									"if (isError == \"false\") {",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");",
									"}",
									"else {",
									"    console.log(\"........ \" + latestRequest + \" generated an ERROR !!!!!\");",
									"    console.log(\"........ Service type is \" + service);",
									"    console.log(\"........ Failure reason is \" + data.response.failureReason);",
									"    ",
									"}",
									"",
									"console.log(\"Sleeping for one min.\");",
									"setTimeout(function(){}, 60000);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/task/{{taskId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"task",
								"{{taskId}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "4. Define Fabric and Border Automation",
			"item": [
				{
					"name": "Create Global-Pool-1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"taskId\", data.response.taskId);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"ipPoolCidr\":\"100.96.0.0/11\",\n\t\"ipPoolName\":\"Global-Pool-1\",\n\t\"gateways\":[\"100.96.0.1\"],\n\t\"dhcpServerIps\":[],\n\t\"dnsServerIps\":[],\n\t\"overlapping\":false\n\t\n}"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/ippool",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"ippool"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"var latestRequest = pm.variables.get(\"latestRequest\");\r",
									"var service = data.response.serviceType;\r",
									"var isError = data.response.isError.toString();\r",
									"\r",
									"\r",
									"if (isError == \"false\") {\r",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");\r",
									"}\r",
									"else {\r",
									"    console.log(\"........ \" + latestRequest + \" generated an ERROR !!!!!\");\r",
									"    console.log(\"........ Service type is \" + service);\r",
									"    console.log(\"........ Failure reason is \" + data.response.failureReason);\r",
									"    \r",
									"}\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/task/{{taskId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"task",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Global IP Pool ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var data = JSON.parse(responseBody);",
									"",
									"for (var i=0; i < data.response.length; i++) {",
									"    if (data.response[i].ipPoolName == \"Global-Pool-1\") {",
									"        postman.setEnvironmentVariable(\"dsgnGlobalPool1Id\", data.response[i].id);",
									"    }",
									"}",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-auth-token",
								"value": "{{dnacToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/ippool",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"ippool"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Transit-Pool",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"taskId\", data.response.taskId);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"context\":\n\t[{\n\t\t\"contextKey\":\"siteId\",\n\t\t\"contextValue\":\"{{dsgnAreaTopId}}\"\n\t\t\n\t}],\n\t\t\"shared\":true,\n\t\t\"ipPoolOwner\":\"DNAC\",\n\t\t\"parentUuid\":\"{{dsgnGlobalPool1Id}}\",\n\t\t\"ipPoolName\":\"Transit-Pool\",\n\t\t\"overlapping\":false,\n\t\t\"gateways\":[\"100.126.1.1\"],\n\t\t\"dnsServerIps\":[],\n\t\t\"dhcpServerIps\":[],\n\t\t\"ipPoolCidr\":\"100.126.1.0/24\"\n\t\n}"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/ippool/subpool",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"ippool",
								"subpool"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"var latestRequest = pm.variables.get(\"latestRequest\");\r",
									"var service = data.response.serviceType;\r",
									"var isError = data.response.isError.toString();\r",
									"\r",
									"\r",
									"if (isError == \"false\") {\r",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");\r",
									"}\r",
									"else {\r",
									"    console.log(\"........ \" + latestRequest + \" generated an ERROR !!!!!\");\r",
									"    console.log(\"........ Service type is \" + service);\r",
									"    console.log(\"........ Failure reason is \" + data.response.failureReason);\r",
									"    \r",
									"}\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/task/{{taskId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"task",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Transit-Pool Reservation ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "186a9a46-305e-4a21-abe6-6b20907ea0ab",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var data = JSON.parse(responseBody);",
									"",
									"for (var i=0; i < data.response.length; i++) {",
									"    if (data.response[i].ipPoolName == \"Transit-Pool\") {",
									"        postman.setEnvironmentVariable(\"dsgnTransitPoolId\", data.response[i].id);",
									"    }",
									"}",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "x-auth-token",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/ippool?parentUuid={{dsgnGlobalPool1Id}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"ippool"
							],
							"query": [
								{
									"key": "parentUuid",
									"value": "{{dsgnGlobalPool1Id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update San Jose with Transit-Pool Reservation ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"taskId\", data.response.taskId);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n\t{\n\t\t\"instanceType\":\"reference\",\n\t\t\"namespace\":\"global\",\n\t\t\"type\":\"reference.setting\",\n\t\t\"key\":\"ip.pool.generic.{{dsgnTransitPoolId}}\",\n\t\t\"value\":\n\t\t[\n\t\t\t{\"objReferences\":[\"{{dsgnTransitPoolId}}\"],\n\t\t\t\"type\":\"generic\",\"url\":\"\"\n\t\t\t\t\n\t\t\t}\n\t\t],\n\t\t\"groupUuid\":\"{{dsgnAreaTopId}}\"\n\t\t\n\t}\n]"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/commonsetting/global/{{dsgnAreaTopId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"commonsetting",
								"global",
								"{{dsgnAreaTopId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"var latestRequest = pm.variables.get(\"latestRequest\");\r",
									"var service = data.response.serviceType;\r",
									"var isError = data.response.isError.toString();\r",
									"\r",
									"\r",
									"if (isError == \"false\") {\r",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");\r",
									"}\r",
									"else {\r",
									"    console.log(\"........ \" + latestRequest + \" generated an ERROR !!!!!\");\r",
									"    console.log(\"........ Service type is \" + service);\r",
									"    console.log(\"........ Failure reason is \" + data.response.failureReason);\r",
									"    \r",
									"}\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/task/{{taskId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"task",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Area-Transit",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"taskId\", data.response.taskId);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n\t{\n\t\t\"type\":\"ConnectivityDomain\",\n\t\t\"name\":\"Area-Transit\",\n\t\t\"description\":\"\",\n\t\t\"domainType\":\"TRANSIT\",\n\t\t\"enableMonitoring\":true,\n\t\t\"transitType\":\"IP\",\n\t\t\"transitMetaData\":\n\t\t[\n\t\t\t{\"name\":\"BGP\",\n\t\t\t\"value\":\"65535\"\n\t\t\t\t\n\t\t\t}\n\t\t],\n\t\t\"deviceInfo\":[]\n\t\t\n\t}\n]"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/data/customer-facing-service/ConnectivityDomain",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"data",
								"customer-facing-service",
								"ConnectivityDomain"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"var latestRequest = pm.variables.get(\"latestRequest\");\r",
									"var service = data.response.serviceType;\r",
									"var isError = data.response.isError.toString();\r",
									"\r",
									"\r",
									"if (isError == \"false\") {\r",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");\r",
									"}\r",
									"else {\r",
									"    console.log(\"........ \" + latestRequest + \" generated an ERROR !!!!!\");\r",
									"    console.log(\"........ Service type is \" + service);\r",
									"    console.log(\"........ Failure reason is \" + data.response.failureReason);\r",
									"    \r",
									"}\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/task/{{taskId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"task",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Virtual Network Context",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var data = JSON.parse(responseBody);",
									"",
									"for (var i=0; i < data.response.length; i++) {",
									"    if (data.response[i].name == \"DEFAULT_VN\") {",
									"        postman.setEnvironmentVariable(\"vncDefaultVnId\", data.response[i].id);",
									"    }",
									"",
									"    if (data.response[i].name == \"INFRA_VN\") {",
									"        postman.setEnvironmentVariable(\"vncInfraVnId\", data.response[i].id);",
									"    }",
									"    ",
									"    if (data.response[i].name == \"Campus\") {",
									"        postman.setEnvironmentVariable(\"vncCampusVnId\", data.response[i].id);",
									"    }",
									"",
									"    if (data.response[i].name == \"Guest\") {",
									"        postman.setEnvironmentVariable(\"vncGuestVnId\", data.response[i].id);",
									"    }",
									"}",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/data/customer-facing-service/virtualnetworkcontext",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"data",
								"customer-facing-service",
								"virtualnetworkcontext"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create US West Fabric",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"taskId\", data.response.taskId);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n\t{\n\t\t\"type\":\"ConnectivityDomain\",\n\t\t\"name\":\"US West\",\n\t\t\"description\":\"\",\n\t\t\"domainType\":\"FABRIC_LAN\",\n\t\t\"virtualNetwork\":[],\n\t\t\"isDefault\":false,\n\t\t\"enableMonitoring\":true,\n\t\t\"siteSpecificDomain\":\n\t\t[\n\t\t\t{\"type\":\"ConnectivityDomain\",\n\t\t\t\"name\":\"Global/San_Jose_US_West\",\n\t\t\t\"description\":\"\",\n\t\t\t\"domainType\":\"FABRIC_SITE\",\n\t\t\t\"siteId\":\"{{dsgnAreaTopId}}\",\n\t\t\t\"virtualNetwork\":\n\t\t\t[\n\t\t\t\t{\n\t\t\t\t\t\"name\":\"DEFAULT_VN-Global/San_Jose_US_West\",\n\t\t\t\t\t\"isDefault\":true,\n\t\t\t\t\t\"isInfra\":false,\n\t\t\t\t\t\"virtualNetworkContextId\":\"{{vncDefaultVnId}}\",\n\t\t\t\t\t\"type\":\"VirtualNetwork\"\n\t\t\t\t\t\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\":\"INFRA_VN-Global/San_Jose_US_West\",\n\t\t\t\t\t\"isDefault\":false,\n\t\t\t\t\t\"isInfra\":true,\n\t\t\t\t\t\"virtualNetworkContextId\":\"{{vncInfraVnId}}\",\n\t\t\t\t\t\"type\":\"VirtualNetwork\"\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"isDefault\":false,\n\t\t\t\"enableMonitoring\":true\n\t\t\t\t\n\t\t\t}\n\t\t]\n\t\t\n\t}\n]"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/data/customer-facing-service/ConnectivityDomain",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"data",
								"customer-facing-service",
								"ConnectivityDomain"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"var latestRequest = pm.variables.get(\"latestRequest\");\r",
									"var service = data.response.serviceType;\r",
									"var isError = data.response.isError.toString();\r",
									"\r",
									"\r",
									"if (isError == \"false\") {\r",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");\r",
									"}\r",
									"else {\r",
									"    console.log(\"........ \" + latestRequest + \" generated an ERROR !!!!!\");\r",
									"    console.log(\"........ Service type is \" + service);\r",
									"    console.log(\"........ Failure reason is \" + data.response.failureReason);\r",
									"    \r",
									"}\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/task/{{taskId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"task",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Device Info - Initial",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var data = JSON.parse(responseBody);",
									"",
									"for (var i=0; i < data.response.length; i++) {",
									"    if (data.response[i].name.includes (\"edge-1\")) {",
									"        postman.setEnvironmentVariable(\"edge1DevinfoId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"edge1InstanceId\", data.response[i].instanceId);",
									"        postman.setEnvironmentVariable(\"edge1AuthEntityId\", data.response[i].authEntityId);",
									"        postman.setEnvironmentVariable(\"edge1DisplayName\", data.response[i].displayName);",
									"        postman.setEnvironmentVariable(\"edge1AuthEntityClass\", data.response[i].authEntityClass);",
									"        postman.setEnvironmentVariable(\"edge1InstanceTenantId\", data.response[i].instanceTenantId);",
									"        postman.setEnvironmentVariable(\"edge1CreateTime\", data.response[i].createTime);",
									"        postman.setEnvironmentVariable(\"edge1LastUpdateTime\", data.response[i].lastUpdateTime);",
									"        postman.setEnvironmentVariable(\"edge1Name\", data.response[i].name);",
									"        postman.setEnvironmentVariable(\"edge1Namespace\", data.response[i].namespace);",
									"        postman.setEnvironmentVariable(\"edge1ProvisioningState\", data.response[i].provisioningState);",
									"        postman.setEnvironmentVariable(\"edge1ResourceVersion\", data.response[i].resourceVersion);",
									"        postman.setEnvironmentVariable(\"edge1Type\", data.response[i].type);",
									"        postman.setEnvironmentVariable(\"edge1NetworkDeviceId\", data.response[i].networkDeviceId);",
									"        postman.setEnvironmentVariable(\"edge1SiteId\", data.response[i].siteId);",
									"        strNetworkWideSettings = JSON.stringify(data.response[i].networkWideSettings);",
									"        postman.setEnvironmentVariable(\"edge1NetworkWideSettings\",strNetworkWideSettings );",
									"    }",
									"        if (data.response[i].name.includes (\"cp-border-1\")) {",
									"        postman.setEnvironmentVariable(\"cpborder1DevinfoId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"cpborder1InstanceId\", data.response[i].instanceId);",
									"        postman.setEnvironmentVariable(\"cpborder1AuthEntityId\", data.response[i].authEntityId);",
									"        postman.setEnvironmentVariable(\"cpborder1DisplayName\", data.response[i].displayName);",
									"        postman.setEnvironmentVariable(\"cpborder1AuthEntityClass\", data.response[i].authEntityClass);",
									"        postman.setEnvironmentVariable(\"cpborder1InstanceTenantId\", data.response[i].instanceTenantId);",
									"        postman.setEnvironmentVariable(\"cpborder1CreateTime\", data.response[i].createTime);",
									"        postman.setEnvironmentVariable(\"cpborder1LastUpdateTime\", data.response[i].lastUpdateTime);",
									"        postman.setEnvironmentVariable(\"cpborder1Name\", data.response[i].name);",
									"        postman.setEnvironmentVariable(\"cpborder1Namespace\", data.response[i].namespace);",
									"        postman.setEnvironmentVariable(\"cpborder1ProvisioningState\", data.response[i].provisioningState);",
									"        postman.setEnvironmentVariable(\"cpborder1ResourceVersion\", data.response[i].resourceVersion);",
									"        postman.setEnvironmentVariable(\"cpborder1Type\", data.response[i].type);",
									"        postman.setEnvironmentVariable(\"cpborder1NetworkDeviceId\", data.response[i].networkDeviceId);",
									"        postman.setEnvironmentVariable(\"cpborder1SiteId\", data.response[i].siteId);",
									"        strNetworkWideSettings = JSON.stringify(data.response[i].networkWideSettings);",
									"        postman.setEnvironmentVariable(\"cpborder1NetworkWideSettings\",strNetworkWideSettings );",
									"    }",
									"            if (data.response[i].name.includes (\"cp-border-2\")) {",
									"        postman.setEnvironmentVariable(\"cpborder2DevinfoId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"cpborder2InstanceId\", data.response[i].instanceId);",
									"        postman.setEnvironmentVariable(\"cpborder2AuthEntityId\", data.response[i].authEntityId);",
									"        postman.setEnvironmentVariable(\"cpborder2DisplayName\", data.response[i].displayName);",
									"        postman.setEnvironmentVariable(\"cpborder2AuthEntityClass\", data.response[i].authEntityClass);",
									"        postman.setEnvironmentVariable(\"cpborder2InstanceTenantId\", data.response[i].instanceTenantId);",
									"        postman.setEnvironmentVariable(\"cpborder2CreateTime\", data.response[i].createTime);",
									"        postman.setEnvironmentVariable(\"cpborder2LastUpdateTime\", data.response[i].lastUpdateTime);",
									"        postman.setEnvironmentVariable(\"cpborder2Name\", data.response[i].name);",
									"        postman.setEnvironmentVariable(\"cpborder2Namespace\", data.response[i].namespace);",
									"        postman.setEnvironmentVariable(\"cpborder2ProvisioningState\", data.response[i].provisioningState);",
									"        postman.setEnvironmentVariable(\"cpborder2ResourceVersion\", data.response[i].resourceVersion);",
									"        postman.setEnvironmentVariable(\"cpborder2Type\", data.response[i].type);",
									"        postman.setEnvironmentVariable(\"cpborder2NetworkDeviceId\", data.response[i].networkDeviceId);",
									"        postman.setEnvironmentVariable(\"cpborder2SiteId\", data.response[i].siteId);",
									"        strNetworkWideSettings = JSON.stringify(data.response[i].networkWideSettings);",
									"        postman.setEnvironmentVariable(\"cpborder2NetworkWideSettings\",strNetworkWideSettings );",
									"    }",
									"}",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/data/customer-facing-service/DeviceInfo",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"data",
								"customer-facing-service",
								"DeviceInfo"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Fabric Data",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var data = JSON.parse(responseBody);",
									"",
									"",
									"    ",
									"for (var i=0; i < data.response.length; i++) {",
									"    if (data.response[i].name == \"US West\") {",
									"        postman.setEnvironmentVariable(\"fabId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"fabResourceVersion\", data.response[i].resourceVersion);",
									"         }",
									"    if (data.response[i].name.includes(\"San_Jose_US_West\")) {",
									"        postman.setEnvironmentVariable(\"fabSiteId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"fabSiteResourceVersion\", data.response[i].resourceVersion);",
									"        strFabVirtualNetworks=JSON.stringify(data.response[i].virtualNetwork);",
									"        postman.setEnvironmentVariable(\"fabVirtualNetworks\", strFabVirtualNetworks);",
									"         }",
									"    else if (data.response[i].name.includes(\"Transit\")) {",
									"        postman.setEnvironmentVariable(\"fabTransitId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"fabSiteTransitVersion\", data.response[i].resourceVersion);",
									"         }",
									"  ",
									"}",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/data/customer-facing-service/ConnectivityDomain",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"data",
								"customer-facing-service",
								"ConnectivityDomain"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Fabric Virtual Network",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var vncDefaultVnId = pm.variables.get(\"vncDefaultVnId\");",
									"var vncCampusId = pm.variables.get(\"vncCampusVnId\");",
									"var vncGuestId = pm.variables.get(\"vncGuestVnId\");",
									"var vncInfraVnId = pm.variables.get(\"vncInfraVnId\");",
									"",
									"console.log(vncDefaultVnId);",
									"",
									"var data = JSON.parse(responseBody);",
									"",
									"for (var i=0; i < data.response.length; i++) {",
									"    if (data.response[i].virtualNetworkContextId == vncDefaultVnId) {",
									"        postman.setEnvironmentVariable(\"vnDefaultVnId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnFullName\", data.response[i].name);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnNamespace\", data.response[i].namespace);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnAuthEntityId\", data.response[i].authEntityId);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnContextId\", data.response[i].virtualNetworkContextId);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnAuthEntityClass\", data.response[i].authEntityClass);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnL3Instance\", data.response[i].l3Instance);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnInstanceId\", data.response[i].instanceId);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnResourceVersion\", data.response[i].resourceVersion);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnInstanceVersion\", data.response[i].instanceVersion);",
									"    }",
									"    if (data.response[i].virtualNetworkContextId == vncCampusId) {",
									"        postman.setEnvironmentVariable(\"vnCampusId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"vnCampusFullName\", data.response[i].name);",
									"        postman.setEnvironmentVariable(\"vnCampusNamespace\", data.response[i].namespace);",
									"        postman.setEnvironmentVariable(\"vnCampusAuthEntityId\", data.response[i].authEntityId);",
									"        postman.setEnvironmentVariable(\"vnCampusContextId\", data.response[i].virtualNetworkContextId);",
									"        postman.setEnvironmentVariable(\"vnCampusAuthEntityClass\", data.response[i].authEntityClass);",
									"        postman.setEnvironmentVariable(\"vnCampusL3Instance\", data.response[i].l3Instance);",
									"        postman.setEnvironmentVariable(\"vnCampusInstanceId\", data.response[i].instanceId);",
									"        postman.setEnvironmentVariable(\"vnCampusResourceVersion\", data.response[i].resourceVersion);",
									"        postman.setEnvironmentVariable(\"vnCampusInstanceVersion\", data.response[i].instanceVersion);",
									"    }",
									"    if (data.response[i].virtualNetworkContextId == vncGuestId) {",
									"        postman.setEnvironmentVariable(\"vnGuestId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"vnGuestFullName\", data.response[i].name);",
									"        postman.setEnvironmentVariable(\"vnGuestNamespace\", data.response[i].namespace);",
									"        postman.setEnvironmentVariable(\"vnGuestAuthEntityId\", data.response[i].authEntityId);",
									"        postman.setEnvironmentVariable(\"vnGuestContextId\", data.response[i].virtualNetworkContextId);",
									"        postman.setEnvironmentVariable(\"vnGuestAuthEntityClass\", data.response[i].authEntityClass);",
									"        postman.setEnvironmentVariable(\"vnGuestL3Instance\", data.response[i].l3Instance);",
									"        postman.setEnvironmentVariable(\"vnGuestInstanceId\", data.response[i].instanceId);",
									"        postman.setEnvironmentVariable(\"vnGuestResourceVersion\", data.response[i].resourceVersion);",
									"        postman.setEnvironmentVariable(\"vnGuestInstanceVersion\", data.response[i].instanceVersion);",
									"    }",
									"    if (data.response[i].virtualNetworkContextId == vncInfraVnId) {",
									"        postman.setEnvironmentVariable(\"vnInfraId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"vnInfraFullName\", data.response[i].name);",
									"        postman.setEnvironmentVariable(\"vnInfraNamespace\", data.response[i].namespace);",
									"        postman.setEnvironmentVariable(\"vnInfraAuthEntityId\", data.response[i].authEntityId);",
									"        postman.setEnvironmentVariable(\"vnInfraContextId\", data.response[i].virtualNetworkContextId);",
									"        postman.setEnvironmentVariable(\"vnInfraAuthEntityClass\", data.response[i].authEntityClass);",
									"        postman.setEnvironmentVariable(\"vnInfraL3Instance\", data.response[i].l3Instance);",
									"        postman.setEnvironmentVariable(\"vnInfraInstanceId\", data.response[i].instanceId);",
									"        postman.setEnvironmentVariable(\"vnInfraResourceVersion\", data.response[i].resourceVersion);",
									"        postman.setEnvironmentVariable(\"vnInfraInstanceVersion\", data.response[i].instanceVersion);",
									"    }",
									"",
									"}",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/data/customer-facing-service/VirtualNetwork",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"data",
								"customer-facing-service",
								"VirtualNetwork"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Border1 + Infra + 1/0/2 to Fabric",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d247b1d4-7550-43b5-b4cf-c1e8e7f92111",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"taskId\", data.response.taskId);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n\t{\n\t\t\"id\":\"{{fabSiteId}}\",\n\t\t\"type\":\"ConnectivityDomain\",\n\t\t\"name\":\"Global/San_Jose_US_West\",\n\t\t\"domainType\":\"FABRIC_SITE\",\n\t\t\"isDefault\":false,\n\t\t\"virtualNetwork\":{{fabVirtualNetworks}},\n\t\t\"deviceInfo\":\n\t\t[\n\t\t\t{\n\t\t\t\t\"cfsChangeInfo\":[],\n\t\t\t\t\"configs\":[],\n\t\t\t\t\"createTime\":{{cpborder1CreateTime}},\n\t\t\t\t\"deployed\":false,\n\t\t\t\t\"deviceInterfaceInfo\":[],\n\t\t\t\t\"displayName\":\"{{cpborder1DisplayName}}\",\n\t\t\t\t\"id\":\"{{cpborder1DevinfoId}}\",\n\t\t\t\t\"instanceId\":{{cpborder1InstanceId}},\n\t\t\t\t\"instanceVersion\":{{cpborder1ResourceVersion}},\n\t\t\t\t\"isStale\":false,\n\t\t\t\t\"lastUpdateTime\":{{cpborder1LastUpdateTime}},\n\t\t\t\t\"name\":\"{{cpborder1Name}}\",\n\t\t\t\t\"namespace\":\"{{cpborder1Namespace}}\",\n\t\t\t\t\"networkDeviceId\":\"{{cpborder1NetworkDeviceId}}\",\n\t\t\t\t\"networkWideSettings\":{{cpborder1NetworkWideSettings}},\n\t\t\t\t\"provisioningState\":\"DEFINED\",\n\t\t\t\t\"roles\":[\"MAPSERVER\",\"BORDERNODE\"],\n\t\t\t\t\"siteId\":\"{{dsgnSjc13MdfId}}\",\n\t\t\t\t\"transitNetworks\":\n\t\t\t\t[{\"idRef\":\"{{fabTransitId}}\"}],\n\t\t\t\t\"type\":\"DeviceInfo\",\n\t\t\t\t\"wlan\":[],\n\t\t\t\t\"otherDevice\":[],\n\t\t\t\t\"deviceSettings\":\n\t\t\t\t{\n\t\t\t\t\t\"externalDomainRoutingProtocol\":\"BGP\",\n\t\t\t\t\t\"externalConnectivityIpPool\":\"{{dsgnTransitPoolId}}\",\n\t\t\t\t\t\"extConnectivitySettings\":\n\t\t\t\t\t[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"interfaceUuid\":\"GigabitEthernet1/0/2\",\n\t\t\t\t\t\t\t\"policyPropagationEnabled\":false,\n\t\t\t\t\t\t\t\"externalDomainProtocolNumber\":\"65535\",\n\t\t\t\t\t\t\t\"l3Handoff\":\n\t\t\t\t\t\t\t[{\"virtualNetwork\":{\"idRef\":\"{{vnInfraId}}\"}}],\n\t\t\t\t\t\t\t\"l2Handoff\":[]\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"internalDomainProtocolNumber\":\"65534\",\n\t\t\t\t\t\"nodeType\":[\"EXTERNAL\"],\n\t\t\t\t\t\"connectedTo\":[\"INTERNET\"]\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t\"multicastInfo\":[],\n\t\t\"enableMonitoring\":true,\n\t\t\"resourceVersion\":0,\n\t\t\"siteId\":\"{{dsgnAreaTopId}}\",\n\t\t\"siteSpecificDomain\":[],\n\t\t\"wirelessMulticastFeature\":false,\n\t\t\"isNativeMulticastEnabled\":false\n\t\t\t\t\t\t\n\t}\n]"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/data/customer-facing-service/ConnectivityDomain",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"data",
								"customer-facing-service",
								"ConnectivityDomain"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Status - Pause 1 Min",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"var latestRequest = pm.variables.get(\"latestRequest\");",
									"var service = data.response.serviceType;",
									"var isError = data.response.isError.toString();",
									"",
									"",
									"if (isError == \"false\") {",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");",
									"}",
									"else {",
									"    console.log(\"........ \" + latestRequest + \" generated an ERROR !!!!!\");",
									"    console.log(\"........ Service type is \" + service);",
									"    console.log(\"........ Failure reason is \" + data.response.failureReason);",
									"    ",
									"}",
									"",
									"",
									"",
									"console.log(\"Sleeping for one min.\");",
									"setTimeout(function(){}, 60000);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/task/{{taskId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"task",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Device Info - Border 1 in Fabric",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var data = JSON.parse(responseBody);",
									"var vnInfraId = pm.variables.get(\"vnInfraId\");",
									"",
									"for (var i=0; i < data.response.length; i++) {",
									"    if (data.response[i].name.includes (\"edge-1\")) {",
									"        postman.setEnvironmentVariable(\"edge1DevinfoId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"edge1InstanceId\", data.response[i].instanceId);",
									"        postman.setEnvironmentVariable(\"edge1AuthEntityId\", data.response[i].authEntityId);",
									"        postman.setEnvironmentVariable(\"edge1DisplayName\", data.response[i].displayName);",
									"        postman.setEnvironmentVariable(\"edge1AuthEntityClass\", data.response[i].authEntityClass);",
									"        postman.setEnvironmentVariable(\"edge1InstanceTenantId\", data.response[i].instanceTenantId);",
									"        postman.setEnvironmentVariable(\"edge1CreateTime\", data.response[i].createTime);",
									"        postman.setEnvironmentVariable(\"edge1LastUpdateTime\", data.response[i].lastUpdateTime);",
									"        postman.setEnvironmentVariable(\"edge1Name\", data.response[i].name);",
									"        postman.setEnvironmentVariable(\"edge1Namespace\", data.response[i].namespace);",
									"        postman.setEnvironmentVariable(\"edge1ProvisioningState\", data.response[i].provisioningState);",
									"        postman.setEnvironmentVariable(\"edge1ResourceVersion\", data.response[i].resourceVersion);",
									"        postman.setEnvironmentVariable(\"edge1Type\", data.response[i].type);",
									"        postman.setEnvironmentVariable(\"edge1NetworkDeviceId\", data.response[i].networkDeviceId);",
									"        postman.setEnvironmentVariable(\"edge1SiteId\", data.response[i].siteId);",
									"        strNetworkWideSettings = JSON.stringify(data.response[i].networkWideSettings);",
									"        postman.setEnvironmentVariable(\"edge1NetworkWideSettings\",strNetworkWideSettings );",
									"    }",
									"        if (data.response[i].name.includes (\"cp-border-1\")) {",
									"        postman.setEnvironmentVariable(\"cpborder1DevinfoId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"cpborder1InstanceId\", data.response[i].instanceId);",
									"        postman.setEnvironmentVariable(\"cpborder1AuthEntityId\", data.response[i].authEntityId);",
									"        postman.setEnvironmentVariable(\"cpborder1DisplayName\", data.response[i].displayName);",
									"        postman.setEnvironmentVariable(\"cpborder1AuthEntityClass\", data.response[i].authEntityClass);",
									"        postman.setEnvironmentVariable(\"cpborder1InstanceTenantId\", data.response[i].instanceTenantId);",
									"        postman.setEnvironmentVariable(\"cpborder1CreateTime\", data.response[i].createTime);",
									"        postman.setEnvironmentVariable(\"cpborder1LastUpdateTime\", data.response[i].lastUpdateTime);",
									"        postman.setEnvironmentVariable(\"cpborder1Name\", data.response[i].name);",
									"        postman.setEnvironmentVariable(\"cpborder1Namespace\", data.response[i].namespace);",
									"        postman.setEnvironmentVariable(\"cpborder1ProvisioningState\", data.response[i].provisioningState);",
									"        postman.setEnvironmentVariable(\"cpborder1ResourceVersion\", data.response[i].resourceVersion);",
									"        postman.setEnvironmentVariable(\"cpborder1Type\", data.response[i].type);",
									"        postman.setEnvironmentVariable(\"cpborder1NetworkDeviceId\", data.response[i].networkDeviceId);",
									"        postman.setEnvironmentVariable(\"cpborder1SiteId\", data.response[i].siteId);",
									"        strNetworkWideSettings = JSON.stringify(data.response[i].networkWideSettings);",
									"        postman.setEnvironmentVariable(\"cpborder1NetworkWideSettings\",strNetworkWideSettings );",
									"        postman.setEnvironmentVariable(\"cpborder1DevSettingsId\", data.response[i].deviceSettings.id);",
									"        postman.setEnvironmentVariable(\"cpborder1DevSettingsInstanceId\", data.response[i].deviceSettings.instanceId);",
									"        postman.setEnvironmentVariable(\"cpborder1DevSettingsInstanceVersion\", data.response[i].deviceSettings.instanceVersion);",
									"        postman.setEnvironmentVariable(\"extConnBorder1Int\", data.response[i].deviceSettings.extConnectivitySettings[0].id);",
									"        postman.setEnvironmentVariable(\"extConnBorder1IntInstanceId\", data.response[i].deviceSettings.extConnectivitySettings[0].instanceId);",
									"        postman.setEnvironmentVariable(\"extConnBorder1IntInstanceVersion\", data.response[i].deviceSettings.extConnectivitySettings[0].instanceVersion);",
									"        for (var x=0; x < data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff.length; x++) {",
									"            console.log(x)",
									"            console.log(vnInfraId)",
									"            console.log(data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].virtualNetwork.idRe)",
									"            if (data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].virtualNetwork.idRef == vnInfraId) {",
									"             console.log(data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].id)",
									"             console.log(\"match id\")",
									"             postman.setEnvironmentVariable(\"extConnBorder1L3InfraId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].id);",
									"             postman.setEnvironmentVariable(\"extConnBorder1L3InfraInstanceId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].instanceId);",
									"             postman.setEnvironmentVariable(\"extConnBorder1L3InfraInstanceVersion\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].instanceVersion);",
									"             postman.setEnvironmentVariable(\"extConnBorder1L3InfraLocalIp\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].localIpAddress);",
									"             postman.setEnvironmentVariable(\"extConnBorder1L3InfraRemoteIp\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].remoteIpAddress);",
									"             postman.setEnvironmentVariable(\"extConnBorder1L3InfraVlanId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].vlanId);",
									"            }",
									"        }",
									"        }",
									"        if (data.response[i].name.includes (\"cp-border-2\")) {",
									"        postman.setEnvironmentVariable(\"cpborder2DevinfoId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"cpborder2InstanceId\", data.response[i].instanceId);",
									"        postman.setEnvironmentVariable(\"cpborder2AuthEntityId\", data.response[i].authEntityId);",
									"        postman.setEnvironmentVariable(\"cpborder2DisplayName\", data.response[i].displayName);",
									"        postman.setEnvironmentVariable(\"cpborder2AuthEntityClass\", data.response[i].authEntityClass);",
									"        postman.setEnvironmentVariable(\"cpborder2InstanceTenantId\", data.response[i].instanceTenantId);",
									"        postman.setEnvironmentVariable(\"cpborder2CreateTime\", data.response[i].createTime);",
									"        postman.setEnvironmentVariable(\"cpborder2LastUpdateTime\", data.response[i].lastUpdateTime);",
									"        postman.setEnvironmentVariable(\"cpborder2Name\", data.response[i].name);",
									"        postman.setEnvironmentVariable(\"cpborder2Namespace\", data.response[i].namespace);",
									"        postman.setEnvironmentVariable(\"cpborder2ProvisioningState\", data.response[i].provisioningState);",
									"        postman.setEnvironmentVariable(\"cpborder2ResourceVersion\", data.response[i].resourceVersion);",
									"        postman.setEnvironmentVariable(\"cpborder2Type\", data.response[i].type);",
									"        postman.setEnvironmentVariable(\"cpborder2NetworkDeviceId\", data.response[i].networkDeviceId);",
									"        postman.setEnvironmentVariable(\"cpborder2SiteId\", data.response[i].siteId);",
									"        strNetworkWideSettings = JSON.stringify(data.response[i].networkWideSettings);",
									"        postman.setEnvironmentVariable(\"cpborder2NetworkWideSettings\",strNetworkWideSettings );",
									"    }",
									"}",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/data/customer-facing-service/DeviceInfo",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"data",
								"customer-facing-service",
								"DeviceInfo"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Fabric Data",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var data = JSON.parse(responseBody);",
									"",
									"for (var i=0; i < data.response.length; i++) {",
									"    if (data.response[i].name == \"US West\") {",
									"        postman.setEnvironmentVariable(\"fabId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"fabResourceVersion\", data.response[i].resourceVersion);",
									"         }",
									"    if (data.response[i].name.includes(\"San_Jose_US_West\")) {",
									"        postman.setEnvironmentVariable(\"fabSiteId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"fabSiteResourceVersion\", data.response[i].resourceVersion);",
									"        strFabVirtualNetworks=JSON.stringify(data.response[i].virtualNetwork);",
									"        postman.setEnvironmentVariable(\"fabVirtualNetworks\", strFabVirtualNetworks);",
									"         }",
									"    else if (data.response[i].name.includes(\"Transit\")) {",
									"        postman.setEnvironmentVariable(\"fabTransitId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"fabSiteTransitVersion\", data.response[i].resourceVersion);",
									"         }",
									"  ",
									"}",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/data/customer-facing-service/ConnectivityDomain",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"data",
								"customer-facing-service",
								"ConnectivityDomain"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Fabric Virtual Network",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var vncDefaultVnId = pm.variables.get(\"vncDefaultVnId\");",
									"var vncCampusId = pm.variables.get(\"vncCampusVnId\");",
									"var vncGuestId = pm.variables.get(\"vncGuestVnId\");",
									"var vncInfraVnId = pm.variables.get(\"vncInfraVnId\");",
									"",
									"console.log(vncDefaultVnId);",
									"",
									"var data = JSON.parse(responseBody);",
									"",
									"for (var i=0; i < data.response.length; i++) {",
									"    if (data.response[i].virtualNetworkContextId == vncDefaultVnId) {",
									"        postman.setEnvironmentVariable(\"vnDefaultVnId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnFullName\", data.response[i].name);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnNamespace\", data.response[i].namespace);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnAuthEntityId\", data.response[i].authEntityId);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnContextId\", data.response[i].virtualNetworkContextId);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnAuthEntityClass\", data.response[i].authEntityClass);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnL3Instance\", data.response[i].l3Instance);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnInstanceId\", data.response[i].instanceId);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnResourceVersion\", data.response[i].resourceVersion);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnInstanceVersion\", data.response[i].instanceVersion);",
									"    }",
									"    if (data.response[i].virtualNetworkContextId == vncCampusId) {",
									"        postman.setEnvironmentVariable(\"vnCampusId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"vnCampusFullName\", data.response[i].name);",
									"        postman.setEnvironmentVariable(\"vnCampusNamespace\", data.response[i].namespace);",
									"        postman.setEnvironmentVariable(\"vnCampusAuthEntityId\", data.response[i].authEntityId);",
									"        postman.setEnvironmentVariable(\"vnCampusContextId\", data.response[i].virtualNetworkContextId);",
									"        postman.setEnvironmentVariable(\"vnCampusAuthEntityClass\", data.response[i].authEntityClass);",
									"        postman.setEnvironmentVariable(\"vnCampusL3Instance\", data.response[i].l3Instance);",
									"        postman.setEnvironmentVariable(\"vnCampusInstanceId\", data.response[i].instanceId);",
									"        postman.setEnvironmentVariable(\"vnCampusResourceVersion\", data.response[i].resourceVersion);",
									"        postman.setEnvironmentVariable(\"vnCampusInstanceVersion\", data.response[i].instanceVersion);",
									"    }",
									"    if (data.response[i].virtualNetworkContextId == vncGuestId) {",
									"        postman.setEnvironmentVariable(\"vnGuestId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"vnGuestFullName\", data.response[i].name);",
									"        postman.setEnvironmentVariable(\"vnGuestNamespace\", data.response[i].namespace);",
									"        postman.setEnvironmentVariable(\"vnGuestAuthEntityId\", data.response[i].authEntityId);",
									"        postman.setEnvironmentVariable(\"vnGuestContextId\", data.response[i].virtualNetworkContextId);",
									"        postman.setEnvironmentVariable(\"vnGuestAuthEntityClass\", data.response[i].authEntityClass);",
									"        postman.setEnvironmentVariable(\"vnGuestL3Instance\", data.response[i].l3Instance);",
									"        postman.setEnvironmentVariable(\"vnGuestInstanceId\", data.response[i].instanceId);",
									"        postman.setEnvironmentVariable(\"vnGuestResourceVersion\", data.response[i].resourceVersion);",
									"        postman.setEnvironmentVariable(\"vnGuestInstanceVersion\", data.response[i].instanceVersion);",
									"    }",
									"    if (data.response[i].virtualNetworkContextId == vncInfraVnId) {",
									"        postman.setEnvironmentVariable(\"vnInfraId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"vnInfraFullName\", data.response[i].name);",
									"        postman.setEnvironmentVariable(\"vnInfraNamespace\", data.response[i].namespace);",
									"        postman.setEnvironmentVariable(\"vnInfraAuthEntityId\", data.response[i].authEntityId);",
									"        postman.setEnvironmentVariable(\"vnInfraContextId\", data.response[i].virtualNetworkContextId);",
									"        postman.setEnvironmentVariable(\"vnInfraAuthEntityClass\", data.response[i].authEntityClass);",
									"        postman.setEnvironmentVariable(\"vnInfraL3Instance\", data.response[i].l3Instance);",
									"        postman.setEnvironmentVariable(\"vnInfraInstanceId\", data.response[i].instanceId);",
									"        postman.setEnvironmentVariable(\"vnInfraResourceVersion\", data.response[i].resourceVersion);",
									"        postman.setEnvironmentVariable(\"vnInfraInstanceVersion\", data.response[i].instanceVersion);",
									"    }",
									"",
									"}",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/data/customer-facing-service/VirtualNetwork",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"data",
								"customer-facing-service",
								"VirtualNetwork"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Border2 + Infra + 1/0/2 to Fabric",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d247b1d4-7550-43b5-b4cf-c1e8e7f92111",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"taskId\", data.response.taskId);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n\t{\n\t\t\"id\":\"{{fabSiteId}}\",\n\t\t\"type\":\"ConnectivityDomain\",\n\t\t\"name\":\"Global/San_Jose_US_West\",\n\t\t\"domainType\":\"FABRIC_SITE\",\n\t\t\"isDefault\":false,\n\t\t\"virtualNetwork\":{{fabVirtualNetworks}},\n\t\t\"deviceInfo\":\n\t\t[\n\t\t\t{\n\t\t\t\t\"cfsChangeInfo\":[],\n\t\t\t\t\"configs\":[],\n\t\t\t\t\"createTime\":{{cpborder1CreateTime}},\n\t\t\t\t\"deployed\":false,\n\t\t\t\t\"deviceInterfaceInfo\":[],\n\t\t\t\t\"displayName\":\"{{cpborder1DisplayName}}\",\n\t\t\t\t\"id\":\"{{cpborder1DevinfoId}}\",\n\t\t\t\t\"instanceId\":{{cpborder1InstanceId}},\n\t\t\t\t\"instanceVersion\":{{cpborder1ResourceVersion}},\n\t\t\t\t\"isStale\":false,\n\t\t\t\t\"lastUpdateTime\":{{cpborder1LastUpdateTime}},\n\t\t\t\t\"name\":\"{{cpborder1Name}}\",\n\t\t\t\t\"namespace\":\"{{cpborder1Namespace}}\",\n\t\t\t\t\"networkDeviceId\":\"{{cpborder1NetworkDeviceId}}\",\n\t\t\t\t\"networkWideSettings\":{{cpborder1NetworkWideSettings}},\n\t\t\t\t\"provisioningState\":\"DEFINED\",\n\t\t\t\t\"roles\":[\"BORDERNODE\",\"MAPSERVER\"],\n\t\t\t\t\"siteId\":\"{{dsgnSjc13MdfId}}\",\n\t\t\t\t\"transitNetworks\":[{\"idRef\":\"{{fabTransitId}}\"}],\n\t\t\t\t\"type\":\"DeviceInfo\",\n\t\t\t\t\"wlan\":[],\n\t\t\t\t\"otherDevice\":[],\n\t\t\t\t\"deviceSettings\":\n\t\t\t\t{\n\t\t\t\t\t\"id\":\"{{cpborder1DevSettingsId}}\",\n\t\t\t\t\t\"instanceId\":{{cpborder1DevSettingsInstanceId}},\n\t\t\t\t\t\"displayName\":\"0\",\n\t\t\t\t\t\"instanceVersion\":{{cpborder1DevSettingsInstanceVersion}},\n\t\t\t\t\t\"connectedTo\":[\"INTERNET\"],\n\t\t\t\t\t\"cpu\":0,\n\t\t\t\t\t\"dhcpEnabled\":false,\n\t\t\t\t\t\"externalConnectivityIpPool\":\"{{dsgnTransitPoolId}}\",\n\t\t\t\t\t\"externalDomainRoutingProtocol\":\"BGP\",\n\t\t\t\t\t\"internalDomainProtocolNumber\":\"65534\",\n\t\t\t\t\t\"memory\":0,\n\t\t\t\t\t\"nodeType\":[\"EXTERNAL\"],\n\t\t\t\t\t\"storage\":0,\n\t\t\t\t\t\"extConnectivitySettings\":\n\t\t\t\t\t[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\":\"{{extConnBorder1Int}}\",\n\t\t\t\t\t\t\t\"instanceId\":{{extConnBorder1IntInstanceId}},\n\t\t\t\t\t\t\t\"displayName\":\"0\",\n\t\t\t\t\t\t\t\"instanceVersion\":{{extConnBorder1IntInstanceVersion}},\n\t\t\t\t\t\t\t\"externalDomainProtocolNumber\":\"65535\",\n\t\t\t\t\t\t\t\"interfaceUuid\":\"GigabitEthernet1/0/2\",\n\t\t\t\t\t\t\t\"policyPropagationEnabled\":false,\n\t\t\t\t\t\t\t\"policySgtTag\":0,\n\t\t\t\t\t\t\t\"l2Handoff\":[],\n\t\t\t\t\t\t\t\"l3Handoff\":\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"id\":\"{{extConnBorder1L3InfraId}}\",\n\t\t\t\t\t\t\t\t\t\"instanceId\":{{extConnBorder1L3InfraInstanceId}},\n\t\t\t\t\t\t\t\t\t\"displayName\":\"0\",\n\t\t\t\t\t\t\t\t\t\"instanceVersion\":{{extConnBorder1L3InfraInstanceVersion}},\n\t\t\t\t\t\t\t\t\t\"localIpAddress\":\"{{extConnBorder1L3InfraLocalIp}}\",\n\t\t\t\t\t\t\t\t\t\"remoteIpAddress\":\"{{extConnBorder1L3InfraRemoteIp}}\",\n\t\t\t\t\t\t\t\t\t\"vlanId\":{{extConnBorder1L3InfraVlanId}},\n\t\t\t\t\t\t\t\t\t\"virtualNetwork\":\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"idRef\":\"{{vnInfraId}}\"\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"cfsChangeInfo\":[],\n\t\t\t\t\"configs\":[],\n\t\t\t\t\"createTime\":{{cpborder2CreateTime}},\n\t\t\t\t\"deployed\":false,\n\t\t\t\t\"deviceInterfaceInfo\":[],\n\t\t\t\t\"displayName\":\"{{cpborder2DisplayName}}\",\n\t\t\t\t\"id\":\"{{cpborder2DevinfoId}}\",\n\t\t\t\t\"instanceId\":{{cpborder2InstanceId}},\n\t\t\t\t\"instanceVersion\":{{cpborder2ResourceVersion}},\n\t\t\t\t\"isStale\":false,\n\t\t\t\t\"lastUpdateTime\":{{cpborder2LastUpdateTime}},\n\t\t\t\t\"name\":\"{{cpborder2Name}}\",\n\t\t\t\t\"namespace\":\"{{cpborder2Namespace}}\",\n\t\t\t\t\"networkDeviceId\":\"{{cpborder2NetworkDeviceId}}\",\n\t\t\t\t\"networkWideSettings\":{{cpborder2NetworkWideSettings}},\n\t\t\t\t\"provisioningState\":\"DEFINED\",\n\t\t\t\t\"roles\":[\"MAPSERVER\",\"BORDERNODE\"],\n\t\t\t\t\"siteId\":\"{{dsgnSjc13MdfId}}\",\n\t\t\t\t\"transitNetworks\":[{\"idRef\":\"{{fabTransitId}}\"}],\n\t\t\t\t\"type\":\"DeviceInfo\",\n\t\t\t\t\"wlan\":[],\n\t\t\t\t\"otherDevice\":[],\n\t\t\t\t\"deviceSettings\":\n\t\t\t\t{\n\t\t\t\t\t\"externalDomainRoutingProtocol\":\"BGP\",\n\t\t\t\t\t\"externalConnectivityIpPool\":\"{{dsgnTransitPoolId}}\",\n\t\t\t\t\t\"extConnectivitySettings\":\n\t\t\t\t\t[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"interfaceUuid\":\"GigabitEthernet1/0/2\",\n\t\t\t\t\t\t\t\"policyPropagationEnabled\":false,\n\t\t\t\t\t\t\t\"externalDomainProtocolNumber\":\"65535\",\n\t\t\t\t\t\t\t\"l3Handoff\":[{\"virtualNetwork\":{\"idRef\":\"{{vnInfraId}}\"}}],\n\t\t\t\t\t\t\t\"l2Handoff\":[]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"internalDomainProtocolNumber\":\"65534\",\n\t\t\t\t\t\"nodeType\":[\"EXTERNAL\"],\n\t\t\t\t\t\"connectedTo\":[\"INTERNET\"]\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t\"multicastInfo\":[],\n\t\t\"enableMonitoring\":true,\n\t\t\"resourceVersion\":{{fabSiteResourceVersion}},\n\t\t\"siteId\":\"{{dsgnAreaTopId}}\",\n\t\t\"siteSpecificDomain\":[],\n\t\t\"wirelessMulticastFeature\":false,\n\t\t\"isNativeMulticastEnabled\":false\n\t}\n]"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/data/customer-facing-service/ConnectivityDomain",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"data",
								"customer-facing-service",
								"ConnectivityDomain"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Status - Pause 1 Min",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"var latestRequest = pm.variables.get(\"latestRequest\");",
									"var service = data.response.serviceType;",
									"var isError = data.response.isError.toString();",
									"",
									"",
									"if (isError == \"false\") {",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");",
									"}",
									"else {",
									"    console.log(\"........ \" + latestRequest + \" generated an ERROR !!!!!\");",
									"    console.log(\"........ Service type is \" + service);",
									"    console.log(\"........ Failure reason is \" + data.response.failureReason);",
									"    ",
									"}",
									"",
									"",
									"",
									"console.log(\"Sleeping for one min.\");",
									"setTimeout(function(){}, 60000);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/task/{{taskId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"task",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Device Info - Border 1 and 2 in Fabric",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var data = JSON.parse(responseBody);",
									"var vnInfraId = pm.variables.get(\"vnInfraId\");",
									"var vnCampusId = pm.variables.get(\"vnCampusId\");",
									"var vnGuestId = pm.variables.get(\"vnGuestId\");",
									"",
									"for (var i=0; i < data.response.length; i++) {",
									"    if (data.response[i].name.includes (\"edge-1\")) {",
									"        postman.setEnvironmentVariable(\"edge1DevinfoId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"edge1InstanceId\", data.response[i].instanceId);",
									"        postman.setEnvironmentVariable(\"edge1AuthEntityId\", data.response[i].authEntityId);",
									"        postman.setEnvironmentVariable(\"edge1DisplayName\", data.response[i].displayName);",
									"        postman.setEnvironmentVariable(\"edge1AuthEntityClass\", data.response[i].authEntityClass);",
									"        postman.setEnvironmentVariable(\"edge1InstanceTenantId\", data.response[i].instanceTenantId);",
									"        postman.setEnvironmentVariable(\"edge1CreateTime\", data.response[i].createTime);",
									"        postman.setEnvironmentVariable(\"edge1LastUpdateTime\", data.response[i].lastUpdateTime);",
									"        postman.setEnvironmentVariable(\"edge1Name\", data.response[i].name);",
									"        postman.setEnvironmentVariable(\"edge1Namespace\", data.response[i].namespace);",
									"        postman.setEnvironmentVariable(\"edge1ProvisioningState\", data.response[i].provisioningState);",
									"        postman.setEnvironmentVariable(\"edge1ResourceVersion\", data.response[i].resourceVersion);",
									"        postman.setEnvironmentVariable(\"edge1Type\", data.response[i].type);",
									"        postman.setEnvironmentVariable(\"edge1NetworkDeviceId\", data.response[i].networkDeviceId);",
									"        postman.setEnvironmentVariable(\"edge1SiteId\", data.response[i].siteId);",
									"        strNetworkWideSettings = JSON.stringify(data.response[i].networkWideSettings);",
									"        postman.setEnvironmentVariable(\"edge1NetworkWideSettings\",strNetworkWideSettings );",
									"    }",
									"        if (data.response[i].name.includes (\"cp-border-1\")) {",
									"        postman.setEnvironmentVariable(\"cpborder1DevinfoId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"cpborder1InstanceId\", data.response[i].instanceId);",
									"        postman.setEnvironmentVariable(\"cpborder1AuthEntityId\", data.response[i].authEntityId);",
									"        postman.setEnvironmentVariable(\"cpborder1DisplayName\", data.response[i].displayName);",
									"        postman.setEnvironmentVariable(\"cpborder1AuthEntityClass\", data.response[i].authEntityClass);",
									"        postman.setEnvironmentVariable(\"cpborder1InstanceTenantId\", data.response[i].instanceTenantId);",
									"        postman.setEnvironmentVariable(\"cpborder1CreateTime\", data.response[i].createTime);",
									"        postman.setEnvironmentVariable(\"cpborder1LastUpdateTime\", data.response[i].lastUpdateTime);",
									"        postman.setEnvironmentVariable(\"cpborder1Name\", data.response[i].name);",
									"        postman.setEnvironmentVariable(\"cpborder1Namespace\", data.response[i].namespace);",
									"        postman.setEnvironmentVariable(\"cpborder1ProvisioningState\", data.response[i].provisioningState);",
									"        postman.setEnvironmentVariable(\"cpborder1ResourceVersion\", data.response[i].resourceVersion);",
									"        postman.setEnvironmentVariable(\"cpborder1Type\", data.response[i].type);",
									"        postman.setEnvironmentVariable(\"cpborder1NetworkDeviceId\", data.response[i].networkDeviceId);",
									"        postman.setEnvironmentVariable(\"cpborder1SiteId\", data.response[i].siteId);",
									"        strNetworkWideSettings = JSON.stringify(data.response[i].networkWideSettings);",
									"        postman.setEnvironmentVariable(\"cpborder1NetworkWideSettings\",strNetworkWideSettings );",
									"        postman.setEnvironmentVariable(\"cpborder1DevSettingsId\", data.response[i].deviceSettings.id);",
									"        postman.setEnvironmentVariable(\"cpborder1DevSettingsInstanceId\", data.response[i].deviceSettings.instanceId);",
									"        postman.setEnvironmentVariable(\"cpborder1DevSettingsInstanceVersion\", data.response[i].deviceSettings.instanceVersion);",
									"        postman.setEnvironmentVariable(\"extConnBorder1Int\", data.response[i].deviceSettings.extConnectivitySettings[0].id);",
									"        postman.setEnvironmentVariable(\"extConnBorder1IntInstanceId\", data.response[i].deviceSettings.extConnectivitySettings[0].instanceId);",
									"        postman.setEnvironmentVariable(\"extConnBorder1IntInstanceVersion\", data.response[i].deviceSettings.extConnectivitySettings[0].instanceVersion);",
									"        for (var x=0; x < data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff.length; x++) {",
									"            if (data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].virtualNetwork.idRef == vnInfraId) {",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3InfraId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].id);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3InfraInstanceId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].instanceId);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3InfraInstanceVersion\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].instanceVersion);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3InfraLocalIp\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].localIpAddress);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3InfraRemoteIp\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].remoteIpAddress);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3InfraVlanId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].vlanId);",
									"            }",
									"            if (data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].virtualNetwork.idRef == vnCampusId) {",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3CampusId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].id);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3CampusInstanceId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].instanceId);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3CampusInstanceVersion\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].instanceVersion);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3CampusLocalIp\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].localIpAddress);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3CampusRemoteIp\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].remoteIpAddress);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3CampusVlanId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].vlanId);",
									"                }",
									"            if (data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].virtualNetwork.idRef == vnGuestId) {",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3GuestId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].id);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3GuestInstanceId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].instanceId);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3GuestInstanceVersion\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].instanceVersion);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3GuestLocalIp\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].localIpAddress);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3GuestRemoteIp\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].remoteIpAddress);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3GuestVlanId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].vlanId);",
									"                }",
									"            }",
									"        }",
									"        if (data.response[i].name.includes (\"cp-border-2\")) {",
									"        postman.setEnvironmentVariable(\"cpborder2DevinfoId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"cpborder2InstanceId\", data.response[i].instanceId);",
									"        postman.setEnvironmentVariable(\"cpborder2AuthEntityId\", data.response[i].authEntityId);",
									"        postman.setEnvironmentVariable(\"cpborder2DisplayName\", data.response[i].displayName);",
									"        postman.setEnvironmentVariable(\"cpborder2AuthEntityClass\", data.response[i].authEntityClass);",
									"        postman.setEnvironmentVariable(\"cpborder2InstanceTenantId\", data.response[i].instanceTenantId);",
									"        postman.setEnvironmentVariable(\"cpborder2CreateTime\", data.response[i].createTime);",
									"        postman.setEnvironmentVariable(\"cpborder2LastUpdateTime\", data.response[i].lastUpdateTime);",
									"        postman.setEnvironmentVariable(\"cpborder2Name\", data.response[i].name);",
									"        postman.setEnvironmentVariable(\"cpborder2Namespace\", data.response[i].namespace);",
									"        postman.setEnvironmentVariable(\"cpborder2ProvisioningState\", data.response[i].provisioningState);",
									"        postman.setEnvironmentVariable(\"cpborder2ResourceVersion\", data.response[i].resourceVersion);",
									"        postman.setEnvironmentVariable(\"cpborder2Type\", data.response[i].type);",
									"        postman.setEnvironmentVariable(\"cpborder2NetworkDeviceId\", data.response[i].networkDeviceId);",
									"        postman.setEnvironmentVariable(\"cpborder2SiteId\", data.response[i].siteId);",
									"        strNetworkWideSettings = JSON.stringify(data.response[i].networkWideSettings);",
									"        postman.setEnvironmentVariable(\"cpborder2NetworkWideSettings\",strNetworkWideSettings );",
									"        postman.setEnvironmentVariable(\"cpborder2DevSettingsId\", data.response[i].deviceSettings.id);",
									"        postman.setEnvironmentVariable(\"cpborder2DevSettingsInstanceId\", data.response[i].deviceSettings.instanceId);",
									"        postman.setEnvironmentVariable(\"cpborder2DevSettingsInstanceVersion\", data.response[i].deviceSettings.instanceVersion);",
									"        postman.setEnvironmentVariable(\"extConnBorder2Int\", data.response[i].deviceSettings.extConnectivitySettings[0].id);",
									"        postman.setEnvironmentVariable(\"extConnBorder2IntInstanceId\", data.response[i].deviceSettings.extConnectivitySettings[0].instanceId);",
									"        postman.setEnvironmentVariable(\"extConnBorder2IntInstanceVersion\", data.response[i].deviceSettings.extConnectivitySettings[0].instanceVersion);",
									"        for (var x=0; x < data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff.length; x++) {",
									"\t\t if (data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].virtualNetwork.idRef == vnInfraId) {",
									"\t\t\t\t postman.setEnvironmentVariable(\"extConnBorder2L3InfraId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].id);",
									"\t\t\t\t postman.setEnvironmentVariable(\"extConnBorder2L3InfraInstanceId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].instanceId);",
									"\t\t\t\t postman.setEnvironmentVariable(\"extConnBorder2L3InfraInstanceVersion\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].instanceVersion);",
									"\t\t\t\t postman.setEnvironmentVariable(\"extConnBorder2L3InfraLocalIp\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].localIpAddress);",
									"\t\t\t\t postman.setEnvironmentVariable(\"extConnBorder2L3InfraRemoteIp\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].remoteIpAddress);",
									"\t\t\t\t postman.setEnvironmentVariable(\"extConnBorder2L3InfraVlanId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].vlanId);",
									"\t\t    }",
									"            if (data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].virtualNetwork.idRef == vnCampusId) {",
									"                postman.setEnvironmentVariable(\"extConnBorder2L3CampusId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].id);",
									"                postman.setEnvironmentVariable(\"extConnBorder2L3CampusInstanceId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].instanceId);",
									"                postman.setEnvironmentVariable(\"extConnBorder2L3CampusInstanceVersion\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].instanceVersion);",
									"                postman.setEnvironmentVariable(\"extConnBorder2L3CampusLocalIp\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].localIpAddress);",
									"                postman.setEnvironmentVariable(\"extConnBorder2L3CampusRemoteIp\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].remoteIpAddress);",
									"                postman.setEnvironmentVariable(\"extConnBorder2L3CampusVlanId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].vlanId);",
									"                }",
									"            if (data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].virtualNetwork.idRef == vnGuestId) {",
									"                postman.setEnvironmentVariable(\"extConnBorder2L3GuestId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].id);",
									"                postman.setEnvironmentVariable(\"extConnBorder2L3GuestInstanceId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].instanceId);",
									"                postman.setEnvironmentVariable(\"extConnBorder2L3GuestInstanceVersion\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].instanceVersion);",
									"                postman.setEnvironmentVariable(\"extConnBorder2L3GuestLocalIp\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].localIpAddress);",
									"                postman.setEnvironmentVariable(\"extConnBorder2L3GuestRemoteIp\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].remoteIpAddress);",
									"                postman.setEnvironmentVariable(\"extConnBorder2L3GuestVlanId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].vlanId);",
									"                }",
									"\t\t }",
									"    }",
									"}",
									"",
									"\tvar latestRequest = pm.info.requestName;",
									"\tpostman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"\tconsole.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/data/customer-facing-service/DeviceInfo",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"data",
								"customer-facing-service",
								"DeviceInfo"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"var latestRequest = pm.variables.get(\"latestRequest\");\r",
									"var service = data.response.serviceType;\r",
									"var isError = data.response.isError.toString();\r",
									"\r",
									"\r",
									"if (isError == \"false\") {\r",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");\r",
									"}\r",
									"else {\r",
									"    console.log(\"........ \" + latestRequest + \" generated an ERROR !!!!!\");\r",
									"    console.log(\"........ Service type is \" + service);\r",
									"    console.log(\"........ Failure reason is \" + data.response.failureReason);\r",
									"    \r",
									"}\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/task/{{taskId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"task",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Fabric Data",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var data = JSON.parse(responseBody);",
									"",
									"",
									"    ",
									"for (var i=0; i < data.response.length; i++) {",
									"    if (data.response[i].name == \"US West\") {",
									"        postman.setEnvironmentVariable(\"fabId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"fabResourceVersion\", data.response[i].resourceVersion);",
									"         }",
									"    if (data.response[i].name.includes(\"San_Jose_US_West\")) {",
									"        postman.setEnvironmentVariable(\"fabSiteId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"fabSiteResourceVersion\", data.response[i].resourceVersion);",
									"        strFabVirtualNetworks=JSON.stringify(data.response[i].virtualNetwork);",
									"        postman.setEnvironmentVariable(\"fabVirtualNetworks\", strFabVirtualNetworks);",
									"         }",
									"    else if (data.response[i].name.includes(\"Transit\")) {",
									"        postman.setEnvironmentVariable(\"fabTransitId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"fabSiteTransitVersion\", data.response[i].resourceVersion);",
									"         }",
									"  ",
									"}",
									"",
									"\tvar latestRequest = pm.info.requestName;",
									"\tpostman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"\tconsole.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/data/customer-facing-service/ConnectivityDomain",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"data",
								"customer-facing-service",
								"ConnectivityDomain"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Fabric Virtual Network",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var vncDefaultVnId = pm.variables.get(\"vncDefaultVnId\");",
									"var vncCampusId = pm.variables.get(\"vncCampusVnId\");",
									"var vncGuestId = pm.variables.get(\"vncGuestVnId\");",
									"var vncInfraVnId = pm.variables.get(\"vncInfraVnId\");",
									"",
									"console.log(vncDefaultVnId);",
									"",
									"var data = JSON.parse(responseBody);",
									"",
									"for (var i=0; i < data.response.length; i++) {",
									"    if (data.response[i].virtualNetworkContextId == vncDefaultVnId) {",
									"        postman.setEnvironmentVariable(\"vnDefaultVnId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnFullName\", data.response[i].name);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnNamespace\", data.response[i].namespace);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnAuthEntityId\", data.response[i].authEntityId);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnContextId\", data.response[i].virtualNetworkContextId);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnAuthEntityClass\", data.response[i].authEntityClass);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnL3Instance\", data.response[i].l3Instance);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnInstanceId\", data.response[i].instanceId);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnResourceVersion\", data.response[i].resourceVersion);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnInstanceVersion\", data.response[i].instanceVersion);",
									"    }",
									"    if (data.response[i].virtualNetworkContextId == vncCampusId) {",
									"        postman.setEnvironmentVariable(\"vnCampusId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"vnCampusFullName\", data.response[i].name);",
									"        postman.setEnvironmentVariable(\"vnCampusNamespace\", data.response[i].namespace);",
									"        postman.setEnvironmentVariable(\"vnCampusAuthEntityId\", data.response[i].authEntityId);",
									"        postman.setEnvironmentVariable(\"vnCampusContextId\", data.response[i].virtualNetworkContextId);",
									"        postman.setEnvironmentVariable(\"vnCampusAuthEntityClass\", data.response[i].authEntityClass);",
									"        postman.setEnvironmentVariable(\"vnCampusL3Instance\", data.response[i].l3Instance);",
									"        postman.setEnvironmentVariable(\"vnCampusInstanceId\", data.response[i].instanceId);",
									"        postman.setEnvironmentVariable(\"vnCampusResourceVersion\", data.response[i].resourceVersion);",
									"        postman.setEnvironmentVariable(\"vnCampusInstanceVersion\", data.response[i].instanceVersion);",
									"    }",
									"    if (data.response[i].virtualNetworkContextId == vncGuestId) {",
									"        postman.setEnvironmentVariable(\"vnGuestId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"vnGuestFullName\", data.response[i].name);",
									"        postman.setEnvironmentVariable(\"vnGuestNamespace\", data.response[i].namespace);",
									"        postman.setEnvironmentVariable(\"vnGuestAuthEntityId\", data.response[i].authEntityId);",
									"        postman.setEnvironmentVariable(\"vnGuestContextId\", data.response[i].virtualNetworkContextId);",
									"        postman.setEnvironmentVariable(\"vnGuestAuthEntityClass\", data.response[i].authEntityClass);",
									"        postman.setEnvironmentVariable(\"vnGuestL3Instance\", data.response[i].l3Instance);",
									"        postman.setEnvironmentVariable(\"vnGuestInstanceId\", data.response[i].instanceId);",
									"        postman.setEnvironmentVariable(\"vnGuestResourceVersion\", data.response[i].resourceVersion);",
									"        postman.setEnvironmentVariable(\"vnGuestInstanceVersion\", data.response[i].instanceVersion);",
									"    }",
									"    if (data.response[i].virtualNetworkContextId == vncInfraVnId) {",
									"        postman.setEnvironmentVariable(\"vnInfraId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"vnInfraFullName\", data.response[i].name);",
									"        postman.setEnvironmentVariable(\"vnInfraNamespace\", data.response[i].namespace);",
									"        postman.setEnvironmentVariable(\"vnInfraAuthEntityId\", data.response[i].authEntityId);",
									"        postman.setEnvironmentVariable(\"vnInfraContextId\", data.response[i].virtualNetworkContextId);",
									"        postman.setEnvironmentVariable(\"vnInfraAuthEntityClass\", data.response[i].authEntityClass);",
									"        postman.setEnvironmentVariable(\"vnInfraL3Instance\", data.response[i].l3Instance);",
									"        postman.setEnvironmentVariable(\"vnInfraInstanceId\", data.response[i].instanceId);",
									"        postman.setEnvironmentVariable(\"vnInfraResourceVersion\", data.response[i].resourceVersion);",
									"        postman.setEnvironmentVariable(\"vnInfraInstanceVersion\", data.response[i].instanceVersion);",
									"    }",
									"",
									"}",
									"",
									"\tvar latestRequest = pm.info.requestName;",
									"\tpostman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"\tconsole.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/data/customer-facing-service/VirtualNetwork",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"data",
								"customer-facing-service",
								"VirtualNetwork"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Edge1 to Fabric",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d247b1d4-7550-43b5-b4cf-c1e8e7f92111",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"taskId\", data.response.taskId);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n\t{\r\n\t\t\"id\":\"{{fabSiteId}}\",\r\n\t\t\"type\":\"ConnectivityDomain\",\r\n\t\t\"name\":\"Global/San_Jose_US_West\",\r\n\t\t\"domainType\":\"FABRIC_SITE\",\r\n\t\t\"isDefault\":false,\r\n\t\t\"virtualNetwork\":\r\n\t\t[\r\n\t\t\t{\"idRef\":\"{{vnDefaultVnId}}\"},\r\n\t\t\t{\"idRef\":\"{{vnInfraId}}\"}\r\n\t\t],\r\n\t\t\"deviceInfo\":\r\n\t\t[\r\n\t\t\t{\r\n\t\t\t\t\"cfsChangeInfo\":[],\r\n\t\t\t\t\"configs\":[],\r\n\t\t\t\t\"createTime\":{{cpborder1CreateTime}},\r\n\t\t\t\t\"deployed\":false,\r\n\t\t\t\t\"deviceInterfaceInfo\":[],\r\n\t\t\t\t\"displayName\":\"{{cpborder1DisplayName}}\",\r\n\t\t\t\t\"id\":\"{{cpborder1DevinfoId}}\",\r\n\t\t\t\t\"instanceId\":{{cpborder1InstanceId}},\r\n\t\t\t\t\"instanceVersion\":{{cpborder1ResourceVersion}},\r\n\t\t\t\t\"isStale\":false,\r\n\t\t\t\t\"lastUpdateTime\":{{cpborder1LastUpdateTime}},\r\n\t\t\t\t\"name\":\"{{cpborder1Name}}\",\r\n\t\t\t\t\"namespace\":\"{{cpborder1Namespace}}\",\r\n\t\t\t\t\"networkDeviceId\":\"{{cpborder1NetworkDeviceId}}\",\r\n\t\t\t\t\"networkWideSettings\":{{cpborder1NetworkWideSettings}},\r\n\t\t\t\t\"provisioningState\":\"DEFINED\",\r\n\t\t\t\t\"roles\":[\"BORDERNODE\",\"MAPSERVER\"],\r\n\t\t\t\t\"siteId\":\"{{dsgnSjc13MdfId}}\",\r\n\t\t\t\t\"transitNetworks\":[{\"idRef\":\"{{fabTransitId}}\"}],\r\n\t\t\t\t\"type\":\"DeviceInfo\",\r\n\t\t\t\t\"wlan\":[],\r\n\t\t\t\t\"otherDevice\":[],\r\n\t\t\t\t\"deviceSettings\":\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\":\"{{cpborder1DevSettingsId}}\",\r\n\t\t\t\t\t\"instanceId\":{{cpborder1DevSettingsInstanceId}},\r\n\t\t\t\t\t\"displayName\":\"0\",\r\n\t\t\t\t\t\"instanceVersion\":{{cpborder1DevSettingsInstanceVersion}},\r\n\t\t\t\t\t\"connectedTo\":[\"INTERNET\"],\r\n\t\t\t\t\t\"cpu\":0,\r\n\t\t\t\t\t\"dhcpEnabled\":false,\r\n\t\t\t\t\t\"externalConnectivityIpPool\":\"{{dsgnTransitPoolId}}\",\r\n\t\t\t\t\t\"externalDomainRoutingProtocol\":\"BGP\",\r\n\t\t\t\t\t\"internalDomainProtocolNumber\":\"65534\",\r\n\t\t\t\t\t\"memory\":0,\r\n\t\t\t\t\t\"nodeType\":[\"EXTERNAL\"],\r\n\t\t\t\t\t\"storage\":0,\r\n\t\t\t\t\t\"extConnectivitySettings\":\r\n\t\t\t\t\t[\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\"id\":\"{{extConnBorder1Int}}\",\r\n\t\t\t\t\t\t\t\"instanceId\":{{extConnBorder1IntInstanceId}},\r\n\t\t\t\t\t\t\t\"displayName\":\"0\",\r\n\t\t\t\t\t\t\t\"instanceVersion\":{{extConnBorder1IntInstanceVersion}},\r\n\t\t\t\t\t\t\t\"externalDomainProtocolNumber\":\"65535\",\r\n\t\t\t\t\t\t\t\"interfaceUuid\":\"GigabitEthernet1/0/2\",\r\n\t\t\t\t\t\t\t\"policyPropagationEnabled\":false,\r\n\t\t\t\t\t\t\t\"policySgtTag\":0,\r\n\t\t\t\t\t\t\t\"l2Handoff\":[],\r\n\t\t\t\t\t\t\t\"l3Handoff\":\r\n\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\"id\":\"{{extConnBorder1L3InfraId}}\",\r\n\t\t\t\t\t\t\t\t\t\"instanceId\":{{extConnBorder1L3InfraInstanceId}},\r\n\t\t\t\t\t\t\t\t\t\"displayName\":\"0\",\r\n\t\t\t\t\t\t\t\t\t\"instanceVersion\":{{extConnBorder1L3InfraInstanceVersion}},\r\n\t\t\t\t\t\t\t\t\t\"localIpAddress\":\"{{extConnBorder1L3InfraLocalIp}}\",\r\n\t\t\t\t\t\t\t\t\t\"remoteIpAddress\":\"{{extConnBorder1L3InfraRemoteIp}}\",\r\n\t\t\t\t\t\t\t\t\t\"vlanId\":{{extConnBorder1L3InfraVlanId}},\r\n\t\t\t\t\t\t\t\t\t\"virtualNetwork\":\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\"idRef\":\"{{vnInfraId}}\"\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\t{\r\n\t\t\t\t\"cfsChangeInfo\":[],\r\n\t\t\t\t\"configs\":[],\r\n\t\t\t\t\"createTime\":{{cpborder2CreateTime}},\r\n\t\t\t\t\"deployed\":false,\r\n\t\t\t\t\"deviceInterfaceInfo\":[],\r\n\t\t\t\t\"displayName\":\"{{cpborder2DisplayName}}\",\r\n\t\t\t\t\"id\":\"{{cpborder2DevinfoId}}\",\r\n\t\t\t\t\"instanceId\":{{cpborder2InstanceId}},\r\n\t\t\t\t\"instanceVersion\":{{cpborder2ResourceVersion}},\r\n\t\t\t\t\"isStale\":false,\r\n\t\t\t\t\"lastUpdateTime\":{{cpborder2LastUpdateTime}},\r\n\t\t\t\t\"name\":\"{{cpborder2Name}}\",\r\n\t\t\t\t\"namespace\":\"{{cpborder2Namespace}}\",\r\n\t\t\t\t\"networkDeviceId\":\"{{cpborder2NetworkDeviceId}}\",\r\n\t\t\t\t\"networkWideSettings\":{{cpborder2NetworkWideSettings}},\r\n\t\t\t\t\"provisioningState\":\"DEFINED\",\r\n\t\t\t\t\"roles\":[\"BORDERNODE\",\"MAPSERVER\"],\r\n\t\t\t\t\"siteId\":\"{{dsgnSjc13MdfId}}\",\r\n\t\t\t\t\"transitNetworks\":[{\"idRef\":\"{{fabTransitId}}\"}],\r\n\t\t\t\t\r\n\t\t\t\t\"type\":\"DeviceInfo\",\r\n\t\t\t\t\"wlan\":[],\r\n\t\t\t\t\"otherDevice\":[],\r\n\t\t\t\t\"deviceSettings\":\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\":\"{{cpborder2DevSettingsId}}\",\r\n\t\t\t\t\t\"instanceId\":{{cpborder2DevSettingsInstanceId}},\r\n\t\t\t\t\t\"displayName\":\"0\",\r\n\t\t\t\t\t\"instanceVersion\":{{cpborder2DevSettingsInstanceVersion}},\r\n\t\t\t\t\t\"connectedTo\":[\"INTERNET\"],\r\n\t\t\t\t\t\"cpu\":0,\r\n\t\t\t\t\t\"dhcpEnabled\":false,\r\n\t\t\t\t\t\"externalConnectivityIpPool\":\"{{dsgnTransitPoolId}}\",\r\n\t\t\t\t\t\"externalDomainRoutingProtocol\":\"BGP\",\r\n\t\t\t\t\t\"internalDomainProtocolNumber\":\"65534\",\r\n\t\t\t\t\t\"memory\":0,\r\n\t\t\t\t\t\"nodeType\":[\"EXTERNAL\"],\r\n\t\t\t\t\t\"storage\":0,\r\n\t\t\t\t\t\"extConnectivitySettings\":\r\n\t\t\t\t\t[\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\"id\":\"{{extConnBorder2Int}}\",\r\n\t\t\t\t\t\t\t\"instanceId\":{{extConnBorder2IntInstanceId}},\r\n\t\t\t\t\t\t\t\"displayName\":\"0\",\r\n\t\t\t\t\t\t\t\"instanceVersion\":{{extConnBorder2IntInstanceVersion}},\r\n\t\t\t\t\t\t\t\"externalDomainProtocolNumber\":\"65535\",\r\n\t\t\t\t\t\t\t\"interfaceUuid\":\"GigabitEthernet1/0/2\",\r\n\t\t\t\t\t\t\t\"policyPropagationEnabled\":false,\r\n\t\t\t\t\t\t\t\"policySgtTag\":0,\r\n\t\t\t\t\t\t\t\"l2Handoff\":[],\r\n\t\t\t\t\t\t\t\"l3Handoff\":\r\n\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\"id\":\"{{extConnBorder2L3InfraId}}\",\r\n\t\t\t\t\t\t\t\t\t\"instanceId\":{{extConnBorder2L3InfraInstanceId}},\r\n\t\t\t\t\t\t\t\t\t\"displayName\":\"0\",\r\n\t\t\t\t\t\t\t\t\t\"instanceVersion\":{{extConnBorder2L3InfraInstanceVersion}},\r\n\t\t\t\t\t\t\t\t\t\"localIpAddress\":\"{{extConnBorder2L3InfraLocalIp}}\",\r\n\t\t\t\t\t\t\t\t\t\"remoteIpAddress\":\"{{extConnBorder2L3InfraRemoteIp}}\",\r\n\t\t\t\t\t\t\t\t\t\"vlanId\":{{extConnBorder2L3InfraVlanId}},\r\n\t\t\t\t\t\t\t\t\t\"virtualNetwork\":\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\"idRef\":\"{{vnInfraId}}\"\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t]\r\n\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\t{\r\n\t\t\t\t\"cfsChangeInfo\":[],\r\n\t\t\t\t\"configs\":[],\r\n\t\t\t\t\"createTime\":{{edge1CreateTime}},\r\n\t\t\t\t\"deployed\":false,\r\n\t\t\t\t\"deviceInterfaceInfo\":[],\r\n\t\t\t\t\"displayName\":\"{{edge1DisplayName}}\",\r\n\t\t\t\t\"id\":\"{{edge1DevinfoId}}\",\r\n\t\t\t\t\"instanceId\":{{edge1InstanceId}},\r\n\t\t\t\t\"instanceVersion\":{{edge1ResourceVersion}},\r\n\t\t\t\t\"isStale\":false,\r\n\t\t\t\t\"lastUpdateTime\":{{edge1LastUpdateTime}},\r\n\t\t\t\t\"name\":\"{{devEdge1FullName}}\",\r\n\t\t\t\t\"namespace\":\"{{edge1Namespace}}\",\r\n\t\t\t\t\"networkDeviceId\":\"{{edge1NetworkDeviceId}}\",\r\n\t\t\t\t\"networkWideSettings\":{{edge1NetworkWideSettings}},\r\n\t\t\t\t\"provisioningState\":\"DEFINED\",\r\n\t\t\t\t\"roles\":[\"EDGENODE\"],\r\n\t\t\t\t\"siteId\":\"{{edge1SiteId}}\",\r\n\t\t\t\t\"transitNetworks\":[],\r\n\t\t\t\t\"type\":\"DeviceInfo\",\r\n\t\t\t\t\"wlan\":[],\r\n\t\t\t\t\"otherDevice\":[]\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"multicastInfo\":[],\r\n\t\t\"enableMonitoring\":true,\r\n\t\t\"resourceVersion\":{{fabSiteResourceVersion}},\r\n\t\t\"siteId\":\"{{dsgnAreaTopId}}\",\r\n\t\t\"siteSpecificDomain\":[],\r\n\t\t\"wirelessMulticastFeature\":false,\r\n\t\t\"isNativeMulticastEnabled\":false\r\n\t\t\r\n\t}\r\n]\r\n"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/data/customer-facing-service/ConnectivityDomain",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"data",
								"customer-facing-service",
								"ConnectivityDomain"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Status - Pause 1 Min",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"var latestRequest = pm.variables.get(\"latestRequest\");",
									"var service = data.response.serviceType;",
									"var isError = data.response.isError.toString();",
									"",
									"",
									"if (isError == \"false\") {",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");",
									"}",
									"else {",
									"    console.log(\"........ \" + latestRequest + \" generated an ERROR !!!!!\");",
									"    console.log(\"........ Service type is \" + service);",
									"    console.log(\"........ Failure reason is \" + data.response.failureReason);",
									"    ",
									"}",
									"",
									"",
									"",
									"console.log(\"Sleeping for one min.\");",
									"setTimeout(function(){}, 60000);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/task/{{taskId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"task",
								"{{taskId}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "4.1 Deploy Infra - Border 1 Switch Config",
			"item": [
				{
					"name": "Create Project",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"taskId\", data.response.taskId);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\": \"Project to Deploy Infra Settings to Cp-Border-1\",\n    \"name\": \"POV_Automation\",\n    \"tags\": []\n}"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/template-programmer/project",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"template-programmer",
								"project"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"var latestRequest = pm.variables.get(\"latestRequest\");\r",
									"var service = data.response.serviceType;\r",
									"var isError = data.response.isError.toString();\r",
									"\r",
									"\r",
									"if (isError == \"false\") {\r",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");\r",
									"}\r",
									"else {\r",
									"    console.log(\"........ \" + latestRequest + \" generated an ERROR !!!!!\");\r",
									"    console.log(\"........ Service type is \" + service);\r",
									"    console.log(\"........ Failure reason is \" + data.response.failureReason);\r",
									"    \r",
									"}\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/task/{{taskId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"task",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Projects",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var data = JSON.parse(responseBody);",
									"",
									"",
									"for (var i=0; i < data.length; i++) {",
									"    if (data[i].name == \"POV_Automation\") {",
									"        postman.setEnvironmentVariable(\"prjPovAutomation\", data[i].id);",
									"    }",
									"}",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/template-programmer/project",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"template-programmer",
								"project"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Template",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"taskId\", data.response.taskId);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Infra_Border1\",\n    \"description\": \"Configuration for Border 1 Infra\",\n    \"tags\": [],\n    \"deviceTypes\": [\n        {\n            \"productFamily\": \"Switches and Hubs\"\n        }\n    ],\n    \"softwareType\": \"IOS-XE\",\n    \"softwareVariant\": \"XE\",\n    \"templateContent\": \"int vlan 3001\\nbfd interval 300 min_rx 300 multiplier 3\\nno bfd echo\\nrouter bgp 65534\\nneighbor 100.124.0.2 remote-as 65534\\nneighbor 100.124.0.2 update-source Loopback0\\nneighbor 100.124.0.2 fall-over bfd\\naddress-family ipv4\\nneighbor 100.124.0.2 activate\\nneighbor 100.124.0.2 next-hop-self\\nredistribute isis level-2 metric 10 route-map isis-into-bgp\\nneighbor 100.126.1.2 fall-over bfd\\nrouter isis\\nredistribute bgp 65534 metric 100 metric-type external\\nip access-list standard isis-into-bgp\\npermit 100.124.1.0 0.0.0.255\\nroute-map isis-into-bgp per 10\\nmatch ip address isis-into-bgp\\n\",\n    \n    \"rollbackTemplateContent\": \"\",\n    \"templateParams\": [],\n    \"composite\": false,\n    \"projectName\": \"POV_Automation\",\n    \"projectId\": \"{{prjPovAutomation}}\"\n}"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/template-programmer/project/{{prjPovAutomation}}/template",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"template-programmer",
								"project",
								"{{prjPovAutomation}}",
								"template"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"var latestRequest = pm.variables.get(\"latestRequest\");\r",
									"var service = data.response.serviceType;\r",
									"var isError = data.response.isError.toString();\r",
									"\r",
									"\r",
									"if (isError == \"false\") {\r",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");\r",
									"}\r",
									"else {\r",
									"    console.log(\"........ \" + latestRequest + \" generated an ERROR !!!!!\");\r",
									"    console.log(\"........ Service type is \" + service);\r",
									"    console.log(\"........ Failure reason is \" + data.response.failureReason);\r",
									"    \r",
									"}\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/task/{{taskId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"task",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Template Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var data = JSON.parse(responseBody);",
									"",
									"for (var i=0; i < data.length; i++) {",
									"    if (data[i].name == \"POV_Automation\") {",
									"        for (var n=0; n < data[i].templates.length; n++) {",
									"            if(data[i].templates[n].name == \"Infra_Border1\") {",
									"                postman.setEnvironmentVariable(\"templateInfraBorder1Id\",data[i].templates[n].id);",
									"            }",
									"        }",
									"    }",
									"}",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/template-programmer/project",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"template-programmer",
								"project"
							]
						}
					},
					"response": []
				},
				{
					"name": "Commit Template",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"taskId\", data.response.taskId);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"comments\": \"First Commit from API\",\n    \"templateId\": \"{{templateInfraBorder1Id}}\"\n}"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/template-programmer/template/version",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"template-programmer",
								"template",
								"version"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"var latestRequest = pm.variables.get(\"latestRequest\");\r",
									"var service = data.response.serviceType;\r",
									"var isError = data.response.isError.toString();\r",
									"\r",
									"\r",
									"if (isError == \"false\") {\r",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");\r",
									"}\r",
									"else {\r",
									"    console.log(\"........ \" + latestRequest + \" generated an ERROR !!!!!\");\r",
									"    console.log(\"........ Service type is \" + service);\r",
									"    console.log(\"........ Failure reason is \" + data.response.failureReason);\r",
									"    \r",
									"}\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/task/{{taskId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"task",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Template Latest Version",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var data = JSON.parse(responseBody);",
									"var versionsInfo = data[0].versionsInfo;",
									"var latestVersion = 0;",
									"",
									"for (var i=0; i < versionsInfo.length; i++) {",
									"    if (versionsInfo[i].versionsTime !== 0) {",
									"        if (versionsInfo[i].version > latestVersion) {",
									"            latestVersion = versionsInfo[i].version;",
									"            postman.setEnvironmentVariable(\"templateInfraBorder1LatestVersion\", versionsInfo[i].version);",
									"            postman.setEnvironmentVariable(\"templateInfraBorder1LatestVersionId\", versionsInfo[i].id);",
									"        }",
									"    }",
									"}",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/template-programmer/template/version/{{templateInfraBorder1Id}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"template-programmer",
								"template",
								"version",
								"{{templateInfraBorder1Id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Deploy Template",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"forcePushTemplate\": true,\n\n    \"targetInfo\": [\n        {\n            \"id\": \"100.124.0.1\",\n            \"type\": \"MANAGED_DEVICE_IP\",\n            \"params\": {}\n        }\n    ],\n    \"templateId\": \"{{templateInfraBorder1LatestVersionId}}\"\n}"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/template-programmer/template/deploy",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"template-programmer",
								"template",
								"deploy"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "4.2 Deploy Infra - Border 2 Switch Config",
			"item": [
				{
					"name": "Create Template",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"taskId\", data.response.taskId);",
									"",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Infra_Border2\",\n    \"description\": \"Configuration for Border 2 Infra\",\n    \"tags\": [],\n    \"deviceTypes\": [\n        {\n            \"productFamily\": \"Switches and Hubs\"\n        }\n    ],\n    \"softwareType\": \"IOS-XE\",\n    \"softwareVariant\": \"XE\",\n    \"templateContent\": \"int vlan 3002\\nbfd interval 300 min_rx 300 multiplier 3\\nno bfd echo\\nrouter bgp 65534\\nneighbor 100.124.0.1 remote-as 65534\\nneighbor 100.124.0.1 update-source Loopback0\\nneighbor 100.124.0.1 fall-over bfd\\n\\naddress-family ipv4\\nneighbor 100.124.0.1 activate\\nneighbor 100.124.0.1 next-hop-self\\nneighbor 100.126.1.6 fall-over bfd\\nredistribute isis level-2 metric 10 route-map isis-into-bgp\\n\\nrouter isis\\nredistribute bgp 65534 metric 100 metric-type external\\n\\nip access-list standard isis-into-bgp\\npermit 100.124.1.0 0.0.0.255\\n\\nroute-map isis-into-bgp per 10\\nmatch ip address isis-into-bgp\\n\",\n    \n    \"rollbackTemplateContent\": \"\",\n    \"templateParams\": [],\n    \"composite\": false,\n    \"projectName\": \"POV_Automation\",\n    \"projectId\": \"{{prjPovAutomation}}\"\n}"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/template-programmer/project/{{prjPovAutomation}}/template",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"template-programmer",
								"project",
								"{{prjPovAutomation}}",
								"template"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"var latestRequest = pm.variables.get(\"latestRequest\");\r",
									"var service = data.response.serviceType;\r",
									"var isError = data.response.isError.toString();\r",
									"\r",
									"\r",
									"if (isError == \"false\") {\r",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");\r",
									"}\r",
									"else {\r",
									"    console.log(\"........ \" + latestRequest + \" generated an ERROR !!!!!\");\r",
									"    console.log(\"........ Service type is \" + service);\r",
									"    console.log(\"........ Failure reason is \" + data.response.failureReason);\r",
									"    \r",
									"}\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/task/{{taskId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"task",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Template Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var data = JSON.parse(responseBody);",
									"",
									"for (var i=0; i < data.length; i++) {",
									"    if (data[i].name == \"POV_Automation\") {",
									"        for (var n=0; n < data[i].templates.length; n++) {",
									"            if(data[i].templates[n].name == \"Infra_Border2\") {",
									"                postman.setEnvironmentVariable(\"templateInfraBorder2Id\",data[i].templates[n].id);",
									"            }",
									"        }",
									"    }",
									"}",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/template-programmer/project",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"template-programmer",
								"project"
							]
						}
					},
					"response": []
				},
				{
					"name": "Commit Template",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"taskId\", data.response.taskId);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"comments\": \"First Commit from API\",\n    \"templateId\": \"{{templateInfraBorder2Id}}\"\n}"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/template-programmer/template/version",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"template-programmer",
								"template",
								"version"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"var latestRequest = pm.variables.get(\"latestRequest\");\r",
									"var service = data.response.serviceType;\r",
									"var isError = data.response.isError.toString();\r",
									"\r",
									"\r",
									"if (isError == \"false\") {\r",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");\r",
									"}\r",
									"else {\r",
									"    console.log(\"........ \" + latestRequest + \" generated an ERROR !!!!!\");\r",
									"    console.log(\"........ Service type is \" + service);\r",
									"    console.log(\"........ Failure reason is \" + data.response.failureReason);\r",
									"    \r",
									"}\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/task/{{taskId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"task",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Template Latest Version",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var data = JSON.parse(responseBody);",
									"var versionsInfo = data[0].versionsInfo;",
									"var latestVersion = 0;",
									"",
									"for (var i=0; i < versionsInfo.length; i++) {",
									"    if (versionsInfo[i].versionsTime !== 0) {",
									"        if (versionsInfo[i].version > latestVersion) {",
									"            latestVersion = versionsInfo[i].version;",
									"            postman.setEnvironmentVariable(\"templateInfraBorder2LatestVersion\", versionsInfo[i].version);",
									"            postman.setEnvironmentVariable(\"templateInfraBorder2LatestVersionId\", versionsInfo[i].id);",
									"        }",
									"    }",
									"}",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/template-programmer/template/version/{{templateInfraBorder2Id}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"template-programmer",
								"template",
								"version",
								"{{templateInfraBorder2Id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Deploy Template",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"forcePushTemplate\": true,\n\n    \"targetInfo\": [\n        {\n            \"id\": \"100.124.0.2\",\n            \"type\": \"MANAGED_DEVICE_IP\",\n            \"params\": {}\n        }\n    ],\n    \"templateId\": \"{{templateInfraBorder2LatestVersionId}}\"\n}"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/template-programmer/template/deploy",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"template-programmer",
								"template",
								"deploy"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "5. Build Campus VN",
			"item": [
				{
					"name": "Get HR, ACCT, Employees, CQ SGT IDs",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "186a9a46-305e-4a21-abe6-6b20907ea0ab",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var data = JSON.parse(responseBody);",
									"",
									"for (var i=0; i < data.response.length; i++) {",
									"    if (data.response[i].name == \"hr\") {",
									"        postman.setEnvironmentVariable(\"sgtHrId\", data.response[i].id);",
									"    }",
									"        if (data.response[i].name == \"acct\") {",
									"        postman.setEnvironmentVariable(\"sgtAcctId\", data.response[i].id);",
									"    }",
									"        if (data.response[i].name == \"Employees\") {",
									"        postman.setEnvironmentVariable(\"sgtEmpId\", data.response[i].id);",
									"    }",
									"        if (data.response[i].name == \"Campus_Quarantine\") {",
									"        postman.setEnvironmentVariable(\"sgtQuaranId\", data.response[i].id);",
									"    }",
									"}",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "x-auth-token",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/data/customer-facing-service/scalablegroup/",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"data",
								"customer-facing-service",
								"scalablegroup",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Campus VN with SGTs",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"taskId\", data.response.taskId);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n\t{\n\t\t\"name\":\"Campus\",\n\t\t\"virtualNetworkContextType\":\"ISOLATED\",\n\t\t\"scalableGroup\":\n\t\t[\n\t\t\t{\"idRef\":\"{{sgtHrId}}\"},\n\t\t\t{\"idRef\":\"{{sgtAcctId}}\"},\n\t\t\t{\"idRef\":\"{{sgtEmpId}}\"},\n\t\t\t{\"idRef\":\"{{sgtQuaranId}}\"}\n\t\t]\n\t\t\n\t}\n]"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/data/customer-facing-service/virtualnetworkcontext/",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"data",
								"customer-facing-service",
								"virtualnetworkcontext",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"var latestRequest = pm.variables.get(\"latestRequest\");\r",
									"var service = data.response.serviceType;\r",
									"var isError = data.response.isError.toString();\r",
									"\r",
									"\r",
									"if (isError == \"false\") {\r",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");\r",
									"}\r",
									"else {\r",
									"    console.log(\"........ \" + latestRequest + \" generated an ERROR !!!!!\");\r",
									"    console.log(\"........ Service type is \" + service);\r",
									"    console.log(\"........ Failure reason is \" + data.response.failureReason);\r",
									"    \r",
									"}\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/task/{{taskId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"task",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create SJC-Campus Pool",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"taskId\", data.response.taskId);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"context\":\n\t[{\n\t\t\"contextKey\":\"siteId\",\n\t\t\"contextValue\":\"{{dsgnAreaTopId}}\"\n\t\t\n\t}],\n\t\t\"shared\":true,\n\t\t\"ipPoolOwner\":\"DNAC\",\n\t\t\"parentUuid\":\"{{dsgnGlobalPool1Id}}\",\n\t\t\"ipPoolName\":\"SJC-Campus-Users\",\n\t\t\"overlapping\":false,\n\t\t\"gateways\":[\"100.100.0.1\"],\n\t\t\"dnsServerIps\":[\"208.67.220.220\",\"208.67.222.222\"],\n\t\t\"dhcpServerIps\":[\"100.127.0.1\",\"100.64.0.100\"],\n\t\t\"ipPoolCidr\":\"100.100.0.0/16\"\n\t\n}"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/ippool/subpool",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"ippool",
								"subpool"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"var latestRequest = pm.variables.get(\"latestRequest\");\r",
									"var service = data.response.serviceType;\r",
									"var isError = data.response.isError.toString();\r",
									"\r",
									"\r",
									"if (isError == \"false\") {\r",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");\r",
									"}\r",
									"else {\r",
									"    console.log(\"........ \" + latestRequest + \" generated an ERROR !!!!!\");\r",
									"    console.log(\"........ Service type is \" + service);\r",
									"    console.log(\"........ Failure reason is \" + data.response.failureReason);\r",
									"    \r",
									"}\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/task/{{taskId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"task",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get SJC-Campus Reservation ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "186a9a46-305e-4a21-abe6-6b20907ea0ab",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var data = JSON.parse(responseBody);",
									"",
									"for (var i=0; i < data.response.length; i++) {",
									"    if (data.response[i].ipPoolName == \"SJC-Campus-Users\") {",
									"        postman.setEnvironmentVariable(\"dsgnCampusPoolId\", data.response[i].id);",
									"    }",
									"}",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "x-auth-token",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/ippool?parentUuid={{dsgnGlobalPool1Id}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"ippool"
							],
							"query": [
								{
									"key": "parentUuid",
									"value": "{{dsgnGlobalPool1Id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update San Jose with SJC-Campus Reservation ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"taskId\", data.response.taskId);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n\t{\n\t\t\"instanceType\":\"reference\",\n\t\t\"namespace\":\"global\",\n\t\t\"type\":\"reference.setting\",\n\t\t\"key\":\"ip.pool.generic.{{dsgnCampusPoolId}}\",\n\t\t\"value\":\n\t\t[\n\t\t\t{\"objReferences\":[\"{{dsgnCampusPoolId}}\"],\n\t\t\t\"type\":\"lan\",\"url\":\"\"\n\t\t\t\t\n\t\t\t}\n\t\t],\n\t\t\"groupUuid\":\"{{dsgnAreaTopId}}\"\n\t\t\n\t}\n]"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/commonsetting/global/{{dsgnAreaTopId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"commonsetting",
								"global",
								"{{dsgnAreaTopId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Status - Pause 1 Min",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"var latestRequest = pm.variables.get(\"latestRequest\");",
									"var service = data.response.serviceType;",
									"var isError = data.response.isError.toString();",
									"",
									"",
									"if (isError == \"false\") {",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");",
									"}",
									"else {",
									"    console.log(\"........ \" + latestRequest + \" generated an ERROR !!!!!\");",
									"    console.log(\"........ Service type is \" + service);",
									"    console.log(\"........ Failure reason is \" + data.response.failureReason);",
									"    ",
									"}",
									"",
									"",
									"",
									"console.log(\"Sleeping for one min.\");",
									"setTimeout(function(){}, 60000);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/task/{{taskId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"task",
								"{{taskId}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "6. Campus VN Host Onboarding",
			"item": [
				{
					"name": "Get Virtual Network Context",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var data = JSON.parse(responseBody);",
									"",
									"for (var i=0; i < data.response.length; i++) {",
									"    if (data.response[i].name == \"DEFAULT_VN\") {",
									"        postman.setEnvironmentVariable(\"vncDefaultVnId\", data.response[i].id);",
									"    }",
									"",
									"    if (data.response[i].name == \"INFRA_VN\") {",
									"        postman.setEnvironmentVariable(\"vncInfraVnId\", data.response[i].id);",
									"    }",
									"    ",
									"    if (data.response[i].name == \"Campus\") {",
									"        postman.setEnvironmentVariable(\"vncCampusVnId\", data.response[i].id);",
									"    }",
									"",
									"    if (data.response[i].name == \"Guest\") {",
									"        postman.setEnvironmentVariable(\"vncGuestVnId\", data.response[i].id);",
									"    }",
									"}",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/data/customer-facing-service/virtualnetworkcontext",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"data",
								"customer-facing-service",
								"virtualnetworkcontext"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Fabric Virtual Network",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var vncDefaultVnId = pm.variables.get(\"vncDefaultVnId\");",
									"var vncCampusId = pm.variables.get(\"vncCampusVnId\");",
									"var vncGuestId = pm.variables.get(\"vncGuestVnId\");",
									"var vncInfraVnId = pm.variables.get(\"vncInfraVnId\");",
									"",
									"console.log(vncDefaultVnId);",
									"",
									"var data = JSON.parse(responseBody);",
									"",
									"for (var i=0; i < data.response.length; i++) {",
									"    if (data.response[i].virtualNetworkContextId == vncDefaultVnId) {",
									"        postman.setEnvironmentVariable(\"vnDefaultVnId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnFullName\", data.response[i].name);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnNamespace\", data.response[i].namespace);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnAuthEntityId\", data.response[i].authEntityId);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnContextId\", data.response[i].virtualNetworkContextId);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnAuthEntityClass\", data.response[i].authEntityClass);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnL3Instance\", data.response[i].l3Instance);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnInstanceId\", data.response[i].instanceId);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnResourceVersion\", data.response[i].resourceVersion);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnInstanceVersion\", data.response[i].instanceVersion);",
									"    }",
									"    if (data.response[i].virtualNetworkContextId == vncCampusId) {",
									"        postman.setEnvironmentVariable(\"vnCampusId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"vnCampusFullName\", data.response[i].name);",
									"        postman.setEnvironmentVariable(\"vnCampusNamespace\", data.response[i].namespace);",
									"        postman.setEnvironmentVariable(\"vnCampusAuthEntityId\", data.response[i].authEntityId);",
									"        postman.setEnvironmentVariable(\"vnCampusContextId\", data.response[i].virtualNetworkContextId);",
									"        postman.setEnvironmentVariable(\"vnCampusAuthEntityClass\", data.response[i].authEntityClass);",
									"        postman.setEnvironmentVariable(\"vnCampusL3Instance\", data.response[i].l3Instance);",
									"        postman.setEnvironmentVariable(\"vnCampusInstanceId\", data.response[i].instanceId);",
									"        postman.setEnvironmentVariable(\"vnCampusResourceVersion\", data.response[i].resourceVersion);",
									"        postman.setEnvironmentVariable(\"vnCampusInstanceVersion\", data.response[i].instanceVersion);",
									"    }",
									"    if (data.response[i].virtualNetworkContextId == vncGuestId) {",
									"        postman.setEnvironmentVariable(\"vnGuestId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"vnGuestFullName\", data.response[i].name);",
									"        postman.setEnvironmentVariable(\"vnGuestNamespace\", data.response[i].namespace);",
									"        postman.setEnvironmentVariable(\"vnGuestAuthEntityId\", data.response[i].authEntityId);",
									"        postman.setEnvironmentVariable(\"vnGuestContextId\", data.response[i].virtualNetworkContextId);",
									"        postman.setEnvironmentVariable(\"vnGuestAuthEntityClass\", data.response[i].authEntityClass);",
									"        postman.setEnvironmentVariable(\"vnGuestL3Instance\", data.response[i].l3Instance);",
									"        postman.setEnvironmentVariable(\"vnGuestInstanceId\", data.response[i].instanceId);",
									"        postman.setEnvironmentVariable(\"vnGuestResourceVersion\", data.response[i].resourceVersion);",
									"        postman.setEnvironmentVariable(\"vnGuestInstanceVersion\", data.response[i].instanceVersion);",
									"    }",
									"    if (data.response[i].virtualNetworkContextId == vncInfraVnId) {",
									"        postman.setEnvironmentVariable(\"vnInfraId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"vnInfraFullName\", data.response[i].name);",
									"        postman.setEnvironmentVariable(\"vnInfraNamespace\", data.response[i].namespace);",
									"        postman.setEnvironmentVariable(\"vnInfraAuthEntityId\", data.response[i].authEntityId);",
									"        postman.setEnvironmentVariable(\"vnInfraContextId\", data.response[i].virtualNetworkContextId);",
									"        postman.setEnvironmentVariable(\"vnInfraAuthEntityClass\", data.response[i].authEntityClass);",
									"        postman.setEnvironmentVariable(\"vnInfraL3Instance\", data.response[i].l3Instance);",
									"        postman.setEnvironmentVariable(\"vnInfraInstanceId\", data.response[i].instanceId);",
									"        postman.setEnvironmentVariable(\"vnInfraResourceVersion\", data.response[i].resourceVersion);",
									"        postman.setEnvironmentVariable(\"vnInfraInstanceVersion\", data.response[i].instanceVersion);",
									"    }",
									"",
									"}",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/data/customer-facing-service/VirtualNetwork",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"data",
								"customer-facing-service",
								"VirtualNetwork"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Fabric Data",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var data = JSON.parse(responseBody);",
									"",
									"",
									"    ",
									"for (var i=0; i < data.response.length; i++) {",
									"    if (data.response[i].name == \"US West\") {",
									"        postman.setEnvironmentVariable(\"fabId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"fabResourceVersion\", data.response[i].resourceVersion);",
									"         }",
									"    if (data.response[i].name.includes(\"San_Jose_US_West\")) {",
									"        postman.setEnvironmentVariable(\"fabSiteId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"fabSiteResourceVersion\", data.response[i].resourceVersion);",
									"        strFabVirtualNetworks=JSON.stringify(data.response[i].virtualNetwork);",
									"        postman.setEnvironmentVariable(\"fabVirtualNetworks\", strFabVirtualNetworks);",
									"         }",
									"    else if (data.response[i].name.includes(\"Transit\")) {",
									"        postman.setEnvironmentVariable(\"fabTransitId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"fabSiteTransitVersion\", data.response[i].resourceVersion);",
									"         }",
									"  ",
									"}",
									"",
									"\tvar latestRequest = pm.info.requestName;",
									"\tpostman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"\tconsole.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/data/customer-facing-service/ConnectivityDomain",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"data",
								"customer-facing-service",
								"ConnectivityDomain"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Closed Authentication ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var data = JSON.parse(responseBody);",
									"",
									"for (var i=0; i < data.response.length; i++) {",
									"    if (data.response[i].name == \"Closed Authentication\") {",
									"        postman.setEnvironmentVariable(\"authClosedId\", data.response[i].siteProfileUuid);",
									"    }",
									"}",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-auth-token",
								"value": "{{dnacToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/siteprofile?namespace=authentication",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"siteprofile"
							],
							"query": [
								{
									"key": "namespace",
									"value": "authentication"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Set Default Authentication Profile to Closed",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d247b1d4-7550-43b5-b4cf-c1e8e7f92111",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"taskId\", data.response.taskId);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n\t{\n\t\t\"id\":\"{{fabSiteId}}\",\n\t\t\"type\":\"ConnectivityDomain\",\n\t\t\"name\":\"Global/San_Jose_US_West\",\n\t\t\"domainType\":\"FABRIC_SITE\",\n\t\t\"isDefault\":false,\n\t\t\"virtualNetwork\":\n\t\t[\n\t\t\t{\"idRef\":\"{{vnInfraId}}\"},\n\t\t\t{\"idRef\":\"{{vnDefaultVnId}}\"},\n\t\t\t{\"idRef\":\"{{vnCampusId}}\"}\n\t\t],\n\t\t\"deviceInfo\":\n\t\t[\n\t\t\t{\"idRef\":\"{{cpborder1DevinfoId}}\"},\n\t\t\t{\"idRef\":\"{{cpborder2DevinfoId}}\"},\n\t\t\t{\"idRef\":\"{{edge1DevinfoId}}\"}\n\t\t],\n\t\t\"multicastInfo\":[],\n\t\t\"enableMonitoring\":true,\n\t\t\"resourceVersion\":{{fabSiteResourceVersion}},\n\t\t\"siteId\":\"{{dsgnAreaTopId}}\",\n\t\t\"siteSpecificDomain\":[],\n\t\t\"authenticationProfileId\":\"{{authClosedId}}\"\n\t\t\n\t}\n]\n\n"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/data/customer-facing-service/ConnectivityDomain",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"data",
								"customer-facing-service",
								"ConnectivityDomain"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"var latestRequest = pm.variables.get(\"latestRequest\");\r",
									"var service = data.response.serviceType;\r",
									"var isError = data.response.isError.toString();\r",
									"\r",
									"\r",
									"if (isError == \"false\") {\r",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");\r",
									"}\r",
									"else {\r",
									"    console.log(\"........ \" + latestRequest + \" generated an ERROR !!!!!\");\r",
									"    console.log(\"........ Service type is \" + service);\r",
									"    console.log(\"........ Failure reason is \" + data.response.failureReason);\r",
									"    \r",
									"}\r",
									"var latestRequest = pm.info.requestName;\r",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);\r",
									"console.log (\"Sending request \" + latestRequest);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/task/{{taskId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"task",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Bind IP Pool to Campus VN",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d247b1d4-7550-43b5-b4cf-c1e8e7f92111",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"taskId\", data.response.taskId);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n\t{\n\t\t\"fabricOverride\":[],\n\t\t\"segment\":\n\t\t[\n\t\t\t{\n\t\t\t\t\"type\":\"Segment\",\n\t\t\t\t\"name\":\"{{authPolicyCampus}}\",\n\t\t\t\t\"trafficType\":\"DATA\",\n\t\t\t\t\"ipPoolId\":\"{{dsgnCampusPoolId}}\",\n\t\t\t\t\"isCriticalPool\":false,\n\t\t\t\t\"isFloodAndLearn\":true,\n\t\t\t\t\"isSelectiveFloodingEnabled\":false,\n\t\t\t\t\"isApProvisioning\":false,\n\t\t\t\t\"isDefaultEnterprise\":false,\n\t\t\t\t\"scalableGroupId\":\"\",\n\t\t\t\t\"isExtendedProvisioning\":false,\n\t\t\t\t\"connectivityDomain\":\n\t\t\t\t\t{\n\t\t\t\t\t\t\"idRef\":\"{{fabSiteId}}\"\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t\"id\":\"{{vnCampusId}}\",\n\t\t\"name\":\"{{vnCampusFullName}}\",\n\t\t\"type\":\"VirtualNetwork\",\n\t\t\"isDefault\":false,\n\t\t\"isInfra\":false,\n\t\t\"l3Instance\":{{vnCampusL3Instance}},\n\t\t\"namespace\":\"{{vnCampusNamespace}}\",\n\t\t\"instanceId\":{{vnCampusInstanceId}},\n\t\t\"displayName\":\"0\",\n\t\t\"deployPending\":\"NONE\",\n\t\t\"instanceVersion\":{{vnCampusInstanceVersion}},\n\t\t\"deployed\":false,\n\t\t\"isStale\":false,\n\t\t\"provisioningState\":\"DEFINED\",\n\t\t\"cfsChangeInfo\":[],\n\t\t\"virtualNetworkContextId\":\"{{vnCampusContextId}}\",\n\t\t\"resourceVersion\":{{vnCampusResourceVersion}}\n\t\t\n\t}\n]"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/data/customer-facing-service/VirtualNetwork",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"data",
								"customer-facing-service",
								"VirtualNetwork"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Status - Pause 1 Min",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"var latestRequest = pm.variables.get(\"latestRequest\");",
									"var service = data.response.serviceType;",
									"var isError = data.response.isError.toString();",
									"",
									"",
									"if (isError == \"false\") {",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");",
									"}",
									"else {",
									"    console.log(\"........ \" + latestRequest + \" generated an ERROR !!!!!\");",
									"    console.log(\"........ Service type is \" + service);",
									"    console.log(\"........ Failure reason is \" + data.response.failureReason);",
									"    ",
									"}",
									"",
									"",
									"",
									"console.log(\"Sleeping for one min.\");",
									"setTimeout(function(){}, 60000);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/task/{{taskId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"task",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Fabric Data",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var data = JSON.parse(responseBody);",
									"",
									"",
									"    ",
									"for (var i=0; i < data.response.length; i++) {",
									"    if (data.response[i].name == \"US West\") {",
									"        postman.setEnvironmentVariable(\"fabId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"fabResourceVersion\", data.response[i].resourceVersion);",
									"         }",
									"    if (data.response[i].name.includes(\"San_Jose_US_West\")) {",
									"        postman.setEnvironmentVariable(\"fabSiteId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"fabSiteResourceVersion\", data.response[i].resourceVersion);",
									"        strFabVirtualNetworks=JSON.stringify(data.response[i].virtualNetwork);",
									"        postman.setEnvironmentVariable(\"fabVirtualNetworks\", strFabVirtualNetworks);",
									"         }",
									"    else if (data.response[i].name.includes(\"Transit\")) {",
									"        postman.setEnvironmentVariable(\"fabTransitId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"fabSiteTransitVersion\", data.response[i].resourceVersion);",
									"         }",
									"  ",
									"}",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/data/customer-facing-service/ConnectivityDomain",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"data",
								"customer-facing-service",
								"ConnectivityDomain"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Virtual Network Context",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var data = JSON.parse(responseBody);",
									"",
									"for (var i=0; i < data.response.length; i++) {",
									"    if (data.response[i].name == \"DEFAULT_VN\") {",
									"        postman.setEnvironmentVariable(\"vncDefaultVnId\", data.response[i].id);",
									"    }",
									"",
									"    if (data.response[i].name == \"INFRA_VN\") {",
									"        postman.setEnvironmentVariable(\"vncInfraVnId\", data.response[i].id);",
									"    }",
									"    ",
									"    if (data.response[i].name == \"Campus\") {",
									"        postman.setEnvironmentVariable(\"vncCampusVnId\", data.response[i].id);",
									"    }",
									"",
									"    if (data.response[i].name == \"Guest\") {",
									"        postman.setEnvironmentVariable(\"vncGuestVnId\", data.response[i].id);",
									"    }",
									"}",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/data/customer-facing-service/virtualnetworkcontext",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"data",
								"customer-facing-service",
								"virtualnetworkcontext"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Fabric Virtual Network",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var vncDefaultVnId = pm.variables.get(\"vncDefaultVnId\");",
									"var vncCampusId = pm.variables.get(\"vncCampusVnId\");",
									"var vncGuestId = pm.variables.get(\"vncGuestVnId\");",
									"var vncInfraVnId = pm.variables.get(\"vncInfraVnId\");",
									"",
									"console.log(vncDefaultVnId);",
									"",
									"var data = JSON.parse(responseBody);",
									"",
									"for (var i=0; i < data.response.length; i++) {",
									"    if (data.response[i].virtualNetworkContextId == vncDefaultVnId) {",
									"        postman.setEnvironmentVariable(\"vnDefaultVnId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnFullName\", data.response[i].name);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnNamespace\", data.response[i].namespace);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnAuthEntityId\", data.response[i].authEntityId);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnContextId\", data.response[i].virtualNetworkContextId);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnAuthEntityClass\", data.response[i].authEntityClass);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnL3Instance\", data.response[i].l3Instance);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnInstanceId\", data.response[i].instanceId);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnResourceVersion\", data.response[i].resourceVersion);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnInstanceVersion\", data.response[i].instanceVersion);",
									"    }",
									"    if (data.response[i].virtualNetworkContextId == vncCampusId) {",
									"        postman.setEnvironmentVariable(\"vnCampusId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"vnCampusFullName\", data.response[i].name);",
									"        postman.setEnvironmentVariable(\"vnCampusNamespace\", data.response[i].namespace);",
									"        postman.setEnvironmentVariable(\"vnCampusAuthEntityId\", data.response[i].authEntityId);",
									"        postman.setEnvironmentVariable(\"vnCampusContextId\", data.response[i].virtualNetworkContextId);",
									"        postman.setEnvironmentVariable(\"vnCampusAuthEntityClass\", data.response[i].authEntityClass);",
									"        postman.setEnvironmentVariable(\"vnCampusL3Instance\", data.response[i].l3Instance);",
									"        postman.setEnvironmentVariable(\"vnCampusInstanceId\", data.response[i].instanceId);",
									"        postman.setEnvironmentVariable(\"vnCampusResourceVersion\", data.response[i].resourceVersion);",
									"        postman.setEnvironmentVariable(\"vnCampusInstanceVersion\", data.response[i].instanceVersion);",
									"    }",
									"    if (data.response[i].virtualNetworkContextId == vncGuestId) {",
									"        postman.setEnvironmentVariable(\"vnGuestId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"vnGuestFullName\", data.response[i].name);",
									"        postman.setEnvironmentVariable(\"vnGuestNamespace\", data.response[i].namespace);",
									"        postman.setEnvironmentVariable(\"vnGuestAuthEntityId\", data.response[i].authEntityId);",
									"        postman.setEnvironmentVariable(\"vnGuestContextId\", data.response[i].virtualNetworkContextId);",
									"        postman.setEnvironmentVariable(\"vnGuestAuthEntityClass\", data.response[i].authEntityClass);",
									"        postman.setEnvironmentVariable(\"vnGuestL3Instance\", data.response[i].l3Instance);",
									"        postman.setEnvironmentVariable(\"vnGuestInstanceId\", data.response[i].instanceId);",
									"        postman.setEnvironmentVariable(\"vnGuestResourceVersion\", data.response[i].resourceVersion);",
									"        postman.setEnvironmentVariable(\"vnGuestInstanceVersion\", data.response[i].instanceVersion);",
									"    }",
									"    if (data.response[i].virtualNetworkContextId == vncInfraVnId) {",
									"        postman.setEnvironmentVariable(\"vnInfraId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"vnInfraFullName\", data.response[i].name);",
									"        postman.setEnvironmentVariable(\"vnInfraNamespace\", data.response[i].namespace);",
									"        postman.setEnvironmentVariable(\"vnInfraAuthEntityId\", data.response[i].authEntityId);",
									"        postman.setEnvironmentVariable(\"vnInfraContextId\", data.response[i].virtualNetworkContextId);",
									"        postman.setEnvironmentVariable(\"vnInfraAuthEntityClass\", data.response[i].authEntityClass);",
									"        postman.setEnvironmentVariable(\"vnInfraL3Instance\", data.response[i].l3Instance);",
									"        postman.setEnvironmentVariable(\"vnInfraInstanceId\", data.response[i].instanceId);",
									"        postman.setEnvironmentVariable(\"vnInfraResourceVersion\", data.response[i].resourceVersion);",
									"        postman.setEnvironmentVariable(\"vnInfraInstanceVersion\", data.response[i].instanceVersion);",
									"    }",
									"",
									"}",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/data/customer-facing-service/VirtualNetwork",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"data",
								"customer-facing-service",
								"VirtualNetwork"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Device Info - Border 1 and 2 in Fabric",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var data = JSON.parse(responseBody);",
									"var vnInfraId = pm.variables.get(\"vnInfraId\");",
									"var vnCampusId = pm.variables.get(\"vnCampusId\");",
									"var vnGuestId = pm.variables.get(\"vnGuestId\");",
									"",
									"for (var i=0; i < data.response.length; i++) {",
									"    if (data.response[i].name.includes (\"edge-1\")) {",
									"        postman.setEnvironmentVariable(\"edge1DevinfoId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"edge1InstanceId\", data.response[i].instanceId);",
									"        postman.setEnvironmentVariable(\"edge1AuthEntityId\", data.response[i].authEntityId);",
									"        postman.setEnvironmentVariable(\"edge1DisplayName\", data.response[i].displayName);",
									"        postman.setEnvironmentVariable(\"edge1AuthEntityClass\", data.response[i].authEntityClass);",
									"        postman.setEnvironmentVariable(\"edge1InstanceTenantId\", data.response[i].instanceTenantId);",
									"        postman.setEnvironmentVariable(\"edge1CreateTime\", data.response[i].createTime);",
									"        postman.setEnvironmentVariable(\"edge1LastUpdateTime\", data.response[i].lastUpdateTime);",
									"        postman.setEnvironmentVariable(\"edge1Name\", data.response[i].name);",
									"        postman.setEnvironmentVariable(\"edge1Namespace\", data.response[i].namespace);",
									"        postman.setEnvironmentVariable(\"edge1ProvisioningState\", data.response[i].provisioningState);",
									"        postman.setEnvironmentVariable(\"edge1ResourceVersion\", data.response[i].resourceVersion);",
									"        postman.setEnvironmentVariable(\"edge1Type\", data.response[i].type);",
									"        postman.setEnvironmentVariable(\"edge1NetworkDeviceId\", data.response[i].networkDeviceId);",
									"        postman.setEnvironmentVariable(\"edge1SiteId\", data.response[i].siteId);",
									"        strNetworkWideSettings = JSON.stringify(data.response[i].networkWideSettings);",
									"        postman.setEnvironmentVariable(\"edge1NetworkWideSettings\",strNetworkWideSettings );",
									"    }",
									"        if (data.response[i].name.includes (\"cp-border-1\")) {",
									"        postman.setEnvironmentVariable(\"cpborder1DevinfoId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"cpborder1InstanceId\", data.response[i].instanceId);",
									"        postman.setEnvironmentVariable(\"cpborder1AuthEntityId\", data.response[i].authEntityId);",
									"        postman.setEnvironmentVariable(\"cpborder1DisplayName\", data.response[i].displayName);",
									"        postman.setEnvironmentVariable(\"cpborder1AuthEntityClass\", data.response[i].authEntityClass);",
									"        postman.setEnvironmentVariable(\"cpborder1InstanceTenantId\", data.response[i].instanceTenantId);",
									"        postman.setEnvironmentVariable(\"cpborder1CreateTime\", data.response[i].createTime);",
									"        postman.setEnvironmentVariable(\"cpborder1LastUpdateTime\", data.response[i].lastUpdateTime);",
									"        postman.setEnvironmentVariable(\"cpborder1Name\", data.response[i].name);",
									"        postman.setEnvironmentVariable(\"cpborder1Namespace\", data.response[i].namespace);",
									"        postman.setEnvironmentVariable(\"cpborder1ProvisioningState\", data.response[i].provisioningState);",
									"        postman.setEnvironmentVariable(\"cpborder1ResourceVersion\", data.response[i].resourceVersion);",
									"        postman.setEnvironmentVariable(\"cpborder1Type\", data.response[i].type);",
									"        postman.setEnvironmentVariable(\"cpborder1NetworkDeviceId\", data.response[i].networkDeviceId);",
									"        postman.setEnvironmentVariable(\"cpborder1SiteId\", data.response[i].siteId);",
									"        strNetworkWideSettings = JSON.stringify(data.response[i].networkWideSettings);",
									"        postman.setEnvironmentVariable(\"cpborder1NetworkWideSettings\",strNetworkWideSettings );",
									"        postman.setEnvironmentVariable(\"cpborder1DevSettingsId\", data.response[i].deviceSettings.id);",
									"        postman.setEnvironmentVariable(\"cpborder1DevSettingsInstanceId\", data.response[i].deviceSettings.instanceId);",
									"        postman.setEnvironmentVariable(\"cpborder1DevSettingsInstanceVersion\", data.response[i].deviceSettings.instanceVersion);",
									"        postman.setEnvironmentVariable(\"extConnBorder1Int\", data.response[i].deviceSettings.extConnectivitySettings[0].id);",
									"        postman.setEnvironmentVariable(\"extConnBorder1IntInstanceId\", data.response[i].deviceSettings.extConnectivitySettings[0].instanceId);",
									"        postman.setEnvironmentVariable(\"extConnBorder1IntInstanceVersion\", data.response[i].deviceSettings.extConnectivitySettings[0].instanceVersion);",
									"        for (var x=0; x < data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff.length; x++) {",
									"            if (data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].virtualNetwork.idRef == vnInfraId) {",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3InfraId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].id);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3InfraInstanceId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].instanceId);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3InfraInstanceVersion\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].instanceVersion);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3InfraLocalIp\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].localIpAddress);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3InfraRemoteIp\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].remoteIpAddress);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3InfraVlanId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].vlanId);",
									"            }",
									"            if (data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].virtualNetwork.idRef == vnCampusId) {",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3CampusId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].id);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3CampusInstanceId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].instanceId);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3CampusInstanceVersion\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].instanceVersion);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3CampusLocalIp\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].localIpAddress);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3CampusRemoteIp\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].remoteIpAddress);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3CampusVlanId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].vlanId);",
									"                }",
									"            if (data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].virtualNetwork.idRef == vnGuestId) {",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3GuestId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].id);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3GuestInstanceId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].instanceId);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3GuestInstanceVersion\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].instanceVersion);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3GuestLocalIp\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].localIpAddress);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3GuestRemoteIp\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].remoteIpAddress);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3GuestVlanId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].vlanId);",
									"                }",
									"            }",
									"        }",
									"        if (data.response[i].name.includes (\"cp-border-2\")) {",
									"        postman.setEnvironmentVariable(\"cpborder2DevinfoId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"cpborder2InstanceId\", data.response[i].instanceId);",
									"        postman.setEnvironmentVariable(\"cpborder2AuthEntityId\", data.response[i].authEntityId);",
									"        postman.setEnvironmentVariable(\"cpborder2DisplayName\", data.response[i].displayName);",
									"        postman.setEnvironmentVariable(\"cpborder2AuthEntityClass\", data.response[i].authEntityClass);",
									"        postman.setEnvironmentVariable(\"cpborder2InstanceTenantId\", data.response[i].instanceTenantId);",
									"        postman.setEnvironmentVariable(\"cpborder2CreateTime\", data.response[i].createTime);",
									"        postman.setEnvironmentVariable(\"cpborder2LastUpdateTime\", data.response[i].lastUpdateTime);",
									"        postman.setEnvironmentVariable(\"cpborder2Name\", data.response[i].name);",
									"        postman.setEnvironmentVariable(\"cpborder2Namespace\", data.response[i].namespace);",
									"        postman.setEnvironmentVariable(\"cpborder2ProvisioningState\", data.response[i].provisioningState);",
									"        postman.setEnvironmentVariable(\"cpborder2ResourceVersion\", data.response[i].resourceVersion);",
									"        postman.setEnvironmentVariable(\"cpborder2Type\", data.response[i].type);",
									"        postman.setEnvironmentVariable(\"cpborder2NetworkDeviceId\", data.response[i].networkDeviceId);",
									"        postman.setEnvironmentVariable(\"cpborder2SiteId\", data.response[i].siteId);",
									"        strNetworkWideSettings = JSON.stringify(data.response[i].networkWideSettings);",
									"        postman.setEnvironmentVariable(\"cpborder2NetworkWideSettings\",strNetworkWideSettings );",
									"        postman.setEnvironmentVariable(\"cpborder2DevSettingsId\", data.response[i].deviceSettings.id);",
									"        postman.setEnvironmentVariable(\"cpborder2DevSettingsInstanceId\", data.response[i].deviceSettings.instanceId);",
									"        postman.setEnvironmentVariable(\"cpborder2DevSettingsInstanceVersion\", data.response[i].deviceSettings.instanceVersion);",
									"        postman.setEnvironmentVariable(\"extConnBorder2Int\", data.response[i].deviceSettings.extConnectivitySettings[0].id);",
									"        postman.setEnvironmentVariable(\"extConnBorder2IntInstanceId\", data.response[i].deviceSettings.extConnectivitySettings[0].instanceId);",
									"        postman.setEnvironmentVariable(\"extConnBorder2IntInstanceVersion\", data.response[i].deviceSettings.extConnectivitySettings[0].instanceVersion);",
									"        for (var x=0; x < data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff.length; x++) {",
									"\t\t if (data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].virtualNetwork.idRef == vnInfraId) {",
									"\t\t\t\t postman.setEnvironmentVariable(\"extConnBorder2L3InfraId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].id);",
									"\t\t\t\t postman.setEnvironmentVariable(\"extConnBorder2L3InfraInstanceId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].instanceId);",
									"\t\t\t\t postman.setEnvironmentVariable(\"extConnBorder2L3InfraInstanceVersion\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].instanceVersion);",
									"\t\t\t\t postman.setEnvironmentVariable(\"extConnBorder2L3InfraLocalIp\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].localIpAddress);",
									"\t\t\t\t postman.setEnvironmentVariable(\"extConnBorder2L3InfraRemoteIp\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].remoteIpAddress);",
									"\t\t\t\t postman.setEnvironmentVariable(\"extConnBorder2L3InfraVlanId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].vlanId);",
									"\t\t    }",
									"            if (data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].virtualNetwork.idRef == vnCampusId) {",
									"                postman.setEnvironmentVariable(\"extConnBorder2L3CampusId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].id);",
									"                postman.setEnvironmentVariable(\"extConnBorder2L3CampusInstanceId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].instanceId);",
									"                postman.setEnvironmentVariable(\"extConnBorder2L3CampusInstanceVersion\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].instanceVersion);",
									"                postman.setEnvironmentVariable(\"extConnBorder2L3CampusLocalIp\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].localIpAddress);",
									"                postman.setEnvironmentVariable(\"extConnBorder2L3CampusRemoteIp\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].remoteIpAddress);",
									"                postman.setEnvironmentVariable(\"extConnBorder2L3CampusVlanId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].vlanId);",
									"                }",
									"            if (data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].virtualNetwork.idRef == vnGuestId) {",
									"                postman.setEnvironmentVariable(\"extConnBorder2L3GuestId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].id);",
									"                postman.setEnvironmentVariable(\"extConnBorder2L3GuestInstanceId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].instanceId);",
									"                postman.setEnvironmentVariable(\"extConnBorder2L3GuestInstanceVersion\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].instanceVersion);",
									"                postman.setEnvironmentVariable(\"extConnBorder2L3GuestLocalIp\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].localIpAddress);",
									"                postman.setEnvironmentVariable(\"extConnBorder2L3GuestRemoteIp\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].remoteIpAddress);",
									"                postman.setEnvironmentVariable(\"extConnBorder2L3GuestVlanId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].vlanId);",
									"                }",
									"\t\t }",
									"    }",
									"}",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/data/customer-facing-service/DeviceInfo",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"data",
								"customer-facing-service",
								"DeviceInfo"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Border1 + Campus + 1/0/2 to Fabric",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d247b1d4-7550-43b5-b4cf-c1e8e7f92111",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"taskId\", data.response.taskId);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n\t{\n\t\t\"id\":\"{{fabSiteId}}\",\n\t\t\"type\":\"ConnectivityDomain\",\n\t\t\"name\":\"Global/San_Jose_US_West\",\n\t\t\"domainType\":\"FABRIC_SITE\",\n\t\t\"isDefault\":false,\n\t\t\"virtualNetwork\":{{fabVirtualNetworks}},\n\t\t\"deviceInfo\":\n\t\t[\n\t\t\t{\n\t\t\t\t\"cfsChangeInfo\":[],\n\t\t\t\t\"configs\":[],\t\n\t\t\t\t\"createTime\":{{cpborder2CreateTime}},\n\t\t\t\t\"deployed\":false,\"deviceInterfaceInfo\":[],\n\t\t\t\t\"displayName\":\"{{cpborder2DisplayName}}\",\n\t\t\t\t\"id\":\"{{cpborder2DevinfoId}}\",\n\t\t\t\t\"instanceId\":{{cpborder2InstanceId}},\n\t\t\t\t\"instanceVersion\":{{cpborder2ResourceVersion}},\n\t\t\t\t\"isStale\":false,\n\t\t\t\t\"lastUpdateTime\":{{cpborder2LastUpdateTime}},\n\t\t\t\t\"name\":\"cp-border-2.dcloud.cisco.com\",\n\t\t\t\t\"namespace\":\"{{cpborder2Namespace}}\",\n\t\t\t\t\"networkDeviceId\":\"{{cpborder2NetworkDeviceId}}\",\n\t \t\t\t\"networkWideSettings\":{{cpborder2NetworkWideSettings}},\n \t\t\t\t\"provisioningState\":\"DEFINED\",\n\t\t\t\t\"roles\":[\"BORDERNODE\",\"MAPSERVER\"],\n\t\t\t\t\"siteId\":\"{{dsgnSjc13MdfId}}\",\n\t\t\t\t\"transitNetworks\":[{\"idRef\":\"{{fabTransitId}}\"}],\n\t\t\t\t\"type\":\"DeviceInfo\",\n\t\t\t\t\"wlan\":[],\n\t\t\t\t\"otherDevice\":[],\n\t\t\t\t\"deviceSettings\":\n\t\t\t\t{\n\t\t\t\t\t\"id\":\"{{cpborder2DevSettingsId}}\",\n\t\t\t\t\t\"instanceId\":{{cpborder2DevSettingsInstanceId}},\n\t\t\t\t\t\"displayName\":\"0\",\n\t\t\t\t\t\"instanceVersion\":{{cpborder2DevSettingsInstanceVersion}},\n\t\t\t\t\t\"connectedTo\":[\"INTERNET\"],\n\t\t\t\t\t\"cpu\":0,\n\t\t\t\t\t\"dhcpEnabled\":false,\n\t\t\t\t\t\"externalConnectivityIpPool\":\"{{dsgnTransitPoolId}}\",\n\t\t\t\t\t\"externalDomainRoutingProtocol\":\"BGP\",\n\t\t\t\t\t\"internalDomainProtocolNumber\":\"65534\",\n\t\t\t\t\t\"memory\":0,\n\t\t\t\t\t\"nodeType\":[\"EXTERNAL\"],\n\t\t\t\t\t\"storage\":0,\n\t\t\t\t\t\"extConnectivitySettings\":\n\t\t\t\t\t[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\":\"{{extConnBorder2Int}}\",\n\t\t\t\t\t\t\t\"instanceId\":{{extConnBorder2IntInstanceId}},\n\t\t\t\t\t\t\t\"displayName\":\"0\",\n\t\t\t\t\t\t\t\"instanceVersion\":{{extConnBorder2IntInstanceVersion}},\n\t\t\t\t\t\t\t\"externalDomainProtocolNumber\":\"65535\",\n\t\t\t\t\t\t\t\"interfaceUuid\":\"GigabitEthernet1/0/2\",\n\t\t\t\t\t\t\t\"policyPropagationEnabled\":false,\n\t\t\t\t\t\t\t\"policySgtTag\":0,\n\t\t\t\t\t\t\t\"l2Handoff\":[],\n\t\t\t\t\t\t\t\"l3Handoff\":\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"id\":\"{{extConnBorder2L3InfraId}}\",\n\t\t\t\t\t\t\t\t\t\"instanceId\":{{extConnBorder2L3InfraInstanceId}},\n\t\t\t\t\t\t\t\t\t\"displayName\":\"0\",\n\t\t\t\t\t\t\t\t\t\"instanceVersion\":{{extConnBorder2L3InfraInstanceVersion}},\n\t\t\t\t\t\t\t\t\t\"localIpAddress\":\"{{extConnBorder2L3InfraLocalIp}}\",\n\t\t\t\t\t\t\t\t\t\"remoteIpAddress\":\"{{extConnBorder2L3InfraRemoteIp}}\",\n\t\t\t\t\t\t\t\t\t\"vlanId\":{{extConnBorder2L3InfraVlanId}},\n\t\t\t\t\t\t\t\t\t\"virtualNetwork\":{\"idRef\":\"{{vnInfraId}}\"}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\t{\n\t\t\t\t\"cfsChangeInfo\":[],\n\t\t\t\t\"configs\":[],\n\t\t\t\t\"createTime\":{{edge1CreateTime}},\n\t\t\t\t\"deployed\":false,\n\t\t\t\t\"deviceInterfaceInfo\":[],\n\t\t\t\t\"displayName\":\"{{edge1DisplayName}}\",\n\t\t\t\t\"id\":\"{{edge1DevinfoId}}\",\n\t\t\t\t\"instanceId\":{{edge1InstanceId}},\n\t\t\t\t\"instanceVersion\":{{edge1ResourceVersion}},\n\t\t\t\t\"isStale\":false,\n\t\t\t\t\"lastUpdateTime\":{{edge1LastUpdateTime}},\n\t\t\t\t\"name\":\"edge-1.dcloud.cisco.com\",\n\t\t\t\t\"namespace\":\"{{edge1Namespace}}\",\n\t\t\t\t\"networkDeviceId\":\"{{edge1NetworkDeviceId}}\",\n\t\t\t\t\"networkWideSettings\":{{edge1NetworkWideSettings}},\n\t\t\t\t\"provisioningState\":\"DEFINED\",\n\t\t\t\t\"roles\":[\"EDGENODE\"],\n\t\t\t\t\"siteId\":\"{{dsgnSjc13FirstFloorId}}\",\n\t\t\t\t\"transitNetworks\":[],\n\t\t\t\t\"type\":\"DeviceInfo\",\n\t\t\t\t\"wlan\":[],\n\t\t\t\t\"otherDevice\":[]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"cfsChangeInfo\":[],\n\t\t\t\t\"configs\":[],\n\t\t\t\t\"createTime\":{{cpborder1CreateTime}},\n\t\t\t\t\"deployed\":false,\n\t\t\t\t\"deviceInterfaceInfo\":[],\n\t\t\t\t\"displayName\":\"{{cpborder1DisplayName}}\",\n\t\t\t\t\"id\":\"{{cpborder1DevinfoId}}\",\n\t\t\t\t\"instanceId\":{{cpborder1InstanceId}},\n\t\t\t\t\"instanceVersion\":{{cpborder1ResourceVersion}},\n\t\t\t\t\"isStale\":false,\n\t\t\t\t\"lastUpdateTime\":{{cpborder1LastUpdateTime}},\n\t\t\t\t\"name\":\"{{cpborder1Name}}\",\n\t\t\t\t\"namespace\":\"{{cpborder1Namespace}}\",\n\t\t\t\t\"networkDeviceId\":\"{{cpborder1NetworkDeviceId}}\",\n\t\t\t\t\"networkWideSettings\":{{cpborder1NetworkWideSettings}},\n\t\t\t\t\"provisioningState\":\"DEFINED\",\n\t\t\t\t\"roles\":[\"MAPSERVER\",\"BORDERNODE\"],\n\t\t\t\t\"siteId\":\"{{dsgnSjc13MdfId}}\",\n\t\t\t\t\"transitNetworks\":[{\"idRef\":\"{{fabTransitId}}\"}],\n\t\t\t\t\"type\":\"DeviceInfo\",\n\t\t\t\t\"wlan\":[],\n\t\t\t\t\"otherDevice\":[],\n\t\t\t\t\"deviceSettings\":\n\t\t\t\t{\n\t\t\t\t\t\"id\":\"{{cpborder1DevSettingsId}}\",\n\t\t\t\t\t\"instanceId\":{{cpborder1DevSettingsInstanceId}},\n\t\t\t\t\t\"displayName\":\"0\",\n\t\t\t\t\t\"instanceVersion\":{{cpborder1DevSettingsInstanceVersion}},\n\t\t\t\t\t\"connectedTo\":[\"INTERNET\"],\n\t\t\t\t\t\"cpu\":0,\n\t\t\t\t\t\"dhcpEnabled\":false,\n\t\t\t\t\t\"externalConnectivityIpPool\":\"{{dsgnTransitPoolId}}\",\n\t\t\t\t\t\"externalDomainRoutingProtocol\":\"BGP\",\n\t\t\t\t\t\"internalDomainProtocolNumber\":\"65534\",\n\t\t\t\t\t\"memory\":0,\n\t\t\t\t\t\"nodeType\":[\"EXTERNAL\"],\n\t\t\t\t\t\"storage\":0,\n\t\t\t\t\t\"extConnectivitySettings\":\n\t\t\t\t\t\n\t\t\t\t\t[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"interfaceUuid\":\"GigabitEthernet1/0/2\",\n\t\t\t\t\t\t\t\"policyPropagationEnabled\":false,\n\t\t\t\t\t\t\t\"externalDomainProtocolNumber\":\"65535\",\n\t\t\t\t\t\t\t\"l3Handoff\":\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t{\"virtualNetwork\":{\"idRef\":\"{{vnInfraId}}\"}},\n\t\t\t\t\t\t\t\t{\"virtualNetwork\":{\"idRef\":\"{{vnCampusId}}\"}}\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"l2Handoff\":[]\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t\"multicastInfo\":[],\n\t\t\"enableMonitoring\":true,\n\t\t\"resourceVersion\":{{fabSiteResourceVersion}},\n\t\t\"siteId\":\"{{dsgnAreaTopId}}\",\n\t\t\"siteSpecificDomain\":[],\n\t\t\"wirelessMulticastFeature\":false,\n\t\t\"isNativeMulticastEnabled\":false,\n\t\t\"authenticationProfileId\":\"{{authClosedId}}\"\n\t\t\t\t\t\t\t\t\n\t}\n]\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/data/customer-facing-service/ConnectivityDomain",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"data",
								"customer-facing-service",
								"ConnectivityDomain"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Status - Pause 1 Min",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"var latestRequest = pm.variables.get(\"latestRequest\");",
									"var service = data.response.serviceType;",
									"var isError = data.response.isError.toString();",
									"",
									"",
									"if (isError == \"false\") {",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");",
									"}",
									"else {",
									"    console.log(\"........ \" + latestRequest + \" generated an ERROR !!!!!\");",
									"    console.log(\"........ Service type is \" + service);",
									"    console.log(\"........ Failure reason is \" + data.response.failureReason);",
									"    ",
									"}",
									"",
									"",
									"",
									"console.log(\"Sleeping for one min.\");",
									"setTimeout(function(){}, 60000);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/task/{{taskId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"task",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Fabric Data",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var data = JSON.parse(responseBody);",
									"",
									"",
									"    ",
									"for (var i=0; i < data.response.length; i++) {",
									"    if (data.response[i].name == \"US West\") {",
									"        postman.setEnvironmentVariable(\"fabId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"fabResourceVersion\", data.response[i].resourceVersion);",
									"         }",
									"    if (data.response[i].name.includes(\"San_Jose_US_West\")) {",
									"        postman.setEnvironmentVariable(\"fabSiteId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"fabSiteResourceVersion\", data.response[i].resourceVersion);",
									"        strFabVirtualNetworks=JSON.stringify(data.response[i].virtualNetwork);",
									"        postman.setEnvironmentVariable(\"fabVirtualNetworks\", strFabVirtualNetworks);",
									"         }",
									"    else if (data.response[i].name.includes(\"Transit\")) {",
									"        postman.setEnvironmentVariable(\"fabTransitId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"fabSiteTransitVersion\", data.response[i].resourceVersion);",
									"         }",
									"  ",
									"}",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/data/customer-facing-service/ConnectivityDomain",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"data",
								"customer-facing-service",
								"ConnectivityDomain"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Virtual Network Context",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var data = JSON.parse(responseBody);",
									"",
									"for (var i=0; i < data.response.length; i++) {",
									"    if (data.response[i].name == \"DEFAULT_VN\") {",
									"        postman.setEnvironmentVariable(\"vncDefaultVnId\", data.response[i].id);",
									"    }",
									"",
									"    if (data.response[i].name == \"INFRA_VN\") {",
									"        postman.setEnvironmentVariable(\"vncInfraVnId\", data.response[i].id);",
									"    }",
									"    ",
									"    if (data.response[i].name == \"Campus\") {",
									"        postman.setEnvironmentVariable(\"vncCampusVnId\", data.response[i].id);",
									"    }",
									"",
									"    if (data.response[i].name == \"Guest\") {",
									"        postman.setEnvironmentVariable(\"vncGuestVnId\", data.response[i].id);",
									"    }",
									"}",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/data/customer-facing-service/virtualnetworkcontext",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"data",
								"customer-facing-service",
								"virtualnetworkcontext"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Fabric Virtual Network",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var vncDefaultVnId = pm.variables.get(\"vncDefaultVnId\");",
									"var vncCampusId = pm.variables.get(\"vncCampusVnId\");",
									"var vncGuestId = pm.variables.get(\"vncGuestVnId\");",
									"var vncInfraVnId = pm.variables.get(\"vncInfraVnId\");",
									"",
									"console.log(vncDefaultVnId);",
									"",
									"var data = JSON.parse(responseBody);",
									"",
									"for (var i=0; i < data.response.length; i++) {",
									"    if (data.response[i].virtualNetworkContextId == vncDefaultVnId) {",
									"        postman.setEnvironmentVariable(\"vnDefaultVnId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnFullName\", data.response[i].name);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnNamespace\", data.response[i].namespace);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnAuthEntityId\", data.response[i].authEntityId);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnContextId\", data.response[i].virtualNetworkContextId);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnAuthEntityClass\", data.response[i].authEntityClass);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnL3Instance\", data.response[i].l3Instance);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnInstanceId\", data.response[i].instanceId);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnResourceVersion\", data.response[i].resourceVersion);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnInstanceVersion\", data.response[i].instanceVersion);",
									"    }",
									"    if (data.response[i].virtualNetworkContextId == vncCampusId) {",
									"        postman.setEnvironmentVariable(\"vnCampusId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"vnCampusFullName\", data.response[i].name);",
									"        postman.setEnvironmentVariable(\"vnCampusNamespace\", data.response[i].namespace);",
									"        postman.setEnvironmentVariable(\"vnCampusAuthEntityId\", data.response[i].authEntityId);",
									"        postman.setEnvironmentVariable(\"vnCampusContextId\", data.response[i].virtualNetworkContextId);",
									"        postman.setEnvironmentVariable(\"vnCampusAuthEntityClass\", data.response[i].authEntityClass);",
									"        postman.setEnvironmentVariable(\"vnCampusL3Instance\", data.response[i].l3Instance);",
									"        postman.setEnvironmentVariable(\"vnCampusInstanceId\", data.response[i].instanceId);",
									"        postman.setEnvironmentVariable(\"vnCampusResourceVersion\", data.response[i].resourceVersion);",
									"        postman.setEnvironmentVariable(\"vnCampusInstanceVersion\", data.response[i].instanceVersion);",
									"    }",
									"    if (data.response[i].virtualNetworkContextId == vncGuestId) {",
									"        postman.setEnvironmentVariable(\"vnGuestId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"vnGuestFullName\", data.response[i].name);",
									"        postman.setEnvironmentVariable(\"vnGuestNamespace\", data.response[i].namespace);",
									"        postman.setEnvironmentVariable(\"vnGuestAuthEntityId\", data.response[i].authEntityId);",
									"        postman.setEnvironmentVariable(\"vnGuestContextId\", data.response[i].virtualNetworkContextId);",
									"        postman.setEnvironmentVariable(\"vnGuestAuthEntityClass\", data.response[i].authEntityClass);",
									"        postman.setEnvironmentVariable(\"vnGuestL3Instance\", data.response[i].l3Instance);",
									"        postman.setEnvironmentVariable(\"vnGuestInstanceId\", data.response[i].instanceId);",
									"        postman.setEnvironmentVariable(\"vnGuestResourceVersion\", data.response[i].resourceVersion);",
									"        postman.setEnvironmentVariable(\"vnGuestInstanceVersion\", data.response[i].instanceVersion);",
									"    }",
									"    if (data.response[i].virtualNetworkContextId == vncInfraVnId) {",
									"        postman.setEnvironmentVariable(\"vnInfraId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"vnInfraFullName\", data.response[i].name);",
									"        postman.setEnvironmentVariable(\"vnInfraNamespace\", data.response[i].namespace);",
									"        postman.setEnvironmentVariable(\"vnInfraAuthEntityId\", data.response[i].authEntityId);",
									"        postman.setEnvironmentVariable(\"vnInfraContextId\", data.response[i].virtualNetworkContextId);",
									"        postman.setEnvironmentVariable(\"vnInfraAuthEntityClass\", data.response[i].authEntityClass);",
									"        postman.setEnvironmentVariable(\"vnInfraL3Instance\", data.response[i].l3Instance);",
									"        postman.setEnvironmentVariable(\"vnInfraInstanceId\", data.response[i].instanceId);",
									"        postman.setEnvironmentVariable(\"vnInfraResourceVersion\", data.response[i].resourceVersion);",
									"        postman.setEnvironmentVariable(\"vnInfraInstanceVersion\", data.response[i].instanceVersion);",
									"    }",
									"",
									"}",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/data/customer-facing-service/VirtualNetwork",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"data",
								"customer-facing-service",
								"VirtualNetwork"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Device Info - Border 1 and 2 in Fabric",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var data = JSON.parse(responseBody);",
									"var vnInfraId = pm.variables.get(\"vnInfraId\");",
									"var vnCampusId = pm.variables.get(\"vnCampusId\");",
									"var vnGuestId = pm.variables.get(\"vnGuestId\");",
									"",
									"for (var i=0; i < data.response.length; i++) {",
									"    if (data.response[i].name.includes (\"edge-1\")) {",
									"        postman.setEnvironmentVariable(\"edge1DevinfoId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"edge1InstanceId\", data.response[i].instanceId);",
									"        postman.setEnvironmentVariable(\"edge1AuthEntityId\", data.response[i].authEntityId);",
									"        postman.setEnvironmentVariable(\"edge1DisplayName\", data.response[i].displayName);",
									"        postman.setEnvironmentVariable(\"edge1AuthEntityClass\", data.response[i].authEntityClass);",
									"        postman.setEnvironmentVariable(\"edge1InstanceTenantId\", data.response[i].instanceTenantId);",
									"        postman.setEnvironmentVariable(\"edge1CreateTime\", data.response[i].createTime);",
									"        postman.setEnvironmentVariable(\"edge1LastUpdateTime\", data.response[i].lastUpdateTime);",
									"        postman.setEnvironmentVariable(\"edge1Name\", data.response[i].name);",
									"        postman.setEnvironmentVariable(\"edge1Namespace\", data.response[i].namespace);",
									"        postman.setEnvironmentVariable(\"edge1ProvisioningState\", data.response[i].provisioningState);",
									"        postman.setEnvironmentVariable(\"edge1ResourceVersion\", data.response[i].resourceVersion);",
									"        postman.setEnvironmentVariable(\"edge1Type\", data.response[i].type);",
									"        postman.setEnvironmentVariable(\"edge1NetworkDeviceId\", data.response[i].networkDeviceId);",
									"        postman.setEnvironmentVariable(\"edge1SiteId\", data.response[i].siteId);",
									"        strNetworkWideSettings = JSON.stringify(data.response[i].networkWideSettings);",
									"        postman.setEnvironmentVariable(\"edge1NetworkWideSettings\",strNetworkWideSettings );",
									"    }",
									"        if (data.response[i].name.includes (\"cp-border-1\")) {",
									"        postman.setEnvironmentVariable(\"cpborder1DevinfoId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"cpborder1InstanceId\", data.response[i].instanceId);",
									"        postman.setEnvironmentVariable(\"cpborder1AuthEntityId\", data.response[i].authEntityId);",
									"        postman.setEnvironmentVariable(\"cpborder1DisplayName\", data.response[i].displayName);",
									"        postman.setEnvironmentVariable(\"cpborder1AuthEntityClass\", data.response[i].authEntityClass);",
									"        postman.setEnvironmentVariable(\"cpborder1InstanceTenantId\", data.response[i].instanceTenantId);",
									"        postman.setEnvironmentVariable(\"cpborder1CreateTime\", data.response[i].createTime);",
									"        postman.setEnvironmentVariable(\"cpborder1LastUpdateTime\", data.response[i].lastUpdateTime);",
									"        postman.setEnvironmentVariable(\"cpborder1Name\", data.response[i].name);",
									"        postman.setEnvironmentVariable(\"cpborder1Namespace\", data.response[i].namespace);",
									"        postman.setEnvironmentVariable(\"cpborder1ProvisioningState\", data.response[i].provisioningState);",
									"        postman.setEnvironmentVariable(\"cpborder1ResourceVersion\", data.response[i].resourceVersion);",
									"        postman.setEnvironmentVariable(\"cpborder1Type\", data.response[i].type);",
									"        postman.setEnvironmentVariable(\"cpborder1NetworkDeviceId\", data.response[i].networkDeviceId);",
									"        postman.setEnvironmentVariable(\"cpborder1SiteId\", data.response[i].siteId);",
									"        strNetworkWideSettings = JSON.stringify(data.response[i].networkWideSettings);",
									"        postman.setEnvironmentVariable(\"cpborder1NetworkWideSettings\",strNetworkWideSettings );",
									"        postman.setEnvironmentVariable(\"cpborder1DevSettingsId\", data.response[i].deviceSettings.id);",
									"        postman.setEnvironmentVariable(\"cpborder1DevSettingsInstanceId\", data.response[i].deviceSettings.instanceId);",
									"        postman.setEnvironmentVariable(\"cpborder1DevSettingsInstanceVersion\", data.response[i].deviceSettings.instanceVersion);",
									"        postman.setEnvironmentVariable(\"extConnBorder1Int\", data.response[i].deviceSettings.extConnectivitySettings[0].id);",
									"        postman.setEnvironmentVariable(\"extConnBorder1IntInstanceId\", data.response[i].deviceSettings.extConnectivitySettings[0].instanceId);",
									"        postman.setEnvironmentVariable(\"extConnBorder1IntInstanceVersion\", data.response[i].deviceSettings.extConnectivitySettings[0].instanceVersion);",
									"        for (var x=0; x < data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff.length; x++) {",
									"            if (data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].virtualNetwork.idRef == vnInfraId) {",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3InfraId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].id);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3InfraInstanceId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].instanceId);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3InfraInstanceVersion\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].instanceVersion);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3InfraLocalIp\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].localIpAddress);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3InfraRemoteIp\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].remoteIpAddress);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3InfraVlanId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].vlanId);",
									"            }",
									"            if (data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].virtualNetwork.idRef == vnCampusId) {",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3CampusId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].id);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3CampusInstanceId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].instanceId);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3CampusInstanceVersion\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].instanceVersion);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3CampusLocalIp\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].localIpAddress);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3CampusRemoteIp\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].remoteIpAddress);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3CampusVlanId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].vlanId);",
									"                }",
									"            if (data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].virtualNetwork.idRef == vnGuestId) {",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3GuestId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].id);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3GuestInstanceId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].instanceId);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3GuestInstanceVersion\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].instanceVersion);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3GuestLocalIp\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].localIpAddress);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3GuestRemoteIp\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].remoteIpAddress);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3GuestVlanId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].vlanId);",
									"                }",
									"            }",
									"        }",
									"        if (data.response[i].name.includes (\"cp-border-2\")) {",
									"        postman.setEnvironmentVariable(\"cpborder2DevinfoId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"cpborder2InstanceId\", data.response[i].instanceId);",
									"        postman.setEnvironmentVariable(\"cpborder2AuthEntityId\", data.response[i].authEntityId);",
									"        postman.setEnvironmentVariable(\"cpborder2DisplayName\", data.response[i].displayName);",
									"        postman.setEnvironmentVariable(\"cpborder2AuthEntityClass\", data.response[i].authEntityClass);",
									"        postman.setEnvironmentVariable(\"cpborder2InstanceTenantId\", data.response[i].instanceTenantId);",
									"        postman.setEnvironmentVariable(\"cpborder2CreateTime\", data.response[i].createTime);",
									"        postman.setEnvironmentVariable(\"cpborder2LastUpdateTime\", data.response[i].lastUpdateTime);",
									"        postman.setEnvironmentVariable(\"cpborder2Name\", data.response[i].name);",
									"        postman.setEnvironmentVariable(\"cpborder2Namespace\", data.response[i].namespace);",
									"        postman.setEnvironmentVariable(\"cpborder2ProvisioningState\", data.response[i].provisioningState);",
									"        postman.setEnvironmentVariable(\"cpborder2ResourceVersion\", data.response[i].resourceVersion);",
									"        postman.setEnvironmentVariable(\"cpborder2Type\", data.response[i].type);",
									"        postman.setEnvironmentVariable(\"cpborder2NetworkDeviceId\", data.response[i].networkDeviceId);",
									"        postman.setEnvironmentVariable(\"cpborder2SiteId\", data.response[i].siteId);",
									"        strNetworkWideSettings = JSON.stringify(data.response[i].networkWideSettings);",
									"        postman.setEnvironmentVariable(\"cpborder2NetworkWideSettings\",strNetworkWideSettings );",
									"        postman.setEnvironmentVariable(\"cpborder2DevSettingsId\", data.response[i].deviceSettings.id);",
									"        postman.setEnvironmentVariable(\"cpborder2DevSettingsInstanceId\", data.response[i].deviceSettings.instanceId);",
									"        postman.setEnvironmentVariable(\"cpborder2DevSettingsInstanceVersion\", data.response[i].deviceSettings.instanceVersion);",
									"        postman.setEnvironmentVariable(\"extConnBorder2Int\", data.response[i].deviceSettings.extConnectivitySettings[0].id);",
									"        postman.setEnvironmentVariable(\"extConnBorder2IntInstanceId\", data.response[i].deviceSettings.extConnectivitySettings[0].instanceId);",
									"        postman.setEnvironmentVariable(\"extConnBorder2IntInstanceVersion\", data.response[i].deviceSettings.extConnectivitySettings[0].instanceVersion);",
									"        for (var x=0; x < data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff.length; x++) {",
									"\t\t if (data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].virtualNetwork.idRef == vnInfraId) {",
									"\t\t\t\t postman.setEnvironmentVariable(\"extConnBorder2L3InfraId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].id);",
									"\t\t\t\t postman.setEnvironmentVariable(\"extConnBorder2L3InfraInstanceId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].instanceId);",
									"\t\t\t\t postman.setEnvironmentVariable(\"extConnBorder2L3InfraInstanceVersion\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].instanceVersion);",
									"\t\t\t\t postman.setEnvironmentVariable(\"extConnBorder2L3InfraLocalIp\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].localIpAddress);",
									"\t\t\t\t postman.setEnvironmentVariable(\"extConnBorder2L3InfraRemoteIp\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].remoteIpAddress);",
									"\t\t\t\t postman.setEnvironmentVariable(\"extConnBorder2L3InfraVlanId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].vlanId);",
									"\t\t    }",
									"            if (data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].virtualNetwork.idRef == vnCampusId) {",
									"                postman.setEnvironmentVariable(\"extConnBorder2L3CampusId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].id);",
									"                postman.setEnvironmentVariable(\"extConnBorder2L3CampusInstanceId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].instanceId);",
									"                postman.setEnvironmentVariable(\"extConnBorder2L3CampusInstanceVersion\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].instanceVersion);",
									"                postman.setEnvironmentVariable(\"extConnBorder2L3CampusLocalIp\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].localIpAddress);",
									"                postman.setEnvironmentVariable(\"extConnBorder2L3CampusRemoteIp\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].remoteIpAddress);",
									"                postman.setEnvironmentVariable(\"extConnBorder2L3CampusVlanId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].vlanId);",
									"                }",
									"            if (data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].virtualNetwork.idRef == vnGuestId) {",
									"                postman.setEnvironmentVariable(\"extConnBorder2L3GuestId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].id);",
									"                postman.setEnvironmentVariable(\"extConnBorder2L3GuestInstanceId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].instanceId);",
									"                postman.setEnvironmentVariable(\"extConnBorder2L3GuestInstanceVersion\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].instanceVersion);",
									"                postman.setEnvironmentVariable(\"extConnBorder2L3GuestLocalIp\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].localIpAddress);",
									"                postman.setEnvironmentVariable(\"extConnBorder2L3GuestRemoteIp\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].remoteIpAddress);",
									"                postman.setEnvironmentVariable(\"extConnBorder2L3GuestVlanId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].vlanId);",
									"                }",
									"\t\t }",
									"    }",
									"}",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/data/customer-facing-service/DeviceInfo",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"data",
								"customer-facing-service",
								"DeviceInfo"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Border2 + Campus + 1/0/2 to Fabric",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d247b1d4-7550-43b5-b4cf-c1e8e7f92111",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"taskId\", data.response.taskId);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n\t{\n\t\t\"id\":\"{{fabSiteId}}\",\n\t\t\"type\":\"ConnectivityDomain\",\n\t\t\"name\":\"Global/San_Jose_US_West\",\n\t\t\"domainType\":\"FABRIC_SITE\",\n\t\t\"isDefault\":false,\n\t\t\"virtualNetwork\":{{fabVirtualNetworks}},\n\t\t\"deviceInfo\":\n\t\t[\n\t\t\t{\n\t\t\t\t\"cfsChangeInfo\":[],\n\t\t\t\t\"configs\":[],\t\n\t\t\t\t\"createTime\":{{cpborder2CreateTime}},\n\t\t\t\t\"deployed\":false,\"deviceInterfaceInfo\":[],\n\t\t\t\t\"displayName\":\"{{cpborder2DisplayName}}\",\n\t\t\t\t\"id\":\"{{cpborder2DevinfoId}}\",\n\t\t\t\t\"instanceId\":{{cpborder2InstanceId}},\n\t\t\t\t\"instanceVersion\":{{cpborder2ResourceVersion}},\n\t\t\t\t\"isStale\":false,\n\t\t\t\t\"lastUpdateTime\":{{cpborder2LastUpdateTime}},\n\t\t\t\t\"name\":\"{{devCpBorder2FullName}}\",\n\t\t\t\t\"namespace\":\"{{cpborder2Namespace}}\",\n\t\t\t\t\"networkDeviceId\":\"{{cpborder2NetworkDeviceId}}\",\n\t \t\t\t\"networkWideSettings\":{{cpborder2NetworkWideSettings}},\n \t\t\t\t\"provisioningState\":\"DEFINED\",\n\t\t\t\t\"roles\":[\"BORDERNODE\",\"MAPSERVER\"],\n\t\t\t\t\"siteId\":\"{{dsgnSjc13MdfId}}\",\n\t\t\t\t\"transitNetworks\":[{\"idRef\":\"{{fabTransitId}}\"}],\n\t\t\t\t\"type\":\"DeviceInfo\",\n\t\t\t\t\"wlan\":[],\n\t\t\t\t\"otherDevice\":[],\n\t\t\t\t\"deviceSettings\":\n\t\t\t\t{\n\t\t\t\t\t\"id\":\"{{cpborder2DevSettingsId}}\",\n\t\t\t\t\t\"instanceId\":{{cpborder2DevSettingsInstanceId}},\n\t\t\t\t\t\"displayName\":\"0\",\n\t\t\t\t\t\"instanceVersion\":{{cpborder2DevSettingsInstanceVersion}},\n\t\t\t\t\t\"connectedTo\":[\"INTERNET\"],\n\t\t\t\t\t\"cpu\":0,\n\t\t\t\t\t\"dhcpEnabled\":false,\n\t\t\t\t\t\"externalConnectivityIpPool\":\"{{dsgnTransitPoolId}}\",\n\t\t\t\t\t\"externalDomainRoutingProtocol\":\"BGP\",\n\t\t\t\t\t\"internalDomainProtocolNumber\":\"65534\",\n\t\t\t\t\t\"memory\":0,\n\t\t\t\t\t\"nodeType\":[\"EXTERNAL\"],\n\t\t\t\t\t\"storage\":0,\n\t\t\t\t\t\"extConnectivitySettings\":\n\t\t\t\t\t[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"externalDomainProtocolNumber\":\"65535\",\n\t\t\t\t\t\t\t\"interfaceUuid\":\"GigabitEthernet1/0/2\",\n\t\t\t\t\t\t\t\"policyPropagationEnabled\":false,\n\t\t\n\t\t\t\t\t\t\t\"l2Handoff\":[],\n\t\t\t\t\t\t\t\"l3Handoff\":\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t{\"virtualNetwork\":{\"idRef\":\"{{vnInfraId}}\"}},\n\t\t\t\t\t\t\t\t{\"virtualNetwork\":{\"idRef\":\"{{vnCampusId}}\"}}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\t{\n\t\t\t\t\"cfsChangeInfo\":[],\n\t\t\t\t\"configs\":[],\n\t\t\t\t\"createTime\":{{edge1CreateTime}},\n\t\t\t\t\"deployed\":false,\n\t\t\t\t\"deviceInterfaceInfo\":[],\n\t\t\t\t\"displayName\":\"{{edge1DisplayName}}\",\n\t\t\t\t\"id\":\"{{edge1DevinfoId}}\",\n\t\t\t\t\"instanceId\":{{edge1InstanceId}},\n\t\t\t\t\"instanceVersion\":{{edge1ResourceVersion}},\n\t\t\t\t\"isStale\":false,\n\t\t\t\t\"lastUpdateTime\":{{edge1LastUpdateTime}},\n\t\t\t\t\"name\":\"{{edge1Name}}\",\n\t\t\t\t\"namespace\":\"{{edge1Namespace}}\",\n\t\t\t\t\"networkDeviceId\":\"{{edge1NetworkDeviceId}}\",\n\t\t\t\t\"networkWideSettings\":{{edge1NetworkWideSettings}},\n\t\t\t\t\"provisioningState\":\"DEFINED\",\n\t\t\t\t\"roles\":[\"EDGENODE\"],\n\t\t\t\t\"siteId\":\"{{dsgnSjc13FirstFloorId}}\",\n\t\t\t\t\"transitNetworks\":[],\n\t\t\t\t\"type\":\"DeviceInfo\",\n\t\t\t\t\"wlan\":[],\n\t\t\t\t\"otherDevice\":[]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"cfsChangeInfo\":[],\n\t\t\t\t\"configs\":[],\n\t\t\t\t\"createTime\":{{cpborder1CreateTime}},\n\t\t\t\t\"deployed\":false,\n\t\t\t\t\"deviceInterfaceInfo\":[],\n\t\t\t\t\"displayName\":\"{{cpborder1DisplayName}}\",\n\t\t\t\t\"id\":\"{{cpborder1DevinfoId}}\",\n\t\t\t\t\"instanceId\":{{cpborder1InstanceId}},\n\t\t\t\t\"instanceVersion\":{{cpborder1ResourceVersion}},\n\t\t\t\t\"isStale\":false,\n\t\t\t\t\"lastUpdateTime\":{{cpborder1LastUpdateTime}},\n\t\t\t\t\"name\":\"{{cpborder1Name}}\",\n\t\t\t\t\"namespace\":\"{{cpborder1Namespace}}\",\n\t\t\t\t\"networkDeviceId\":\"{{cpborder1NetworkDeviceId}}\",\n\t\t\t\t\"networkWideSettings\":{{cpborder1NetworkWideSettings}},\n\t\t\t\t\"provisioningState\":\"DEFINED\",\n\t\t\t\t\"roles\":[\"BORDERNODE\",\"MAPSERVER\"],\n\t\t\t\t\"siteId\":\"{{dsgnSjc13MdfId}}\",\n\t\t\t\t\"transitNetworks\":[{\"idRef\":\"{{fabTransitId}}\"}],\n\t\t\t\t\"type\":\"DeviceInfo\",\n\t\t\t\t\"wlan\":[],\n\t\t\t\t\"otherDevice\":[],\n\t\t\t\t\"deviceSettings\":\n\t\t\t\t{\n\t\t\t\t\t\"id\":\"{{cpborder1DevSettingsId}}\",\n\t\t\t\t\t\"instanceId\":{{cpborder1DevSettingsInstanceId}},\n\t\t\t\t\t\"displayName\":\"0\",\n\t\t\t\t\t\"instanceVersion\":{{cpborder1DevSettingsInstanceVersion}},\n\t\t\t\t\t\"connectedTo\":[\"INTERNET\"],\n\t\t\t\t\t\"cpu\":0,\n\t\t\t\t\t\"dhcpEnabled\":false,\n\t\t\t\t\t\"externalConnectivityIpPool\":\"{{dsgnTransitPoolId}}\",\n\t\t\t\t\t\"externalDomainRoutingProtocol\":\"BGP\",\n\t\t\t\t\t\"internalDomainProtocolNumber\":\"65534\",\n\t\t\t\t\t\"memory\":0,\n\t\t\t\t\t\"nodeType\":[\"EXTERNAL\"],\n\t\t\t\t\t\"storage\":0,\n\t\t\t\t\t\"extConnectivitySettings\":\n\t\t\t\t\t[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\":\"{{extConnBorder1Int}}\",\n\t\t\t\t\t\t\t\"instanceId\":{{extConnBorder1IntInstanceId}},\n\t\t\t\t\t\t\t\"displayName\":\"0\",\n\t\t\t\t\t\t\t\"instanceVersion\":{{extConnBorder1IntInstanceVersion}},\n\t\t\t\t\t\t\t\"externalDomainProtocolNumber\":\"65535\",\n\t\t\t\t\t\t\t\"interfaceUuid\":\"GigabitEthernet1/0/2\",\n\t\t\t\t\t\t\t\"policyPropagationEnabled\":false,\n\t\t\t\t\t\t\t\"policySgtTag\":0,\n\t\t\t\t\t\t\t\"l2Handoff\":[],\n\t\t\t\t\t\t\t\"l3Handoff\":\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"id\":\"{{extConnBorder1L3InfraId}}\",\n\t\t\t\t\t\t\t\t\t\"instanceId\":{{extConnBorder1L3InfraInstanceId}},\n\t\t\t\t\t\t\t\t\t\"displayName\":\"0\",\n\t\t\t\t\t\t\t\t\t\"instanceVersion\":{{extConnBorder1L3InfraInstanceVersion}},\n\t\t\t\t\t\t\t\t\t\"localIpAddress\":\"{{extConnBorder1L3InfraLocalIp}}\",\n\t\t\t\t\t\t\t\t\t\"remoteIpAddress\":\"{{extConnBorder1L3InfraRemoteIp}}\",\n\t\t\t\t\t\t\t\t\t\"vlanId\":{{extConnBorder1L3InfraVlanId}},\n\t\t\t\t\t\t\t\t\t\"virtualNetwork\":\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"idRef\":\"{{vnInfraId}}\"\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"id\":\"{{extConnBorder1L3CampusId}}\",\n\t\t\t\t\t\t\t\t\t\"instanceId\":{{extConnBorder1L3CampusInstanceId}},\n\t\t\t\t\t\t\t\t\t\"displayName\":\"0\",\n\t\t\t\t\t\t\t\t\t\"instanceVersion\":{{extConnBorder1L3CampusInstanceVersion}},\n\t\t\t\t\t\t\t\t\t\"localIpAddress\":\"{{extConnBorder1L3CampusLocalIp}}\",\n\t\t\t\t\t\t\t\t\t\"remoteIpAddress\":\"{{extConnBorder1L3CampusRemoteIp}}\",\n\t\t\t\t\t\t\t\t\t\"vlanId\":{{extConnBorder1L3CampusVlanId}},\n\t\t\t\t\t\t\t\t\t\"virtualNetwork\":\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"idRef\":\"{{vnCampusId}}\"\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t\"multicastInfo\":[],\n\t\t\"enableMonitoring\":true,\n\t\t\"resourceVersion\":{{fabSiteResourceVersion}},\n\t\t\"siteId\":\"{{dsgnAreaTopId}}\",\n\t\t\"siteSpecificDomain\":[],\n\t\t\"wirelessMulticastFeature\":false,\n\t\t\"isNativeMulticastEnabled\":false,\n\t\t\"authenticationProfileId\":\"{{authClosedId}}\"\n\t\t\t\t\t\t\t\t\n\t}\n]\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/data/customer-facing-service/ConnectivityDomain",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"data",
								"customer-facing-service",
								"ConnectivityDomain"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Status - Pause 1 Min",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"var latestRequest = pm.variables.get(\"latestRequest\");",
									"var service = data.response.serviceType;",
									"var isError = data.response.isError.toString();",
									"",
									"",
									"if (isError == \"false\") {",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");",
									"}",
									"else {",
									"    console.log(\"........ \" + latestRequest + \" generated an ERROR !!!!!\");",
									"    console.log(\"........ Service type is \" + service);",
									"    console.log(\"........ Failure reason is \" + data.response.failureReason);",
									"    ",
									"}",
									"",
									"",
									"",
									"console.log(\"Sleeping for one min.\");",
									"setTimeout(function(){}, 60000);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/task/{{taskId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"task",
								"{{taskId}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "6.1 Deploy Campus - Border 1 Switch Config",
			"item": [
				{
					"name": "Create Template",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"taskId\", data.response.taskId);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Campus_Border1\",\n    \"description\": \"Configuration for Border 1 Campus\",\n    \"tags\": [],\n    \"deviceTypes\": [\n        {\n            \"productFamily\": \"Switches and Hubs\"\n        }\n    ],\n    \"softwareType\": \"IOS-XE\",\n    \"softwareVariant\": \"XE\",\n    \"templateContent\": \"int vlan 3003\\nbfd interval 300 min_rx 300 multiplier 3\\nno bfd echo\\nint vlan 41\\nvrf forward Campus\\nip address 100.126.0.133 255.255.255.252\\nbfd interval 300 min_rx 300 multiplier 3\\nno bfd echo\\ndescription L3 Border 2 Border iBGP link in Campus VN\\nrouter bgp 65534\\naddress-family ipv4 vrf Campus\\nneighbor 100.126.0.134 remote-as 65534\\nneighbor 100.126.0.134 fall-over bfd\\nneighbor 100.126.0.134 activate\\nneighbor 100.126.1.10 fall-over bfd\\n\",\n    \n    \"rollbackTemplateContent\": \"\",\n    \"templateParams\": [],\n    \"composite\": false,\n    \"projectName\": \"POV_Automation\",\n    \"projectId\": \"{{prjPovAutomation}}\"\n}"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/template-programmer/project/{{prjPovAutomation}}/template",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"template-programmer",
								"project",
								"{{prjPovAutomation}}",
								"template"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"var latestRequest = pm.variables.get(\"latestRequest\");\r",
									"var service = data.response.serviceType;\r",
									"var isError = data.response.isError.toString();\r",
									"\r",
									"\r",
									"if (isError == \"false\") {\r",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");\r",
									"}\r",
									"else {\r",
									"    console.log(\"........ \" + latestRequest + \" generated an ERROR !!!!!\");\r",
									"    console.log(\"........ Service type is \" + service);\r",
									"    console.log(\"........ Failure reason is \" + data.response.failureReason);\r",
									"    \r",
									"}\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/task/{{taskId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"task",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Template Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var data = JSON.parse(responseBody);",
									"",
									"for (var i=0; i < data.length; i++) {",
									"    if (data[i].name == \"POV_Automation\") {",
									"        for (var n=0; n < data[i].templates.length; n++) {",
									"            if(data[i].templates[n].name == \"Campus_Border1\") {",
									"                postman.setEnvironmentVariable(\"templateCampusBorder1Id\",data[i].templates[n].id);",
									"            }",
									"        }",
									"    }",
									"}",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/template-programmer/project",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"template-programmer",
								"project"
							]
						}
					},
					"response": []
				},
				{
					"name": "Commit Template",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"taskId\", data.response.taskId);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"comments\": \"First Commit from API\",\n    \"templateId\": \"{{templateCampusBorder1Id}}\"\n}"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/template-programmer/template/version",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"template-programmer",
								"template",
								"version"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"var latestRequest = pm.variables.get(\"latestRequest\");\r",
									"var service = data.response.serviceType;\r",
									"var isError = data.response.isError.toString();\r",
									"\r",
									"\r",
									"if (isError == \"false\") {\r",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");\r",
									"}\r",
									"else {\r",
									"    console.log(\"........ \" + latestRequest + \" generated an ERROR !!!!!\");\r",
									"    console.log(\"........ Service type is \" + service);\r",
									"    console.log(\"........ Failure reason is \" + data.response.failureReason);\r",
									"    \r",
									"}\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/task/{{taskId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"task",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Template Latest Version",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var data = JSON.parse(responseBody);",
									"var versionsInfo = data[0].versionsInfo;",
									"var latestVersion = 0;",
									"",
									"for (var i=0; i < versionsInfo.length; i++) {",
									"    if (versionsInfo[i].versionsTime !== 0) {",
									"        if (versionsInfo[i].version > latestVersion) {",
									"            latestVersion = versionsInfo[i].version;",
									"            postman.setEnvironmentVariable(\"templateCampusBorder1LatestVersion\", versionsInfo[i].version);",
									"            postman.setEnvironmentVariable(\"templateCampusBorder1LatestVersionId\", versionsInfo[i].id);",
									"        }",
									"    }",
									"}",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/template-programmer/template/version/{{templateCampusBorder1Id}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"template-programmer",
								"template",
								"version",
								"{{templateCampusBorder1Id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Deploy Template",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"forcePushTemplate\": true,\n\n    \"targetInfo\": [\n        {\n            \"id\": \"100.124.0.1\",\n            \"type\": \"MANAGED_DEVICE_IP\",\n            \"params\": {}\n        }\n    ],\n    \"templateId\": \"{{templateCampusBorder1LatestVersionId}}\"\n}"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/template-programmer/template/deploy",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"template-programmer",
								"template",
								"deploy"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "6.2 Deploy Campus - Border 2 Switch Config",
			"item": [
				{
					"name": "Create Template",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"taskId\", data.response.taskId);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Campus_Border2\",\n    \"description\": \"Configuration for Border 2 Campus\",\n    \"tags\": [],\n    \"deviceTypes\": [\n        {\n            \"productFamily\": \"Switches and Hubs\"\n        }\n    ],\n    \"softwareType\": \"IOS-XE\",\n    \"softwareVariant\": \"XE\",\n    \"templateContent\": \"int vlan 3004\\nbfd interval 300 min_rx 300 multiplier 3\\nno bfd echo\\nint vlan 41\\nvrf forward Campus\\nip address 100.126.0.134 255.255.255.252\\nbfd interval 300 min_rx 300 multiplier 3\\nno bfd echo\\ndescription L3 Border 2 Border iBGP link in Campus VN\\nrouter bgp 65534\\naddress-family ipv4 vrf Campus\\nneighbor 100.126.0.133 remote-as 65534\\nneighbor 100.126.0.133 fall-over bfd\\nneighbor 100.126.0.133 activate\\nneighbor 100.126.1.14 fall-over bfd\\n\",\n    \n    \"rollbackTemplateContent\": \"\",\n    \"templateParams\": [],\n    \"composite\": false,\n    \"projectName\": \"POV_Automation\",\n    \"projectId\": \"{{prjPovAutomation}}\"\n}"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/template-programmer/project/{{prjPovAutomation}}/template",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"template-programmer",
								"project",
								"{{prjPovAutomation}}",
								"template"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"var latestRequest = pm.variables.get(\"latestRequest\");\r",
									"var service = data.response.serviceType;\r",
									"var isError = data.response.isError.toString();\r",
									"\r",
									"\r",
									"if (isError == \"false\") {\r",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");\r",
									"}\r",
									"else {\r",
									"    console.log(\"........ \" + latestRequest + \" generated an ERROR !!!!!\");\r",
									"    console.log(\"........ Service type is \" + service);\r",
									"    console.log(\"........ Failure reason is \" + data.response.failureReason);\r",
									"    \r",
									"}\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/task/{{taskId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"task",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Template Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var data = JSON.parse(responseBody);",
									"",
									"for (var i=0; i < data.length; i++) {",
									"    if (data[i].name == \"POV_Automation\") {",
									"        for (var n=0; n < data[i].templates.length; n++) {",
									"            if(data[i].templates[n].name == \"Campus_Border2\") {",
									"                postman.setEnvironmentVariable(\"templateCampusBorder2Id\",data[i].templates[n].id);",
									"            }",
									"        }",
									"    }",
									"}",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/template-programmer/project",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"template-programmer",
								"project"
							]
						}
					},
					"response": []
				},
				{
					"name": "Commit Template",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"taskId\", data.response.taskId);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"comments\": \"First Commit from API\",\n    \"templateId\": \"{{templateCampusBorder2Id}}\"\n}"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/template-programmer/template/version",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"template-programmer",
								"template",
								"version"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"var latestRequest = pm.variables.get(\"latestRequest\");\r",
									"var service = data.response.serviceType;\r",
									"var isError = data.response.isError.toString();\r",
									"\r",
									"\r",
									"if (isError == \"false\") {\r",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");\r",
									"}\r",
									"else {\r",
									"    console.log(\"........ \" + latestRequest + \" generated an ERROR !!!!!\");\r",
									"    console.log(\"........ Service type is \" + service);\r",
									"    console.log(\"........ Failure reason is \" + data.response.failureReason);\r",
									"    \r",
									"}\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/task/{{taskId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"task",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Template Latest Version",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var data = JSON.parse(responseBody);",
									"var versionsInfo = data[0].versionsInfo;",
									"var latestVersion = 0;",
									"",
									"for (var i=0; i < versionsInfo.length; i++) {",
									"    if (versionsInfo[i].versionsTime !== 0) {",
									"        if (versionsInfo[i].version > latestVersion) {",
									"            latestVersion = versionsInfo[i].version;",
									"            postman.setEnvironmentVariable(\"templateCampusBorder2LatestVersion\", versionsInfo[i].version);",
									"            postman.setEnvironmentVariable(\"templateCampusBorder2LatestVersionId\", versionsInfo[i].id);",
									"        }",
									"    }",
									"}",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/template-programmer/template/version/{{templateCampusBorder2Id}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"template-programmer",
								"template",
								"version",
								"{{templateCampusBorder2Id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Deploy Template",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"forcePushTemplate\": true,\n\n    \"targetInfo\": [\n        {\n            \"id\": \"100.124.0.2\",\n            \"type\": \"MANAGED_DEVICE_IP\",\n            \"params\": {}\n        }\n    ],\n    \"templateId\": \"{{templateCampusBorder2LatestVersionId}}\"\n}"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/template-programmer/template/deploy",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"template-programmer",
								"template",
								"deploy"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "7. Deploy Campus Microsegmentation Policy",
			"item": [
				{
					"name": "Get Scalable Group Parent Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var data = JSON.parse(responseBody);",
									"",
									"postman.setEnvironmentVariable(\"sgParentId\", data.response[0].id);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/data/customer-facing-service/scalablegroup/application?scalableGroupExternalHandle=general-misc&scalableGroupType=APPLICATION_GROUP",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"data",
								"customer-facing-service",
								"scalablegroup",
								"application"
							],
							"query": [
								{
									"key": "scalableGroupExternalHandle",
									"value": "general-misc"
								},
								{
									"key": "scalableGroupType",
									"value": "APPLICATION_GROUP"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Scalable Group Application Categories",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var data = JSON.parse(responseBody);",
									"",
									"for (var i=0; i < data.response.length; i++) {",
									"     if (data.response[i].displayName.includes(\"[other]\")) {",
									"        postman.setEnvironmentVariable(\"sgAppCategoryOther\", data.response[i].id);",
									"     }",
									"}",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/data/customer-facing-service/networkapplicationcategory?offset=1&limit=500",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"data",
								"customer-facing-service",
								"networkapplicationcategory"
							],
							"query": [
								{
									"key": "offset",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "500"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Add my_ftp Customer Protocol",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"taskId\", data.response.taskId);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"name\": \"my_ftp\",\n        \"scalableGroupType\": \"APPLICATION\",\n        \"networkApplications\": [\n            {\n                \"engineId\": 6,\n                \"rank\": 65535,\n                \"trafficClass\": \"BULK_DATA\",\n                \"categoryId\": \"{{sgAppCategoryOther}}\",\n                \"appProtocol\": \"TCP\",\n                \"ignoreConflict\": true\n            }\n        ],\n        \"networkIdentity\": [\n            {\n                \"protocol\": \"TCP\",\n                \"ports\": \"20,21\",\n                \"lowerPort\": \"\",\n                \"upperPort\": \"\",\n                \"ipv4Subnet\": []\n            }\n        ],\n        \"indicativeNetworkIdentity\": [\n            {\n                \"protocol\": \"TCP\",\n                \"ports\": \"20,21\",\n                \"lowerPort\": \"\",\n                \"upperPort\": \"\",\n                \"ipv4Subnet\": []\n            }\n        ],\n        \"parentScalableGroup\": {\n            \"idRef\": \"{{sgParentId}}\"\n        }\n    }\n]"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/data/customer-facing-service/scalablegroup/application/",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"data",
								"customer-facing-service",
								"scalablegroup",
								"application",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Status - Pause 1 Min",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"var latestRequest = pm.variables.get(\"latestRequest\");",
									"var service = data.response.serviceType;",
									"var isError = data.response.isError.toString();",
									"",
									"",
									"if (isError == \"false\") {",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");",
									"}",
									"else {",
									"    console.log(\"........ \" + latestRequest + \" generated an ERROR !!!!!\");",
									"    console.log(\"........ Service type is \" + service);",
									"    console.log(\"........ Failure reason is \" + data.response.failureReason);",
									"    ",
									"}",
									"",
									"",
									"",
									"console.log(\"Sleeping for one min.\");",
									"setTimeout(function(){}, 60000);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/task/{{taskId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"task",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Scalable Group Application IDs",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 5000);",
									"",
									"var data = JSON.parse(responseBody);",
									"",
									"for (var i=0; i < data.response[0].accessPolicySgSummary.length; i++) {",
									"     if (data.response[0].accessPolicySgSummary[i].application_name == \"http\") {",
									"        postman.setEnvironmentVariable(\"appHttpId\", data.response[0].accessPolicySgSummary[i].id);",
									"     }",
									"    if (data.response[0].accessPolicySgSummary[i].application_name == \"my_ftp\") {",
									"        postman.setEnvironmentVariable(\"appMyFtpId\", data.response[0].accessPolicySgSummary[i].id);",
									"     }",
									"}",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/data/customer-facing-service/summary/contract/access?applicationSg=true",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"data",
								"customer-facing-service",
								"summary",
								"contract",
								"access"
							],
							"query": [
								{
									"key": "applicationSg",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Add HTTP/FTP Custom Contract",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"taskId\", data.response.taskId);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"type\": \"contract\",\n        \"name\": \"web_my_ftp_only\",\n        \"description\": \"Custom Contract to Permit HTTP and FTP only\",\n        \"clause\": [\n            {\n                \"access\": \"DENY\"\n            }\n        ],\n        \"contractClassifier\": [\n            {\n                \"access\": \"PERMIT\",\n                \"scalableGroup\": {\n                    \"idRef\": \"{{appHttpId}}\"\n                }\n            },\n            {\n                \"access\": \"PERMIT\",\n                \"scalableGroup\": {\n                    \"idRef\": \"{{appMyFtpId}}\"\n                }\n            }\n        ]\n    }\n]"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/data/customer-facing-service/contract/access/",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"data",
								"customer-facing-service",
								"contract",
								"access",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"var latestRequest = pm.variables.get(\"latestRequest\");\r",
									"var service = data.response.serviceType;\r",
									"var isError = data.response.isError.toString();\r",
									"\r",
									"\r",
									"if (isError == \"false\") {\r",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");\r",
									"}\r",
									"else {\r",
									"    console.log(\"........ \" + latestRequest + \" generated an ERROR !!!!!\");\r",
									"    console.log(\"........ Service type is \" + service);\r",
									"    console.log(\"........ Failure reason is \" + data.response.failureReason);\r",
									"    \r",
									"}\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/task/{{taskId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"task",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Custom Contract Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 5000);",
									"",
									"var data = JSON.parse(responseBody);",
									"",
									"for (var i=0; i < data.response.length; i++) {",
									"     if (data.response[i].name == \"web_my_ftp_only\") {",
									"        postman.setEnvironmentVariable(\"contractWebFtpId\", data.response[i].id);",
									"     }",
									"",
									"}",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/data/customer-facing-service/contract/access/",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"data",
								"customer-facing-service",
								"contract",
								"access",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Apply HTTP/FTP Policy from Acct to HR",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"taskId\", data.response.taskId);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"name\": \"Restrict_Acct_and_HR\",\n        \"description\": \"Block Traffic Between HR and ACCT but HTTP and FTP\",\n        \"priority\": 65535,\n        \"contract\": {\n            \"idRef\": \"{{contractWebFtpId}}\"\n        },\n        \"producer\": {\n            \"scalableGroup\": [\n                {\n                    \"idRef\": \"{{sgtHrId}}\"\n                }\n            ]\n        },\n        \"consumer\": {\n            \"scalableGroup\": [\n                {\n                    \"idRef\": \"{{sgtAcctId}}\"\n                }\n            ]\n        },\n        \"isEnabled\": true,\n        \"policyScope\": \"2827e5bf-d291-3d54-aeda-3e21b29a9d5d\"\n    }\n]"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/data/customer-facing-service/policy/access/",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"data",
								"customer-facing-service",
								"policy",
								"access",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Status - Pause 1 Min",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"var latestRequest = pm.variables.get(\"latestRequest\");",
									"var service = data.response.serviceType;",
									"var isError = data.response.isError.toString();",
									"",
									"",
									"if (isError == \"false\") {",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");",
									"}",
									"else {",
									"    console.log(\"........ \" + latestRequest + \" generated an ERROR !!!!!\");",
									"    console.log(\"........ Service type is \" + service);",
									"    console.log(\"........ Failure reason is \" + data.response.failureReason);",
									"    ",
									"}",
									"",
									"",
									"",
									"console.log(\"Sleeping for one min.\");",
									"setTimeout(function(){}, 60000);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/task/{{taskId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"task",
								"{{taskId}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "8. Build Guest VN",
			"item": [
				{
					"name": "Get Guests SGT ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "186a9a46-305e-4a21-abe6-6b20907ea0ab",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var data = JSON.parse(responseBody);",
									"",
									"for (var i=0; i < data.response.length; i++) {",
									"    if (data.response[i].name == \"Guests\") {",
									"        postman.setEnvironmentVariable(\"sgtGuestId\", data.response[i].id);",
									"    }",
									"}",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "x-auth-token",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/data/customer-facing-service/scalablegroup/",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"data",
								"customer-facing-service",
								"scalablegroup",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Guest VN with SGTs",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"taskId\", data.response.taskId);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n\t{\n\t\t\"name\":\"Guest\",\n\t\t\"virtualNetworkContextType\":\"GUEST\",\n\t\t\"scalableGroup\":\n\t\t[\n\t\t\t{\"idRef\":\"{{sgtGuestId}}\"}\n\t\t]\n\t\t\n\t}\n]"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/data/customer-facing-service/virtualnetworkcontext/",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"data",
								"customer-facing-service",
								"virtualnetworkcontext",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"var latestRequest = pm.variables.get(\"latestRequest\");\r",
									"var service = data.response.serviceType;\r",
									"var isError = data.response.isError.toString();\r",
									"\r",
									"\r",
									"if (isError == \"false\") {\r",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");\r",
									"}\r",
									"else {\r",
									"    console.log(\"........ \" + latestRequest + \" generated an ERROR !!!!!\");\r",
									"    console.log(\"........ Service type is \" + service);\r",
									"    console.log(\"........ Failure reason is \" + data.response.failureReason);\r",
									"    \r",
									"}\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/task/{{taskId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"task",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Guest Pool",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"taskId\", data.response.taskId);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"context\":\n\t[{\n\t\t\"contextKey\":\"siteId\",\n\t\t\"contextValue\":\"{{dsgnAreaTopId}}\"\n\t\t\n\t}],\n\t\t\"shared\":true,\n\t\t\"ipPoolOwner\":\"DNAC\",\n\t\t\"parentUuid\":\"{{dsgnGlobalPool1Id}}\",\n\t\t\"ipPoolName\":\"SJC-Guest-Users\",\n\t\t\"overlapping\":false,\n\t\t\"gateways\":[\"100.99.0.1\"],\n\t\t\"dnsServerIps\":[\"208.67.220.220\",\"208.67.222.222\"],\n\t\t\"dhcpServerIps\":[\"100.127.0.1\",\"100.64.0.100\"],\n\t\t\"ipPoolCidr\":\"100.99.0.0/16\"\n\t\n}"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/ippool/subpool",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"ippool",
								"subpool"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"var latestRequest = pm.variables.get(\"latestRequest\");\r",
									"var service = data.response.serviceType;\r",
									"var isError = data.response.isError.toString();\r",
									"\r",
									"\r",
									"if (isError == \"false\") {\r",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");\r",
									"}\r",
									"else {\r",
									"    console.log(\"........ \" + latestRequest + \" generated an ERROR !!!!!\");\r",
									"    console.log(\"........ Service type is \" + service);\r",
									"    console.log(\"........ Failure reason is \" + data.response.failureReason);\r",
									"    \r",
									"}\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/task/{{taskId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"task",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get SJC-Guest Reservation ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "186a9a46-305e-4a21-abe6-6b20907ea0ab",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var data = JSON.parse(responseBody);",
									"",
									"for (var i=0; i < data.response.length; i++) {",
									"    if (data.response[i].ipPoolName == \"SJC-Guest-Users\") {",
									"        postman.setEnvironmentVariable(\"dsgnGuestPoolId\", data.response[i].id);",
									"    }",
									"}",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "x-auth-token",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/ippool?parentUuid={{dsgnGlobalPool1Id}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"ippool"
							],
							"query": [
								{
									"key": "parentUuid",
									"value": "{{dsgnGlobalPool1Id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update San Jose with SJC-Guest Reservation ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"taskId\", data.response.taskId);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n\t{\n\t\t\"instanceType\":\"reference\",\n\t\t\"namespace\":\"global\",\n\t\t\"type\":\"reference.setting\",\n\t\t\"key\":\"ip.pool.generic.{{dsgnGuestPoolId}}\",\n\t\t\"value\":\n\t\t[\n\t\t\t{\"objReferences\":[\"{{dsgnGuestPoolId}}\"],\n\t\t\t\"type\":\"lan\",\"url\":\"\"\n\t\t\t\t\n\t\t\t}\n\t\t],\n\t\t\"groupUuid\":\"{{dsgnAreaTopId}}\"\n\t\t\n\t}\n]"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/commonsetting/global/{{dsgnAreaTopId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"commonsetting",
								"global",
								"{{dsgnAreaTopId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"var latestRequest = pm.variables.get(\"latestRequest\");\r",
									"var service = data.response.serviceType;\r",
									"var isError = data.response.isError.toString();\r",
									"\r",
									"\r",
									"if (isError == \"false\") {\r",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");\r",
									"}\r",
									"else {\r",
									"    console.log(\"........ \" + latestRequest + \" generated an ERROR !!!!!\");\r",
									"    console.log(\"........ Service type is \" + service);\r",
									"    console.log(\"........ Failure reason is \" + data.response.failureReason);\r",
									"    \r",
									"}\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/task/{{taskId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"task",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Virtual Network Context",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var data = JSON.parse(responseBody);",
									"",
									"for (var i=0; i < data.response.length; i++) {",
									"    if (data.response[i].name == \"DEFAULT_VN\") {",
									"        postman.setEnvironmentVariable(\"vncDefaultVnId\", data.response[i].id);",
									"    }",
									"",
									"    if (data.response[i].name == \"INFRA_VN\") {",
									"        postman.setEnvironmentVariable(\"vncInfraVnId\", data.response[i].id);",
									"    }",
									"    ",
									"    if (data.response[i].name == \"Campus\") {",
									"        postman.setEnvironmentVariable(\"vncCampusVnId\", data.response[i].id);",
									"    }",
									"",
									"    if (data.response[i].name == \"Guest\") {",
									"        postman.setEnvironmentVariable(\"vncGuestVnId\", data.response[i].id);",
									"    }",
									"}",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/data/customer-facing-service/virtualnetworkcontext",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"data",
								"customer-facing-service",
								"virtualnetworkcontext"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Fabric Virtual Network",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var vncDefaultVnId = pm.variables.get(\"vncDefaultVnId\");",
									"var vncCampusId = pm.variables.get(\"vncCampusVnId\");",
									"var vncGuestId = pm.variables.get(\"vncGuestVnId\");",
									"var vncInfraVnId = pm.variables.get(\"vncInfraVnId\");",
									"",
									"console.log(vncDefaultVnId);",
									"",
									"var data = JSON.parse(responseBody);",
									"",
									"for (var i=0; i < data.response.length; i++) {",
									"    if (data.response[i].virtualNetworkContextId == vncDefaultVnId) {",
									"        postman.setEnvironmentVariable(\"vnDefaultVnId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnFullName\", data.response[i].name);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnNamespace\", data.response[i].namespace);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnAuthEntityId\", data.response[i].authEntityId);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnContextId\", data.response[i].virtualNetworkContextId);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnAuthEntityClass\", data.response[i].authEntityClass);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnL3Instance\", data.response[i].l3Instance);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnInstanceId\", data.response[i].instanceId);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnResourceVersion\", data.response[i].resourceVersion);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnInstanceVersion\", data.response[i].instanceVersion);",
									"    }",
									"    if (data.response[i].virtualNetworkContextId == vncCampusId) {",
									"        postman.setEnvironmentVariable(\"vnCampusId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"vnCampusFullName\", data.response[i].name);",
									"        postman.setEnvironmentVariable(\"vnCampusNamespace\", data.response[i].namespace);",
									"        postman.setEnvironmentVariable(\"vnCampusAuthEntityId\", data.response[i].authEntityId);",
									"        postman.setEnvironmentVariable(\"vnCampusContextId\", data.response[i].virtualNetworkContextId);",
									"        postman.setEnvironmentVariable(\"vnCampusAuthEntityClass\", data.response[i].authEntityClass);",
									"        postman.setEnvironmentVariable(\"vnCampusL3Instance\", data.response[i].l3Instance);",
									"        postman.setEnvironmentVariable(\"vnCampusInstanceId\", data.response[i].instanceId);",
									"        postman.setEnvironmentVariable(\"vnCampusResourceVersion\", data.response[i].resourceVersion);",
									"        postman.setEnvironmentVariable(\"vnCampusInstanceVersion\", data.response[i].instanceVersion);",
									"    }",
									"    if (data.response[i].virtualNetworkContextId == vncGuestId) {",
									"        postman.setEnvironmentVariable(\"vnGuestId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"vnGuestFullName\", data.response[i].name);",
									"        postman.setEnvironmentVariable(\"vnGuestNamespace\", data.response[i].namespace);",
									"        postman.setEnvironmentVariable(\"vnGuestAuthEntityId\", data.response[i].authEntityId);",
									"        postman.setEnvironmentVariable(\"vnGuestContextId\", data.response[i].virtualNetworkContextId);",
									"        postman.setEnvironmentVariable(\"vnGuestAuthEntityClass\", data.response[i].authEntityClass);",
									"        postman.setEnvironmentVariable(\"vnGuestL3Instance\", data.response[i].l3Instance);",
									"        postman.setEnvironmentVariable(\"vnGuestInstanceId\", data.response[i].instanceId);",
									"        postman.setEnvironmentVariable(\"vnGuestResourceVersion\", data.response[i].resourceVersion);",
									"        postman.setEnvironmentVariable(\"vnGuestInstanceVersion\", data.response[i].instanceVersion);",
									"    }",
									"    if (data.response[i].virtualNetworkContextId == vncInfraVnId) {",
									"        postman.setEnvironmentVariable(\"vnInfraId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"vnInfraFullName\", data.response[i].name);",
									"        postman.setEnvironmentVariable(\"vnInfraNamespace\", data.response[i].namespace);",
									"        postman.setEnvironmentVariable(\"vnInfraAuthEntityId\", data.response[i].authEntityId);",
									"        postman.setEnvironmentVariable(\"vnInfraContextId\", data.response[i].virtualNetworkContextId);",
									"        postman.setEnvironmentVariable(\"vnInfraAuthEntityClass\", data.response[i].authEntityClass);",
									"        postman.setEnvironmentVariable(\"vnInfraL3Instance\", data.response[i].l3Instance);",
									"        postman.setEnvironmentVariable(\"vnInfraInstanceId\", data.response[i].instanceId);",
									"        postman.setEnvironmentVariable(\"vnInfraResourceVersion\", data.response[i].resourceVersion);",
									"        postman.setEnvironmentVariable(\"vnInfraInstanceVersion\", data.response[i].instanceVersion);",
									"    }",
									"",
									"}",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/data/customer-facing-service/VirtualNetwork",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"data",
								"customer-facing-service",
								"VirtualNetwork"
							]
						}
					},
					"response": []
				},
				{
					"name": "Bind IP Pool to Guest VN",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d247b1d4-7550-43b5-b4cf-c1e8e7f92111",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"taskId\", data.response.taskId);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n\t{\n\t\t\"fabricOverride\":[],\n\t\t\"segment\":\n\t\t[\n\t\t\t{\n\t\t\t\t\"type\":\"Segment\",\n\t\t\t\t\"name\":\"{{authPolicyGuest}}\",\n\t\t\t\t\"trafficType\":\"DATA\",\n\t\t\t\t\"ipPoolId\":\"{{dsgnGuestPoolId}}\",\n\t\t\t\t\"isCriticalPool\":false,\n\t\t\t\t\"isFloodAndLearn\":true,\n\t\t\t\t\"isSelectiveFloodingEnabled\":false,\n\t\t\t\t\"isApProvisioning\":false,\n\t\t\t\t\"isDefaultEnterprise\":false,\n\t\t\t\t\"scalableGroupId\":\"\",\n\t\t\t\t\"isExtendedProvisioning\":false,\n\t\t\t\t\"connectivityDomain\":\n\t\t\t\t\t{\n\t\t\t\t\t\t\"idRef\":\"{{fabSiteId}}\"\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t\"id\":\"{{vnGuestId}}\",\n\t\t\"name\":\"{{vnGuestFullName}}\",\n\t\t\"type\":\"VirtualNetwork\",\n\t\t\"isDefault\":false,\n\t\t\"isInfra\":false,\n\t\t\"l3Instance\":{{vnGuestL3Instance}},\n\t\t\"namespace\":\"{{vnGuestNamespace}}\",\n\t\t\"instanceId\":{{vnGuestInstanceId}},\n\t\t\"displayName\":\"0\",\n\t\t\"deployPending\":\"NONE\",\n\t\t\"instanceVersion\":{{vnGuestInstanceVersion}},\n\t\t\"deployed\":false,\n\t\t\"isStale\":false,\n\t\t\"provisioningState\":\"DEFINED\",\n\t\t\"cfsChangeInfo\":[],\n\t\t\"virtualNetworkContextId\":\"{{vnGuestContextId}}\",\n\t\t\"resourceVersion\":{{vnGuestResourceVersion}}\n\t}\n]"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/data/customer-facing-service/VirtualNetwork",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"data",
								"customer-facing-service",
								"VirtualNetwork"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Status - Pause 1 Min",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"var latestRequest = pm.variables.get(\"latestRequest\");",
									"var service = data.response.serviceType;",
									"var isError = data.response.isError.toString();",
									"",
									"",
									"if (isError == \"false\") {",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");",
									"}",
									"else {",
									"    console.log(\"........ \" + latestRequest + \" generated an ERROR !!!!!\");",
									"    console.log(\"........ Service type is \" + service);",
									"    console.log(\"........ Failure reason is \" + data.response.failureReason);",
									"    ",
									"}",
									"",
									"",
									"",
									"console.log(\"Sleeping for one min.\");",
									"setTimeout(function(){}, 60000);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/task/{{taskId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"task",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Fabric Data",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var data = JSON.parse(responseBody);",
									"",
									"",
									"    ",
									"for (var i=0; i < data.response.length; i++) {",
									"    if (data.response[i].name == \"US West\") {",
									"        postman.setEnvironmentVariable(\"fabId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"fabResourceVersion\", data.response[i].resourceVersion);",
									"         }",
									"    if (data.response[i].name.includes(\"San_Jose_US_West\")) {",
									"        postman.setEnvironmentVariable(\"fabSiteId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"fabSiteResourceVersion\", data.response[i].resourceVersion);",
									"        strFabVirtualNetworks=JSON.stringify(data.response[i].virtualNetwork);",
									"        postman.setEnvironmentVariable(\"fabVirtualNetworks\", strFabVirtualNetworks);",
									"         }",
									"    else if (data.response[i].name.includes(\"Transit\")) {",
									"        postman.setEnvironmentVariable(\"fabTransitId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"fabSiteTransitVersion\", data.response[i].resourceVersion);",
									"         }",
									"  ",
									"}",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/data/customer-facing-service/ConnectivityDomain",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"data",
								"customer-facing-service",
								"ConnectivityDomain"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Virtual Network Context",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var data = JSON.parse(responseBody);",
									"",
									"for (var i=0; i < data.response.length; i++) {",
									"    if (data.response[i].name == \"DEFAULT_VN\") {",
									"        postman.setEnvironmentVariable(\"vncDefaultVnId\", data.response[i].id);",
									"    }",
									"",
									"    if (data.response[i].name == \"INFRA_VN\") {",
									"        postman.setEnvironmentVariable(\"vncInfraVnId\", data.response[i].id);",
									"    }",
									"    ",
									"    if (data.response[i].name == \"Campus\") {",
									"        postman.setEnvironmentVariable(\"vncCampusVnId\", data.response[i].id);",
									"    }",
									"",
									"    if (data.response[i].name == \"Guest\") {",
									"        postman.setEnvironmentVariable(\"vncGuestVnId\", data.response[i].id);",
									"    }",
									"}",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/data/customer-facing-service/virtualnetworkcontext",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"data",
								"customer-facing-service",
								"virtualnetworkcontext"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Fabric Virtual Network",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var vncDefaultVnId = pm.variables.get(\"vncDefaultVnId\");",
									"var vncCampusId = pm.variables.get(\"vncCampusVnId\");",
									"var vncGuestId = pm.variables.get(\"vncGuestVnId\");",
									"var vncInfraVnId = pm.variables.get(\"vncInfraVnId\");",
									"",
									"console.log(vncDefaultVnId);",
									"",
									"var data = JSON.parse(responseBody);",
									"",
									"for (var i=0; i < data.response.length; i++) {",
									"    if (data.response[i].virtualNetworkContextId == vncDefaultVnId) {",
									"        postman.setEnvironmentVariable(\"vnDefaultVnId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnFullName\", data.response[i].name);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnNamespace\", data.response[i].namespace);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnAuthEntityId\", data.response[i].authEntityId);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnContextId\", data.response[i].virtualNetworkContextId);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnAuthEntityClass\", data.response[i].authEntityClass);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnL3Instance\", data.response[i].l3Instance);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnInstanceId\", data.response[i].instanceId);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnResourceVersion\", data.response[i].resourceVersion);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnInstanceVersion\", data.response[i].instanceVersion);",
									"    }",
									"    if (data.response[i].virtualNetworkContextId == vncCampusId) {",
									"        postman.setEnvironmentVariable(\"vnCampusId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"vnCampusFullName\", data.response[i].name);",
									"        postman.setEnvironmentVariable(\"vnCampusNamespace\", data.response[i].namespace);",
									"        postman.setEnvironmentVariable(\"vnCampusAuthEntityId\", data.response[i].authEntityId);",
									"        postman.setEnvironmentVariable(\"vnCampusContextId\", data.response[i].virtualNetworkContextId);",
									"        postman.setEnvironmentVariable(\"vnCampusAuthEntityClass\", data.response[i].authEntityClass);",
									"        postman.setEnvironmentVariable(\"vnCampusL3Instance\", data.response[i].l3Instance);",
									"        postman.setEnvironmentVariable(\"vnCampusInstanceId\", data.response[i].instanceId);",
									"        postman.setEnvironmentVariable(\"vnCampusResourceVersion\", data.response[i].resourceVersion);",
									"        postman.setEnvironmentVariable(\"vnCampusInstanceVersion\", data.response[i].instanceVersion);",
									"    }",
									"    if (data.response[i].virtualNetworkContextId == vncGuestId) {",
									"        postman.setEnvironmentVariable(\"vnGuestId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"vnGuestFullName\", data.response[i].name);",
									"        postman.setEnvironmentVariable(\"vnGuestNamespace\", data.response[i].namespace);",
									"        postman.setEnvironmentVariable(\"vnGuestAuthEntityId\", data.response[i].authEntityId);",
									"        postman.setEnvironmentVariable(\"vnGuestContextId\", data.response[i].virtualNetworkContextId);",
									"        postman.setEnvironmentVariable(\"vnGuestAuthEntityClass\", data.response[i].authEntityClass);",
									"        postman.setEnvironmentVariable(\"vnGuestL3Instance\", data.response[i].l3Instance);",
									"        postman.setEnvironmentVariable(\"vnGuestInstanceId\", data.response[i].instanceId);",
									"        postman.setEnvironmentVariable(\"vnGuestResourceVersion\", data.response[i].resourceVersion);",
									"        postman.setEnvironmentVariable(\"vnGuestInstanceVersion\", data.response[i].instanceVersion);",
									"    }",
									"    if (data.response[i].virtualNetworkContextId == vncInfraVnId) {",
									"        postman.setEnvironmentVariable(\"vnInfraId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"vnInfraFullName\", data.response[i].name);",
									"        postman.setEnvironmentVariable(\"vnInfraNamespace\", data.response[i].namespace);",
									"        postman.setEnvironmentVariable(\"vnInfraAuthEntityId\", data.response[i].authEntityId);",
									"        postman.setEnvironmentVariable(\"vnInfraContextId\", data.response[i].virtualNetworkContextId);",
									"        postman.setEnvironmentVariable(\"vnInfraAuthEntityClass\", data.response[i].authEntityClass);",
									"        postman.setEnvironmentVariable(\"vnInfraL3Instance\", data.response[i].l3Instance);",
									"        postman.setEnvironmentVariable(\"vnInfraInstanceId\", data.response[i].instanceId);",
									"        postman.setEnvironmentVariable(\"vnInfraResourceVersion\", data.response[i].resourceVersion);",
									"        postman.setEnvironmentVariable(\"vnInfraInstanceVersion\", data.response[i].instanceVersion);",
									"    }",
									"",
									"}",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/data/customer-facing-service/VirtualNetwork",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"data",
								"customer-facing-service",
								"VirtualNetwork"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Device Info - Border 1 and 2 in Fabric",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var data = JSON.parse(responseBody);",
									"var vnInfraId = pm.variables.get(\"vnInfraId\");",
									"var vnCampusId = pm.variables.get(\"vnCampusId\");",
									"var vnGuestId = pm.variables.get(\"vnGuestId\");",
									"",
									"for (var i=0; i < data.response.length; i++) {",
									"    if (data.response[i].name.includes (\"edge-1\")) {",
									"        postman.setEnvironmentVariable(\"edge1DevinfoId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"edge1InstanceId\", data.response[i].instanceId);",
									"        postman.setEnvironmentVariable(\"edge1AuthEntityId\", data.response[i].authEntityId);",
									"        postman.setEnvironmentVariable(\"edge1DisplayName\", data.response[i].displayName);",
									"        postman.setEnvironmentVariable(\"edge1AuthEntityClass\", data.response[i].authEntityClass);",
									"        postman.setEnvironmentVariable(\"edge1InstanceTenantId\", data.response[i].instanceTenantId);",
									"        postman.setEnvironmentVariable(\"edge1CreateTime\", data.response[i].createTime);",
									"        postman.setEnvironmentVariable(\"edge1LastUpdateTime\", data.response[i].lastUpdateTime);",
									"        postman.setEnvironmentVariable(\"edge1Name\", data.response[i].name);",
									"        postman.setEnvironmentVariable(\"edge1Namespace\", data.response[i].namespace);",
									"        postman.setEnvironmentVariable(\"edge1ProvisioningState\", data.response[i].provisioningState);",
									"        postman.setEnvironmentVariable(\"edge1ResourceVersion\", data.response[i].resourceVersion);",
									"        postman.setEnvironmentVariable(\"edge1Type\", data.response[i].type);",
									"        postman.setEnvironmentVariable(\"edge1NetworkDeviceId\", data.response[i].networkDeviceId);",
									"        postman.setEnvironmentVariable(\"edge1SiteId\", data.response[i].siteId);",
									"        strNetworkWideSettings = JSON.stringify(data.response[i].networkWideSettings);",
									"        postman.setEnvironmentVariable(\"edge1NetworkWideSettings\",strNetworkWideSettings );",
									"    }",
									"        if (data.response[i].name.includes (\"cp-border-1\")) {",
									"        postman.setEnvironmentVariable(\"cpborder1DevinfoId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"cpborder1InstanceId\", data.response[i].instanceId);",
									"        postman.setEnvironmentVariable(\"cpborder1AuthEntityId\", data.response[i].authEntityId);",
									"        postman.setEnvironmentVariable(\"cpborder1DisplayName\", data.response[i].displayName);",
									"        postman.setEnvironmentVariable(\"cpborder1AuthEntityClass\", data.response[i].authEntityClass);",
									"        postman.setEnvironmentVariable(\"cpborder1InstanceTenantId\", data.response[i].instanceTenantId);",
									"        postman.setEnvironmentVariable(\"cpborder1CreateTime\", data.response[i].createTime);",
									"        postman.setEnvironmentVariable(\"cpborder1LastUpdateTime\", data.response[i].lastUpdateTime);",
									"        postman.setEnvironmentVariable(\"cpborder1Name\", data.response[i].name);",
									"        postman.setEnvironmentVariable(\"cpborder1Namespace\", data.response[i].namespace);",
									"        postman.setEnvironmentVariable(\"cpborder1ProvisioningState\", data.response[i].provisioningState);",
									"        postman.setEnvironmentVariable(\"cpborder1ResourceVersion\", data.response[i].resourceVersion);",
									"        postman.setEnvironmentVariable(\"cpborder1Type\", data.response[i].type);",
									"        postman.setEnvironmentVariable(\"cpborder1NetworkDeviceId\", data.response[i].networkDeviceId);",
									"        postman.setEnvironmentVariable(\"cpborder1SiteId\", data.response[i].siteId);",
									"        strNetworkWideSettings = JSON.stringify(data.response[i].networkWideSettings);",
									"        postman.setEnvironmentVariable(\"cpborder1NetworkWideSettings\",strNetworkWideSettings );",
									"        postman.setEnvironmentVariable(\"cpborder1DevSettingsId\", data.response[i].deviceSettings.id);",
									"        postman.setEnvironmentVariable(\"cpborder1DevSettingsInstanceId\", data.response[i].deviceSettings.instanceId);",
									"        postman.setEnvironmentVariable(\"cpborder1DevSettingsInstanceVersion\", data.response[i].deviceSettings.instanceVersion);",
									"        postman.setEnvironmentVariable(\"extConnBorder1Int\", data.response[i].deviceSettings.extConnectivitySettings[0].id);",
									"        postman.setEnvironmentVariable(\"extConnBorder1IntInstanceId\", data.response[i].deviceSettings.extConnectivitySettings[0].instanceId);",
									"        postman.setEnvironmentVariable(\"extConnBorder1IntInstanceVersion\", data.response[i].deviceSettings.extConnectivitySettings[0].instanceVersion);",
									"        for (var x=0; x < data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff.length; x++) {",
									"            if (data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].virtualNetwork.idRef == vnInfraId) {",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3InfraId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].id);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3InfraInstanceId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].instanceId);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3InfraInstanceVersion\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].instanceVersion);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3InfraLocalIp\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].localIpAddress);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3InfraRemoteIp\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].remoteIpAddress);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3InfraVlanId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].vlanId);",
									"            }",
									"            if (data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].virtualNetwork.idRef == vnCampusId) {",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3CampusId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].id);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3CampusInstanceId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].instanceId);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3CampusInstanceVersion\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].instanceVersion);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3CampusLocalIp\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].localIpAddress);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3CampusRemoteIp\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].remoteIpAddress);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3CampusVlanId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].vlanId);",
									"                }",
									"            if (data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].virtualNetwork.idRef == vnGuestId) {",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3GuestId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].id);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3GuestInstanceId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].instanceId);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3GuestInstanceVersion\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].instanceVersion);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3GuestLocalIp\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].localIpAddress);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3GuestRemoteIp\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].remoteIpAddress);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3GuestVlanId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].vlanId);",
									"                }",
									"            }",
									"        }",
									"        if (data.response[i].name.includes (\"cp-border-2\")) {",
									"        postman.setEnvironmentVariable(\"cpborder2DevinfoId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"cpborder2InstanceId\", data.response[i].instanceId);",
									"        postman.setEnvironmentVariable(\"cpborder2AuthEntityId\", data.response[i].authEntityId);",
									"        postman.setEnvironmentVariable(\"cpborder2DisplayName\", data.response[i].displayName);",
									"        postman.setEnvironmentVariable(\"cpborder2AuthEntityClass\", data.response[i].authEntityClass);",
									"        postman.setEnvironmentVariable(\"cpborder2InstanceTenantId\", data.response[i].instanceTenantId);",
									"        postman.setEnvironmentVariable(\"cpborder2CreateTime\", data.response[i].createTime);",
									"        postman.setEnvironmentVariable(\"cpborder2LastUpdateTime\", data.response[i].lastUpdateTime);",
									"        postman.setEnvironmentVariable(\"cpborder2Name\", data.response[i].name);",
									"        postman.setEnvironmentVariable(\"cpborder2Namespace\", data.response[i].namespace);",
									"        postman.setEnvironmentVariable(\"cpborder2ProvisioningState\", data.response[i].provisioningState);",
									"        postman.setEnvironmentVariable(\"cpborder2ResourceVersion\", data.response[i].resourceVersion);",
									"        postman.setEnvironmentVariable(\"cpborder2Type\", data.response[i].type);",
									"        postman.setEnvironmentVariable(\"cpborder2NetworkDeviceId\", data.response[i].networkDeviceId);",
									"        postman.setEnvironmentVariable(\"cpborder2SiteId\", data.response[i].siteId);",
									"        strNetworkWideSettings = JSON.stringify(data.response[i].networkWideSettings);",
									"        postman.setEnvironmentVariable(\"cpborder2NetworkWideSettings\",strNetworkWideSettings );",
									"        postman.setEnvironmentVariable(\"cpborder2DevSettingsId\", data.response[i].deviceSettings.id);",
									"        postman.setEnvironmentVariable(\"cpborder2DevSettingsInstanceId\", data.response[i].deviceSettings.instanceId);",
									"        postman.setEnvironmentVariable(\"cpborder2DevSettingsInstanceVersion\", data.response[i].deviceSettings.instanceVersion);",
									"        postman.setEnvironmentVariable(\"extConnBorder2Int\", data.response[i].deviceSettings.extConnectivitySettings[0].id);",
									"        postman.setEnvironmentVariable(\"extConnBorder2IntInstanceId\", data.response[i].deviceSettings.extConnectivitySettings[0].instanceId);",
									"        postman.setEnvironmentVariable(\"extConnBorder2IntInstanceVersion\", data.response[i].deviceSettings.extConnectivitySettings[0].instanceVersion);",
									"        for (var x=0; x < data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff.length; x++) {",
									"\t\t if (data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].virtualNetwork.idRef == vnInfraId) {",
									"\t\t\t\t postman.setEnvironmentVariable(\"extConnBorder2L3InfraId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].id);",
									"\t\t\t\t postman.setEnvironmentVariable(\"extConnBorder2L3InfraInstanceId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].instanceId);",
									"\t\t\t\t postman.setEnvironmentVariable(\"extConnBorder2L3InfraInstanceVersion\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].instanceVersion);",
									"\t\t\t\t postman.setEnvironmentVariable(\"extConnBorder2L3InfraLocalIp\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].localIpAddress);",
									"\t\t\t\t postman.setEnvironmentVariable(\"extConnBorder2L3InfraRemoteIp\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].remoteIpAddress);",
									"\t\t\t\t postman.setEnvironmentVariable(\"extConnBorder2L3InfraVlanId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].vlanId);",
									"\t\t    }",
									"            if (data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].virtualNetwork.idRef == vnCampusId) {",
									"                postman.setEnvironmentVariable(\"extConnBorder2L3CampusId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].id);",
									"                postman.setEnvironmentVariable(\"extConnBorder2L3CampusInstanceId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].instanceId);",
									"                postman.setEnvironmentVariable(\"extConnBorder2L3CampusInstanceVersion\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].instanceVersion);",
									"                postman.setEnvironmentVariable(\"extConnBorder2L3CampusLocalIp\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].localIpAddress);",
									"                postman.setEnvironmentVariable(\"extConnBorder2L3CampusRemoteIp\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].remoteIpAddress);",
									"                postman.setEnvironmentVariable(\"extConnBorder2L3CampusVlanId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].vlanId);",
									"                }",
									"            if (data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].virtualNetwork.idRef == vnGuestId) {",
									"                postman.setEnvironmentVariable(\"extConnBorder2L3GuestId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].id);",
									"                postman.setEnvironmentVariable(\"extConnBorder2L3GuestInstanceId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].instanceId);",
									"                postman.setEnvironmentVariable(\"extConnBorder2L3GuestInstanceVersion\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].instanceVersion);",
									"                postman.setEnvironmentVariable(\"extConnBorder2L3GuestLocalIp\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].localIpAddress);",
									"                postman.setEnvironmentVariable(\"extConnBorder2L3GuestRemoteIp\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].remoteIpAddress);",
									"                postman.setEnvironmentVariable(\"extConnBorder2L3GuestVlanId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].vlanId);",
									"                }",
									"\t\t }",
									"    }",
									"}",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/data/customer-facing-service/DeviceInfo",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"data",
								"customer-facing-service",
								"DeviceInfo"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Border1 + Guest + 1/0/2 to Fabric",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d247b1d4-7550-43b5-b4cf-c1e8e7f92111",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"taskId\", data.response.taskId);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n\t{\n\t\t\"id\":\"{{fabSiteId}}\",\n\t\t\"type\":\"ConnectivityDomain\",\n\t\t\"name\":\"Global/San_Jose_US_West\",\n\t\t\"domainType\":\"FABRIC_SITE\",\n\t\t\"isDefault\":false,\n\t\t\"virtualNetwork\":{{fabVirtualNetworks}},\n\t\t\"deviceInfo\":\n\t\t[\n\t\t\t{\n\t\t\t\t\"cfsChangeInfo\":[],\n\t\t\t\t\"configs\":[],\t\n\t\t\t\t\"createTime\":{{cpborder1CreateTime}},\n\t\t\t\t\"deployed\":false,\"deviceInterfaceInfo\":[],\n\t\t\t\t\"displayName\":\"{{cpborder1DisplayName}}\",\n\t\t\t\t\"id\":\"{{cpborder1DevinfoId}}\",\n\t\t\t\t\"instanceId\":{{cpborder1InstanceId}},\n\t\t\t\t\"instanceVersion\":{{cpborder1ResourceVersion}},\n\t\t\t\t\"isStale\":false,\n\t\t\t\t\"lastUpdateTime\":{{cpborder1LastUpdateTime}},\n\t\t\t\t\"name\":\"{{devCpBorder1FullName}}\",\n\t\t\t\t\"namespace\":\"{{cpborder1Namespace}}\",\n\t\t\t\t\"networkDeviceId\":\"{{cpborder1NetworkDeviceId}}\",\n\t \t\t\t\"networkWideSettings\":{{cpborder1NetworkWideSettings}},\n \t\t\t\t\"provisioningState\":\"DEFINED\",\n\t\t\t\t\"roles\":[\"BORDERNODE\",\"MAPSERVER\"],\n\t\t\t\t\"siteId\":\"{{dsgnSjc13MdfId}}\",\n\t\t\t\t\"transitNetworks\":[{\"idRef\":\"{{fabTransitId}}\"}],\n\t\t\t\t\"type\":\"DeviceInfo\",\n\t\t\t\t\"wlan\":[],\n\t\t\t\t\"otherDevice\":[],\n\t\t\t\t\"deviceSettings\":\n\t\t\t\t{\n\t\t\t\t\t\"id\":\"{{cpborder1DevSettingsId}}\",\n\t\t\t\t\t\"instanceId\":{{cpborder1DevSettingsInstanceId}},\n\t\t\t\t\t\"displayName\":\"0\",\n\t\t\t\t\t\"instanceVersion\":{{cpborder1DevSettingsInstanceVersion}},\n\t\t\t\t\t\"connectedTo\":[\"INTERNET\"],\n\t\t\t\t\t\"cpu\":0,\n\t\t\t\t\t\"dhcpEnabled\":false,\n\t\t\t\t\t\"externalConnectivityIpPool\":\"{{dsgnTransitPoolId}}\",\n\t\t\t\t\t\"externalDomainRoutingProtocol\":\"BGP\",\n\t\t\t\t\t\"internalDomainProtocolNumber\":\"65534\",\n\t\t\t\t\t\"memory\":0,\n\t\t\t\t\t\"nodeType\":[\"EXTERNAL\"],\n\t\t\t\t\t\"storage\":0,\n\t\t\t\t\t\"extConnectivitySettings\":\n\t\t\t\t\t[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"externalDomainProtocolNumber\":\"65535\",\n\t\t\t\t\t\t\t\"interfaceUuid\":\"GigabitEthernet1/0/2\",\n\t\t\t\t\t\t\t\"policyPropagationEnabled\":false,\n\t\t\n\t\t\t\t\t\t\t\"l2Handoff\":[],\n\t\t\t\t\t\t\t\"l3Handoff\":\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t{\"virtualNetwork\":{\"idRef\":\"{{vnInfraId}}\"}},\n\t\t\t\t\t\t\t\t{\"virtualNetwork\":{\"idRef\":\"{{vnCampusId}}\"}},\n\t\t\t\t\t\t\t\t{\"virtualNetwork\":{\"idRef\":\"{{vnGuestId}}\"}}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\t{\n\t\t\t\t\"cfsChangeInfo\":[],\n\t\t\t\t\"configs\":[],\n\t\t\t\t\"createTime\":{{edge1CreateTime}},\n\t\t\t\t\"deployed\":false,\n\t\t\t\t\"deviceInterfaceInfo\":[],\n\t\t\t\t\"displayName\":\"{{edge1DisplayName}}\",\n\t\t\t\t\"id\":\"{{edge1DevinfoId}}\",\n\t\t\t\t\"instanceId\":{{edge1InstanceId}},\n\t\t\t\t\"instanceVersion\":{{edge1ResourceVersion}},\n\t\t\t\t\"isStale\":false,\n\t\t\t\t\"lastUpdateTime\":{{edge1LastUpdateTime}},\n\t\t\t\t\"name\":\"{{edge1Name}}\",\n\t\t\t\t\"namespace\":\"{{edge1Namespace}}\",\n\t\t\t\t\"networkDeviceId\":\"{{edge1NetworkDeviceId}}\",\n\t\t\t\t\"networkWideSettings\":{{edge1NetworkWideSettings}},\n\t\t\t\t\"provisioningState\":\"DEFINED\",\n\t\t\t\t\"roles\":[\"EDGENODE\"],\n\t\t\t\t\"siteId\":\"{{dsgnSjc13FirstFloorId}}\",\n\t\t\t\t\"transitNetworks\":[],\n\t\t\t\t\"type\":\"DeviceInfo\",\n\t\t\t\t\"wlan\":[],\n\t\t\t\t\"otherDevice\":[]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"cfsChangeInfo\":[],\n\t\t\t\t\"configs\":[],\n\t\t\t\t\"createTime\":{{cpborder2CreateTime}},\n\t\t\t\t\"deployed\":false,\n\t\t\t\t\"deviceInterfaceInfo\":[],\n\t\t\t\t\"displayName\":\"{{cpborder2DisplayName}}\",\n\t\t\t\t\"id\":\"{{cpborder2DevinfoId}}\",\n\t\t\t\t\"instanceId\":{{cpborder2InstanceId}},\n\t\t\t\t\"instanceVersion\":{{cpborder2ResourceVersion}},\n\t\t\t\t\"isStale\":false,\n\t\t\t\t\"lastUpdateTime\":{{cpborder2LastUpdateTime}},\n\t\t\t\t\"name\":\"{{cpborder2Name}}\",\n\t\t\t\t\"namespace\":\"{{cpborder2Namespace}}\",\n\t\t\t\t\"networkDeviceId\":\"{{cpborder2NetworkDeviceId}}\",\n\t\t\t\t\"networkWideSettings\":{{cpborder2NetworkWideSettings}},\n\t\t\t\t\"provisioningState\":\"DEFINED\",\n\t\t\t\t\"roles\":[\"BORDERNODE\",\"MAPSERVER\"],\n\t\t\t\t\"siteId\":\"{{dsgnSjc13MdfId}}\",\n\t\t\t\t\"transitNetworks\":[{\"idRef\":\"{{fabTransitId}}\"}],\n\t\t\t\t\"type\":\"DeviceInfo\",\n\t\t\t\t\"wlan\":[],\n\t\t\t\t\"otherDevice\":[],\n\t\t\t\t\"deviceSettings\":\n\t\t\t\t{\n\t\t\t\t\t\"id\":\"{{cpborder2DevSettingsId}}\",\n\t\t\t\t\t\"instanceId\":{{cpborder2DevSettingsInstanceId}},\n\t\t\t\t\t\"displayName\":\"0\",\n\t\t\t\t\t\"instanceVersion\":{{cpborder2DevSettingsInstanceVersion}},\n\t\t\t\t\t\"connectedTo\":[\"INTERNET\"],\n\t\t\t\t\t\"cpu\":0,\n\t\t\t\t\t\"dhcpEnabled\":false,\n\t\t\t\t\t\"externalConnectivityIpPool\":\"{{dsgnTransitPoolId}}\",\n\t\t\t\t\t\"externalDomainRoutingProtocol\":\"BGP\",\n\t\t\t\t\t\"internalDomainProtocolNumber\":\"65534\",\n\t\t\t\t\t\"memory\":0,\n\t\t\t\t\t\"nodeType\":[\"EXTERNAL\"],\n\t\t\t\t\t\"storage\":0,\n\t\t\t\t\t\"extConnectivitySettings\":\n\t\t\t\t\t[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\":\"{{extConnBorder2Int}}\",\n\t\t\t\t\t\t\t\"instanceId\":{{extConnBorder2IntInstanceId}},\n\t\t\t\t\t\t\t\"displayName\":\"0\",\n\t\t\t\t\t\t\t\"instanceVersion\":{{extConnBorder2IntInstanceVersion}},\n\t\t\t\t\t\t\t\"externalDomainProtocolNumber\":\"65535\",\n\t\t\t\t\t\t\t\"interfaceUuid\":\"GigabitEthernet1/0/2\",\n\t\t\t\t\t\t\t\"policyPropagationEnabled\":false,\n\t\t\t\t\t\t\t\"policySgtTag\":0,\n\t\t\t\t\t\t\t\"l2Handoff\":[],\n\t\t\t\t\t\t\t\"l3Handoff\":\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"id\":\"{{extConnBorder2L3InfraId}}\",\n\t\t\t\t\t\t\t\t\t\"instanceId\":{{extConnBorder2L3InfraInstanceId}},\n\t\t\t\t\t\t\t\t\t\"displayName\":\"0\",\n\t\t\t\t\t\t\t\t\t\"instanceVersion\":{{extConnBorder2L3InfraInstanceVersion}},\n\t\t\t\t\t\t\t\t\t\"localIpAddress\":\"{{extConnBorder2L3InfraLocalIp}}\",\n\t\t\t\t\t\t\t\t\t\"remoteIpAddress\":\"{{extConnBorder2L3InfraRemoteIp}}\",\n\t\t\t\t\t\t\t\t\t\"vlanId\":{{extConnBorder2L3InfraVlanId}},\n\t\t\t\t\t\t\t\t\t\"virtualNetwork\":\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"idRef\":\"{{vnInfraId}}\"\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"id\":\"{{extConnBorder2L3CampusId}}\",\n\t\t\t\t\t\t\t\t\t\"instanceId\":{{extConnBorder2L3CampusInstanceId}},\n\t\t\t\t\t\t\t\t\t\"displayName\":\"0\",\n\t\t\t\t\t\t\t\t\t\"instanceVersion\":{{extConnBorder2L3CampusInstanceVersion}},\n\t\t\t\t\t\t\t\t\t\"localIpAddress\":\"{{extConnBorder2L3CampusLocalIp}}\",\n\t\t\t\t\t\t\t\t\t\"remoteIpAddress\":\"{{extConnBorder2L3CampusRemoteIp}}\",\n\t\t\t\t\t\t\t\t\t\"vlanId\":{{extConnBorder2L3CampusVlanId}},\n\t\t\t\t\t\t\t\t\t\"virtualNetwork\":\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"idRef\":\"{{vnCampusId}}\"\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t\"multicastInfo\":[],\n\t\t\"enableMonitoring\":true,\n\t\t\"resourceVersion\":{{fabSiteResourceVersion}},\n\t\t\"siteId\":\"{{dsgnAreaTopId}}\",\n\t\t\"siteSpecificDomain\":[],\n\t\t\"wirelessMulticastFeature\":false,\n\t\t\"isNativeMulticastEnabled\":false,\n\t\t\"authenticationProfileId\":\"{{authClosedId}}\"\n\t\t\t\t\t\t\t\t\n\t}\n]\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/data/customer-facing-service/ConnectivityDomain",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"data",
								"customer-facing-service",
								"ConnectivityDomain"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Status - Pause 1 Min",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"var latestRequest = pm.variables.get(\"latestRequest\");",
									"var service = data.response.serviceType;",
									"var isError = data.response.isError.toString();",
									"",
									"",
									"if (isError == \"false\") {",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");",
									"}",
									"else {",
									"    console.log(\"........ \" + latestRequest + \" generated an ERROR !!!!!\");",
									"    console.log(\"........ Service type is \" + service);",
									"    console.log(\"........ Failure reason is \" + data.response.failureReason);",
									"    ",
									"}",
									"",
									"",
									"",
									"console.log(\"Sleeping for one min.\");",
									"setTimeout(function(){}, 60000);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/task/{{taskId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"task",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Fabric Data",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var data = JSON.parse(responseBody);",
									"",
									"",
									"    ",
									"for (var i=0; i < data.response.length; i++) {",
									"    if (data.response[i].name == \"US West\") {",
									"        postman.setEnvironmentVariable(\"fabId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"fabResourceVersion\", data.response[i].resourceVersion);",
									"         }",
									"    if (data.response[i].name.includes(\"San_Jose_US_West\")) {",
									"        postman.setEnvironmentVariable(\"fabSiteId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"fabSiteResourceVersion\", data.response[i].resourceVersion);",
									"        strFabVirtualNetworks=JSON.stringify(data.response[i].virtualNetwork);",
									"        postman.setEnvironmentVariable(\"fabVirtualNetworks\", strFabVirtualNetworks);",
									"         }",
									"    else if (data.response[i].name.includes(\"Transit\")) {",
									"        postman.setEnvironmentVariable(\"fabTransitId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"fabSiteTransitVersion\", data.response[i].resourceVersion);",
									"         }",
									"  ",
									"}",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/data/customer-facing-service/ConnectivityDomain",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"data",
								"customer-facing-service",
								"ConnectivityDomain"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Virtual Network Context",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var data = JSON.parse(responseBody);",
									"",
									"for (var i=0; i < data.response.length; i++) {",
									"    if (data.response[i].name == \"DEFAULT_VN\") {",
									"        postman.setEnvironmentVariable(\"vncDefaultVnId\", data.response[i].id);",
									"    }",
									"",
									"    if (data.response[i].name == \"INFRA_VN\") {",
									"        postman.setEnvironmentVariable(\"vncInfraVnId\", data.response[i].id);",
									"    }",
									"    ",
									"    if (data.response[i].name == \"Campus\") {",
									"        postman.setEnvironmentVariable(\"vncCampusVnId\", data.response[i].id);",
									"    }",
									"",
									"    if (data.response[i].name == \"Guest\") {",
									"        postman.setEnvironmentVariable(\"vncGuestVnId\", data.response[i].id);",
									"    }",
									"}",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/data/customer-facing-service/virtualnetworkcontext",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"data",
								"customer-facing-service",
								"virtualnetworkcontext"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Fabric Virtual Network",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var vncDefaultVnId = pm.variables.get(\"vncDefaultVnId\");",
									"var vncCampusId = pm.variables.get(\"vncCampusVnId\");",
									"var vncGuestId = pm.variables.get(\"vncGuestVnId\");",
									"var vncInfraVnId = pm.variables.get(\"vncInfraVnId\");",
									"",
									"console.log(vncDefaultVnId);",
									"",
									"var data = JSON.parse(responseBody);",
									"",
									"for (var i=0; i < data.response.length; i++) {",
									"    if (data.response[i].virtualNetworkContextId == vncDefaultVnId) {",
									"        postman.setEnvironmentVariable(\"vnDefaultVnId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnFullName\", data.response[i].name);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnNamespace\", data.response[i].namespace);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnAuthEntityId\", data.response[i].authEntityId);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnContextId\", data.response[i].virtualNetworkContextId);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnAuthEntityClass\", data.response[i].authEntityClass);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnL3Instance\", data.response[i].l3Instance);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnInstanceId\", data.response[i].instanceId);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnResourceVersion\", data.response[i].resourceVersion);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnInstanceVersion\", data.response[i].instanceVersion);",
									"    }",
									"    if (data.response[i].virtualNetworkContextId == vncCampusId) {",
									"        postman.setEnvironmentVariable(\"vnCampusId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"vnCampusFullName\", data.response[i].name);",
									"        postman.setEnvironmentVariable(\"vnCampusNamespace\", data.response[i].namespace);",
									"        postman.setEnvironmentVariable(\"vnCampusAuthEntityId\", data.response[i].authEntityId);",
									"        postman.setEnvironmentVariable(\"vnCampusContextId\", data.response[i].virtualNetworkContextId);",
									"        postman.setEnvironmentVariable(\"vnCampusAuthEntityClass\", data.response[i].authEntityClass);",
									"        postman.setEnvironmentVariable(\"vnCampusL3Instance\", data.response[i].l3Instance);",
									"        postman.setEnvironmentVariable(\"vnCampusInstanceId\", data.response[i].instanceId);",
									"        postman.setEnvironmentVariable(\"vnCampusResourceVersion\", data.response[i].resourceVersion);",
									"        postman.setEnvironmentVariable(\"vnCampusInstanceVersion\", data.response[i].instanceVersion);",
									"    }",
									"    if (data.response[i].virtualNetworkContextId == vncGuestId) {",
									"        postman.setEnvironmentVariable(\"vnGuestId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"vnGuestFullName\", data.response[i].name);",
									"        postman.setEnvironmentVariable(\"vnGuestNamespace\", data.response[i].namespace);",
									"        postman.setEnvironmentVariable(\"vnGuestAuthEntityId\", data.response[i].authEntityId);",
									"        postman.setEnvironmentVariable(\"vnGuestContextId\", data.response[i].virtualNetworkContextId);",
									"        postman.setEnvironmentVariable(\"vnGuestAuthEntityClass\", data.response[i].authEntityClass);",
									"        postman.setEnvironmentVariable(\"vnGuestL3Instance\", data.response[i].l3Instance);",
									"        postman.setEnvironmentVariable(\"vnGuestInstanceId\", data.response[i].instanceId);",
									"        postman.setEnvironmentVariable(\"vnGuestResourceVersion\", data.response[i].resourceVersion);",
									"        postman.setEnvironmentVariable(\"vnGuestInstanceVersion\", data.response[i].instanceVersion);",
									"    }",
									"    if (data.response[i].virtualNetworkContextId == vncInfraVnId) {",
									"        postman.setEnvironmentVariable(\"vnInfraId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"vnInfraFullName\", data.response[i].name);",
									"        postman.setEnvironmentVariable(\"vnInfraNamespace\", data.response[i].namespace);",
									"        postman.setEnvironmentVariable(\"vnInfraAuthEntityId\", data.response[i].authEntityId);",
									"        postman.setEnvironmentVariable(\"vnInfraContextId\", data.response[i].virtualNetworkContextId);",
									"        postman.setEnvironmentVariable(\"vnInfraAuthEntityClass\", data.response[i].authEntityClass);",
									"        postman.setEnvironmentVariable(\"vnInfraL3Instance\", data.response[i].l3Instance);",
									"        postman.setEnvironmentVariable(\"vnInfraInstanceId\", data.response[i].instanceId);",
									"        postman.setEnvironmentVariable(\"vnInfraResourceVersion\", data.response[i].resourceVersion);",
									"        postman.setEnvironmentVariable(\"vnInfraInstanceVersion\", data.response[i].instanceVersion);",
									"    }",
									"",
									"}",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/data/customer-facing-service/VirtualNetwork",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"data",
								"customer-facing-service",
								"VirtualNetwork"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Device Info - Border 1 and 2 in Fabric",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var data = JSON.parse(responseBody);",
									"var vnInfraId = pm.variables.get(\"vnInfraId\");",
									"var vnCampusId = pm.variables.get(\"vnCampusId\");",
									"var vnGuestId = pm.variables.get(\"vnGuestId\");",
									"",
									"for (var i=0; i < data.response.length; i++) {",
									"    if (data.response[i].name.includes (\"edge-1\")) {",
									"        postman.setEnvironmentVariable(\"edge1DevinfoId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"edge1InstanceId\", data.response[i].instanceId);",
									"        postman.setEnvironmentVariable(\"edge1AuthEntityId\", data.response[i].authEntityId);",
									"        postman.setEnvironmentVariable(\"edge1DisplayName\", data.response[i].displayName);",
									"        postman.setEnvironmentVariable(\"edge1AuthEntityClass\", data.response[i].authEntityClass);",
									"        postman.setEnvironmentVariable(\"edge1InstanceTenantId\", data.response[i].instanceTenantId);",
									"        postman.setEnvironmentVariable(\"edge1CreateTime\", data.response[i].createTime);",
									"        postman.setEnvironmentVariable(\"edge1LastUpdateTime\", data.response[i].lastUpdateTime);",
									"        postman.setEnvironmentVariable(\"edge1Name\", data.response[i].name);",
									"        postman.setEnvironmentVariable(\"edge1Namespace\", data.response[i].namespace);",
									"        postman.setEnvironmentVariable(\"edge1ProvisioningState\", data.response[i].provisioningState);",
									"        postman.setEnvironmentVariable(\"edge1ResourceVersion\", data.response[i].resourceVersion);",
									"        postman.setEnvironmentVariable(\"edge1Type\", data.response[i].type);",
									"        postman.setEnvironmentVariable(\"edge1NetworkDeviceId\", data.response[i].networkDeviceId);",
									"        postman.setEnvironmentVariable(\"edge1SiteId\", data.response[i].siteId);",
									"        strNetworkWideSettings = JSON.stringify(data.response[i].networkWideSettings);",
									"        postman.setEnvironmentVariable(\"edge1NetworkWideSettings\",strNetworkWideSettings );",
									"    }",
									"        if (data.response[i].name.includes (\"cp-border-1\")) {",
									"        postman.setEnvironmentVariable(\"cpborder1DevinfoId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"cpborder1InstanceId\", data.response[i].instanceId);",
									"        postman.setEnvironmentVariable(\"cpborder1AuthEntityId\", data.response[i].authEntityId);",
									"        postman.setEnvironmentVariable(\"cpborder1DisplayName\", data.response[i].displayName);",
									"        postman.setEnvironmentVariable(\"cpborder1AuthEntityClass\", data.response[i].authEntityClass);",
									"        postman.setEnvironmentVariable(\"cpborder1InstanceTenantId\", data.response[i].instanceTenantId);",
									"        postman.setEnvironmentVariable(\"cpborder1CreateTime\", data.response[i].createTime);",
									"        postman.setEnvironmentVariable(\"cpborder1LastUpdateTime\", data.response[i].lastUpdateTime);",
									"        postman.setEnvironmentVariable(\"cpborder1Name\", data.response[i].name);",
									"        postman.setEnvironmentVariable(\"cpborder1Namespace\", data.response[i].namespace);",
									"        postman.setEnvironmentVariable(\"cpborder1ProvisioningState\", data.response[i].provisioningState);",
									"        postman.setEnvironmentVariable(\"cpborder1ResourceVersion\", data.response[i].resourceVersion);",
									"        postman.setEnvironmentVariable(\"cpborder1Type\", data.response[i].type);",
									"        postman.setEnvironmentVariable(\"cpborder1NetworkDeviceId\", data.response[i].networkDeviceId);",
									"        postman.setEnvironmentVariable(\"cpborder1SiteId\", data.response[i].siteId);",
									"        strNetworkWideSettings = JSON.stringify(data.response[i].networkWideSettings);",
									"        postman.setEnvironmentVariable(\"cpborder1NetworkWideSettings\",strNetworkWideSettings );",
									"        postman.setEnvironmentVariable(\"cpborder1DevSettingsId\", data.response[i].deviceSettings.id);",
									"        postman.setEnvironmentVariable(\"cpborder1DevSettingsInstanceId\", data.response[i].deviceSettings.instanceId);",
									"        postman.setEnvironmentVariable(\"cpborder1DevSettingsInstanceVersion\", data.response[i].deviceSettings.instanceVersion);",
									"        postman.setEnvironmentVariable(\"extConnBorder1Int\", data.response[i].deviceSettings.extConnectivitySettings[0].id);",
									"        postman.setEnvironmentVariable(\"extConnBorder1IntInstanceId\", data.response[i].deviceSettings.extConnectivitySettings[0].instanceId);",
									"        postman.setEnvironmentVariable(\"extConnBorder1IntInstanceVersion\", data.response[i].deviceSettings.extConnectivitySettings[0].instanceVersion);",
									"        for (var x=0; x < data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff.length; x++) {",
									"            if (data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].virtualNetwork.idRef == vnInfraId) {",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3InfraId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].id);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3InfraInstanceId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].instanceId);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3InfraInstanceVersion\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].instanceVersion);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3InfraLocalIp\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].localIpAddress);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3InfraRemoteIp\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].remoteIpAddress);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3InfraVlanId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].vlanId);",
									"            }",
									"            if (data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].virtualNetwork.idRef == vnCampusId) {",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3CampusId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].id);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3CampusInstanceId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].instanceId);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3CampusInstanceVersion\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].instanceVersion);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3CampusLocalIp\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].localIpAddress);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3CampusRemoteIp\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].remoteIpAddress);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3CampusVlanId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].vlanId);",
									"                }",
									"            if (data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].virtualNetwork.idRef == vnGuestId) {",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3GuestId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].id);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3GuestInstanceId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].instanceId);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3GuestInstanceVersion\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].instanceVersion);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3GuestLocalIp\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].localIpAddress);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3GuestRemoteIp\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].remoteIpAddress);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3GuestVlanId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].vlanId);",
									"                }",
									"            }",
									"        }",
									"        if (data.response[i].name.includes (\"cp-border-2\")) {",
									"        postman.setEnvironmentVariable(\"cpborder2DevinfoId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"cpborder2InstanceId\", data.response[i].instanceId);",
									"        postman.setEnvironmentVariable(\"cpborder2AuthEntityId\", data.response[i].authEntityId);",
									"        postman.setEnvironmentVariable(\"cpborder2DisplayName\", data.response[i].displayName);",
									"        postman.setEnvironmentVariable(\"cpborder2AuthEntityClass\", data.response[i].authEntityClass);",
									"        postman.setEnvironmentVariable(\"cpborder2InstanceTenantId\", data.response[i].instanceTenantId);",
									"        postman.setEnvironmentVariable(\"cpborder2CreateTime\", data.response[i].createTime);",
									"        postman.setEnvironmentVariable(\"cpborder2LastUpdateTime\", data.response[i].lastUpdateTime);",
									"        postman.setEnvironmentVariable(\"cpborder2Name\", data.response[i].name);",
									"        postman.setEnvironmentVariable(\"cpborder2Namespace\", data.response[i].namespace);",
									"        postman.setEnvironmentVariable(\"cpborder2ProvisioningState\", data.response[i].provisioningState);",
									"        postman.setEnvironmentVariable(\"cpborder2ResourceVersion\", data.response[i].resourceVersion);",
									"        postman.setEnvironmentVariable(\"cpborder2Type\", data.response[i].type);",
									"        postman.setEnvironmentVariable(\"cpborder2NetworkDeviceId\", data.response[i].networkDeviceId);",
									"        postman.setEnvironmentVariable(\"cpborder2SiteId\", data.response[i].siteId);",
									"        strNetworkWideSettings = JSON.stringify(data.response[i].networkWideSettings);",
									"        postman.setEnvironmentVariable(\"cpborder2NetworkWideSettings\",strNetworkWideSettings );",
									"        postman.setEnvironmentVariable(\"cpborder2DevSettingsId\", data.response[i].deviceSettings.id);",
									"        postman.setEnvironmentVariable(\"cpborder2DevSettingsInstanceId\", data.response[i].deviceSettings.instanceId);",
									"        postman.setEnvironmentVariable(\"cpborder2DevSettingsInstanceVersion\", data.response[i].deviceSettings.instanceVersion);",
									"        postman.setEnvironmentVariable(\"extConnBorder2Int\", data.response[i].deviceSettings.extConnectivitySettings[0].id);",
									"        postman.setEnvironmentVariable(\"extConnBorder2IntInstanceId\", data.response[i].deviceSettings.extConnectivitySettings[0].instanceId);",
									"        postman.setEnvironmentVariable(\"extConnBorder2IntInstanceVersion\", data.response[i].deviceSettings.extConnectivitySettings[0].instanceVersion);",
									"        for (var x=0; x < data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff.length; x++) {",
									"\t\t if (data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].virtualNetwork.idRef == vnInfraId) {",
									"\t\t\t\t postman.setEnvironmentVariable(\"extConnBorder2L3InfraId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].id);",
									"\t\t\t\t postman.setEnvironmentVariable(\"extConnBorder2L3InfraInstanceId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].instanceId);",
									"\t\t\t\t postman.setEnvironmentVariable(\"extConnBorder2L3InfraInstanceVersion\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].instanceVersion);",
									"\t\t\t\t postman.setEnvironmentVariable(\"extConnBorder2L3InfraLocalIp\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].localIpAddress);",
									"\t\t\t\t postman.setEnvironmentVariable(\"extConnBorder2L3InfraRemoteIp\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].remoteIpAddress);",
									"\t\t\t\t postman.setEnvironmentVariable(\"extConnBorder2L3InfraVlanId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].vlanId);",
									"\t\t    }",
									"            if (data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].virtualNetwork.idRef == vnCampusId) {",
									"                postman.setEnvironmentVariable(\"extConnBorder2L3CampusId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].id);",
									"                postman.setEnvironmentVariable(\"extConnBorder2L3CampusInstanceId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].instanceId);",
									"                postman.setEnvironmentVariable(\"extConnBorder2L3CampusInstanceVersion\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].instanceVersion);",
									"                postman.setEnvironmentVariable(\"extConnBorder2L3CampusLocalIp\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].localIpAddress);",
									"                postman.setEnvironmentVariable(\"extConnBorder2L3CampusRemoteIp\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].remoteIpAddress);",
									"                postman.setEnvironmentVariable(\"extConnBorder2L3CampusVlanId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].vlanId);",
									"                }",
									"            if (data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].virtualNetwork.idRef == vnGuestId) {",
									"                postman.setEnvironmentVariable(\"extConnBorder2L3GuestId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].id);",
									"                postman.setEnvironmentVariable(\"extConnBorder2L3GuestInstanceId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].instanceId);",
									"                postman.setEnvironmentVariable(\"extConnBorder2L3GuestInstanceVersion\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].instanceVersion);",
									"                postman.setEnvironmentVariable(\"extConnBorder2L3GuestLocalIp\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].localIpAddress);",
									"                postman.setEnvironmentVariable(\"extConnBorder2L3GuestRemoteIp\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].remoteIpAddress);",
									"                postman.setEnvironmentVariable(\"extConnBorder2L3GuestVlanId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].vlanId);",
									"                }",
									"\t\t }",
									"    }",
									"}",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/data/customer-facing-service/DeviceInfo",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"data",
								"customer-facing-service",
								"DeviceInfo"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Border2 + Guest + 1/0/2 to Fabric",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d247b1d4-7550-43b5-b4cf-c1e8e7f92111",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"taskId\", data.response.taskId);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n\t{\n\t\t\"id\":\"{{fabSiteId}}\",\n\t\t\"type\":\"ConnectivityDomain\",\n\t\t\"name\":\"Global/San_Jose_US_West\",\n\t\t\"domainType\":\"FABRIC_SITE\",\n\t\t\"isDefault\":false,\n\t\t\"virtualNetwork\":{{fabVirtualNetworks}},\n\t\t\"deviceInfo\":\n\t\t[\n\t\t\t{\n\t\t\t\t\"cfsChangeInfo\":[],\n\t\t\t\t\"configs\":[],\t\n\t\t\t\t\"createTime\":{{cpborder2CreateTime}},\n\t\t\t\t\"deployed\":false,\"deviceInterfaceInfo\":[],\n\t\t\t\t\"displayName\":\"{{cpborder2DisplayName}}\",\n\t\t\t\t\"id\":\"{{cpborder2DevinfoId}}\",\n\t\t\t\t\"instanceId\":{{cpborder2InstanceId}},\n\t\t\t\t\"instanceVersion\":{{cpborder2ResourceVersion}},\n\t\t\t\t\"isStale\":false,\n\t\t\t\t\"lastUpdateTime\":{{cpborder2LastUpdateTime}},\n\t\t\t\t\"name\":\"{{devCpBorder2FullName}}\",\n\t\t\t\t\"namespace\":\"{{cpborder2Namespace}}\",\n\t\t\t\t\"networkDeviceId\":\"{{cpborder2NetworkDeviceId}}\",\n\t \t\t\t\"networkWideSettings\":{{cpborder2NetworkWideSettings}},\n \t\t\t\t\"provisioningState\":\"DEFINED\",\n\t\t\t\t\"roles\":[\"BORDERNODE\",\"MAPSERVER\"],\n\t\t\t\t\"siteId\":\"{{dsgnSjc13MdfId}}\",\n\t\t\t\t\"transitNetworks\":[{\"idRef\":\"{{fabTransitId}}\"}],\n\t\t\t\t\"type\":\"DeviceInfo\",\n\t\t\t\t\"wlan\":[],\n\t\t\t\t\"otherDevice\":[],\n\t\t\t\t\"deviceSettings\":\n\t\t\t\t{\n\t\t\t\t\t\"id\":\"{{cpborder2DevSettingsId}}\",\n\t\t\t\t\t\"instanceId\":{{cpborder2DevSettingsInstanceId}},\n\t\t\t\t\t\"displayName\":\"0\",\n\t\t\t\t\t\"instanceVersion\":{{cpborder2DevSettingsInstanceVersion}},\n\t\t\t\t\t\"connectedTo\":[\"INTERNET\"],\n\t\t\t\t\t\"cpu\":0,\n\t\t\t\t\t\"dhcpEnabled\":false,\n\t\t\t\t\t\"externalConnectivityIpPool\":\"{{dsgnTransitPoolId}}\",\n\t\t\t\t\t\"externalDomainRoutingProtocol\":\"BGP\",\n\t\t\t\t\t\"internalDomainProtocolNumber\":\"65534\",\n\t\t\t\t\t\"memory\":0,\n\t\t\t\t\t\"nodeType\":[\"EXTERNAL\"],\n\t\t\t\t\t\"storage\":0,\n\t\t\t\t\t\"extConnectivitySettings\":\n\t\t\t\t\t[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"externalDomainProtocolNumber\":\"65535\",\n\t\t\t\t\t\t\t\"interfaceUuid\":\"GigabitEthernet1/0/2\",\n\t\t\t\t\t\t\t\"policyPropagationEnabled\":false,\n\t\t\n\t\t\t\t\t\t\t\"l2Handoff\":[],\n\t\t\t\t\t\t\t\"l3Handoff\":\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t{\"virtualNetwork\":{\"idRef\":\"{{vnInfraId}}\"}},\n\t\t\t\t\t\t\t\t{\"virtualNetwork\":{\"idRef\":\"{{vnCampusId}}\"}},\n\t\t\t\t\t\t\t\t{\"virtualNetwork\":{\"idRef\":\"{{vnGuestId}}\"}}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\t{\n\t\t\t\t\"cfsChangeInfo\":[],\n\t\t\t\t\"configs\":[],\n\t\t\t\t\"createTime\":{{edge1CreateTime}},\n\t\t\t\t\"deployed\":false,\n\t\t\t\t\"deviceInterfaceInfo\":[],\n\t\t\t\t\"displayName\":\"{{edge1DisplayName}}\",\n\t\t\t\t\"id\":\"{{edge1DevinfoId}}\",\n\t\t\t\t\"instanceId\":{{edge1InstanceId}},\n\t\t\t\t\"instanceVersion\":{{edge1ResourceVersion}},\n\t\t\t\t\"isStale\":false,\n\t\t\t\t\"lastUpdateTime\":{{edge1LastUpdateTime}},\n\t\t\t\t\"name\":\"{{edge1Name}}\",\n\t\t\t\t\"namespace\":\"{{edge1Namespace}}\",\n\t\t\t\t\"networkDeviceId\":\"{{edge1NetworkDeviceId}}\",\n\t\t\t\t\"networkWideSettings\":{{edge1NetworkWideSettings}},\n\t\t\t\t\"provisioningState\":\"DEFINED\",\n\t\t\t\t\"roles\":[\"EDGENODE\"],\n\t\t\t\t\"siteId\":\"{{dsgnSjc13FirstFloorId}}\",\n\t\t\t\t\"transitNetworks\":[],\n\t\t\t\t\"type\":\"DeviceInfo\",\n\t\t\t\t\"wlan\":[],\n\t\t\t\t\"otherDevice\":[]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"cfsChangeInfo\":[],\n\t\t\t\t\"configs\":[],\n\t\t\t\t\"createTime\":{{cpborder1CreateTime}},\n\t\t\t\t\"deployed\":false,\n\t\t\t\t\"deviceInterfaceInfo\":[],\n\t\t\t\t\"displayName\":\"{{cpborder1DisplayName}}\",\n\t\t\t\t\"id\":\"{{cpborder1DevinfoId}}\",\n\t\t\t\t\"instanceId\":{{cpborder1InstanceId}},\n\t\t\t\t\"instanceVersion\":{{cpborder1ResourceVersion}},\n\t\t\t\t\"isStale\":false,\n\t\t\t\t\"lastUpdateTime\":{{cpborder1LastUpdateTime}},\n\t\t\t\t\"name\":\"{{cpborder1Name}}\",\n\t\t\t\t\"namespace\":\"{{cpborder1Namespace}}\",\n\t\t\t\t\"networkDeviceId\":\"{{cpborder1NetworkDeviceId}}\",\n\t\t\t\t\"networkWideSettings\":{{cpborder1NetworkWideSettings}},\n\t\t\t\t\"provisioningState\":\"DEFINED\",\n\t\t\t\t\"roles\":[\"BORDERNODE\",\"MAPSERVER\"],\n\t\t\t\t\"siteId\":\"{{dsgnSjc13MdfId}}\",\n\t\t\t\t\"transitNetworks\":[{\"idRef\":\"{{fabTransitId}}\"}],\n\t\t\t\t\"type\":\"DeviceInfo\",\n\t\t\t\t\"wlan\":[],\n\t\t\t\t\"otherDevice\":[],\n\t\t\t\t\"deviceSettings\":\n\t\t\t\t{\n\t\t\t\t\t\"id\":\"{{cpborder1DevSettingsId}}\",\n\t\t\t\t\t\"instanceId\":{{cpborder1DevSettingsInstanceId}},\n\t\t\t\t\t\"displayName\":\"0\",\n\t\t\t\t\t\"instanceVersion\":{{cpborder1DevSettingsInstanceVersion}},\n\t\t\t\t\t\"connectedTo\":[\"INTERNET\"],\n\t\t\t\t\t\"cpu\":0,\n\t\t\t\t\t\"dhcpEnabled\":false,\n\t\t\t\t\t\"externalConnectivityIpPool\":\"{{dsgnTransitPoolId}}\",\n\t\t\t\t\t\"externalDomainRoutingProtocol\":\"BGP\",\n\t\t\t\t\t\"internalDomainProtocolNumber\":\"65534\",\n\t\t\t\t\t\"memory\":0,\n\t\t\t\t\t\"nodeType\":[\"EXTERNAL\"],\n\t\t\t\t\t\"storage\":0,\n\t\t\t\t\t\"extConnectivitySettings\":\n\t\t\t\t\t[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\":\"{{extConnBorder1Int}}\",\n\t\t\t\t\t\t\t\"instanceId\":{{extConnBorder1IntInstanceId}},\n\t\t\t\t\t\t\t\"displayName\":\"0\",\n\t\t\t\t\t\t\t\"instanceVersion\":{{extConnBorder1IntInstanceVersion}},\n\t\t\t\t\t\t\t\"externalDomainProtocolNumber\":\"65535\",\n\t\t\t\t\t\t\t\"interfaceUuid\":\"GigabitEthernet1/0/2\",\n\t\t\t\t\t\t\t\"policyPropagationEnabled\":false,\n\t\t\t\t\t\t\t\"policySgtTag\":0,\n\t\t\t\t\t\t\t\"l2Handoff\":[],\n\t\t\t\t\t\t\t\"l3Handoff\":\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"id\":\"{{extConnBorder1L3InfraId}}\",\n\t\t\t\t\t\t\t\t\t\"instanceId\":{{extConnBorder1L3InfraInstanceId}},\n\t\t\t\t\t\t\t\t\t\"displayName\":\"0\",\n\t\t\t\t\t\t\t\t\t\"instanceVersion\":{{extConnBorder1L3InfraInstanceVersion}},\n\t\t\t\t\t\t\t\t\t\"localIpAddress\":\"{{extConnBorder1L3InfraLocalIp}}\",\n\t\t\t\t\t\t\t\t\t\"remoteIpAddress\":\"{{extConnBorder1L3InfraRemoteIp}}\",\n\t\t\t\t\t\t\t\t\t\"vlanId\":{{extConnBorder1L3InfraVlanId}},\n\t\t\t\t\t\t\t\t\t\"virtualNetwork\":\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"idRef\":\"{{vnInfraId}}\"\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"id\":\"{{extConnBorder1L3CampusId}}\",\n\t\t\t\t\t\t\t\t\t\"instanceId\":{{extConnBorder1L3CampusInstanceId}},\n\t\t\t\t\t\t\t\t\t\"displayName\":\"0\",\n\t\t\t\t\t\t\t\t\t\"instanceVersion\":{{extConnBorder1L3CampusInstanceVersion}},\n\t\t\t\t\t\t\t\t\t\"localIpAddress\":\"{{extConnBorder1L3CampusLocalIp}}\",\n\t\t\t\t\t\t\t\t\t\"remoteIpAddress\":\"{{extConnBorder1L3CampusRemoteIp}}\",\n\t\t\t\t\t\t\t\t\t\"vlanId\":{{extConnBorder1L3CampusVlanId}},\n\t\t\t\t\t\t\t\t\t\"virtualNetwork\":\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"idRef\":\"{{vnCampusId}}\"\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"id\":\"{{extConnBorder1L3GuestId}}\",\n\t\t\t\t\t\t\t\t\t\"instanceId\":{{extConnBorder1L3GuestInstanceId}},\n\t\t\t\t\t\t\t\t\t\"displayName\":\"0\",\n\t\t\t\t\t\t\t\t\t\"instanceVersion\":{{extConnBorder1L3GuestInstanceVersion}},\n\t\t\t\t\t\t\t\t\t\"localIpAddress\":\"{{extConnBorder1L3GuestLocalIp}}\",\n\t\t\t\t\t\t\t\t\t\"remoteIpAddress\":\"{{extConnBorder1L3GuestRemoteIp}}\",\n\t\t\t\t\t\t\t\t\t\"vlanId\":{{extConnBorder1L3GuestVlanId}},\n\t\t\t\t\t\t\t\t\t\"virtualNetwork\":\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"idRef\":\"{{vnGuestId}}\"\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t\"multicastInfo\":[],\n\t\t\"enableMonitoring\":true,\n\t\t\"resourceVersion\":{{fabSiteResourceVersion}},\n\t\t\"siteId\":\"{{dsgnAreaTopId}}\",\n\t\t\"siteSpecificDomain\":[],\n\t\t\"wirelessMulticastFeature\":false,\n\t\t\"isNativeMulticastEnabled\":false,\n\t\t\"authenticationProfileId\":\"{{authClosedId}}\"\n\t\t\t\t\t\t\t\t\n\t}\n]\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/data/customer-facing-service/ConnectivityDomain",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"data",
								"customer-facing-service",
								"ConnectivityDomain"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Status - Pause 1 Min",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"var latestRequest = pm.variables.get(\"latestRequest\");",
									"var service = data.response.serviceType;",
									"var isError = data.response.isError.toString();",
									"",
									"",
									"if (isError == \"false\") {",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");",
									"}",
									"else {",
									"    console.log(\"........ \" + latestRequest + \" generated an ERROR !!!!!\");",
									"    console.log(\"........ Service type is \" + service);",
									"    console.log(\"........ Failure reason is \" + data.response.failureReason);",
									"    ",
									"}",
									"",
									"",
									"",
									"console.log(\"Sleeping for one min.\");",
									"setTimeout(function(){}, 60000);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/task/{{taskId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"task",
								"{{taskId}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "8.1 Deploy Guest- Border 1 Switch Config",
			"item": [
				{
					"name": "Create Template",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"taskId\", data.response.taskId);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Guest_Border1\",\n    \"description\": \"Configuration for Border 1 Guest\",\n    \"tags\": [],\n    \"deviceTypes\": [\n        {\n            \"productFamily\": \"Switches and Hubs\"\n        }\n    ],\n    \"softwareType\": \"IOS-XE\",\n    \"softwareVariant\": \"XE\",\n    \"templateContent\": \"int vlan 3005\\nbfd interval 300 min_rx 300 multiplier 3\\nno bfd echo\\nint vlan 42\\nvrf forward Guest\\nip address 100.126.0.137 255.255.255.252\\nbfd interval 300 min_rx 300 multiplier 3\\ndescription L3 Border 2 Border iBGP link in Guest VN\\nrouter bgp 65534\\naddress-family ipv4 vrf Guest\\nneighbor 100.126.0.138 remote-as 65534\\nneighbor 100.126.0.138 fall-over bfd\\nneighbor 100.126.0.138 activate\\nneighbor 100.126.1.18 fall-over bfd\\n\",\n    \n    \"rollbackTemplateContent\": \"\",\n    \"templateParams\": [],\n    \"composite\": false,\n    \"projectName\": \"POV_Automation\",\n    \"projectId\": \"{{prjPovAutomation}}\"\n}"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/template-programmer/project/{{prjPovAutomation}}/template",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"template-programmer",
								"project",
								"{{prjPovAutomation}}",
								"template"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"var latestRequest = pm.variables.get(\"latestRequest\");\r",
									"var service = data.response.serviceType;\r",
									"var isError = data.response.isError.toString();\r",
									"\r",
									"\r",
									"if (isError == \"false\") {\r",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");\r",
									"}\r",
									"else {\r",
									"    console.log(\"........ \" + latestRequest + \" generated an ERROR !!!!!\");\r",
									"    console.log(\"........ Service type is \" + service);\r",
									"    console.log(\"........ Failure reason is \" + data.response.failureReason);\r",
									"    \r",
									"}\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/task/{{taskId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"task",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Template Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var data = JSON.parse(responseBody);",
									"",
									"for (var i=0; i < data.length; i++) {",
									"    if (data[i].name == \"POV_Automation\") {",
									"        for (var n=0; n < data[i].templates.length; n++) {",
									"            if(data[i].templates[n].name == \"Guest_Border1\") {",
									"                postman.setEnvironmentVariable(\"templateGuestBorder1Id\",data[i].templates[n].id);",
									"            }",
									"        }",
									"    }",
									"}",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/template-programmer/project",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"template-programmer",
								"project"
							]
						}
					},
					"response": []
				},
				{
					"name": "Commit Template",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"taskId\", data.response.taskId);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"comments\": \"First Commit from API\",\n    \"templateId\": \"{{templateGuestBorder1Id}}\"\n}"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/template-programmer/template/version",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"template-programmer",
								"template",
								"version"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"var latestRequest = pm.variables.get(\"latestRequest\");\r",
									"var service = data.response.serviceType;\r",
									"var isError = data.response.isError.toString();\r",
									"\r",
									"\r",
									"if (isError == \"false\") {\r",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");\r",
									"}\r",
									"else {\r",
									"    console.log(\"........ \" + latestRequest + \" generated an ERROR !!!!!\");\r",
									"    console.log(\"........ Service type is \" + service);\r",
									"    console.log(\"........ Failure reason is \" + data.response.failureReason);\r",
									"    \r",
									"}\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/task/{{taskId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"task",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Template Latest Version",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var data = JSON.parse(responseBody);",
									"var versionsInfo = data[0].versionsInfo;",
									"var latestVersion = 0;",
									"",
									"for (var i=0; i < versionsInfo.length; i++) {",
									"    if (versionsInfo[i].versionsTime !== 0) {",
									"        if (versionsInfo[i].version > latestVersion) {",
									"            latestVersion = versionsInfo[i].version;",
									"            postman.setEnvironmentVariable(\"templateGuestBorder1LatestVersion\", versionsInfo[i].version);",
									"            postman.setEnvironmentVariable(\"templateGuestBorder1LatestVersionId\", versionsInfo[i].id);",
									"        }",
									"    }",
									"}",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/template-programmer/template/version/{{templateGuestBorder1Id}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"template-programmer",
								"template",
								"version",
								"{{templateGuestBorder1Id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Deploy Template",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"forcePushTemplate\": true,\n\n    \"targetInfo\": [\n        {\n            \"id\": \"100.124.0.1\",\n            \"type\": \"MANAGED_DEVICE_IP\",\n            \"params\": {}\n        }\n    ],\n    \"templateId\": \"{{templateGuestBorder1LatestVersionId}}\"\n}"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/template-programmer/template/deploy",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"template-programmer",
								"template",
								"deploy"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "8.2 Deploy Guest- Border 2 Switch Config",
			"item": [
				{
					"name": "Create Template",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"taskId\", data.response.taskId);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Guest_Border2\",\n    \"description\": \"Configuration for Border 2 Guest\",\n    \"tags\": [],\n    \"deviceTypes\": [\n        {\n            \"productFamily\": \"Switches and Hubs\"\n        }\n    ],\n    \"softwareType\": \"IOS-XE\",\n    \"softwareVariant\": \"XE\",\n    \"templateContent\": \"int vlan 3006\\nbfd interval 300 min_rx 300 multiplier 3\\nno bfd echo\\nint vlan 42\\nvrf forward Guest\\nip address 100.126.0.138 255.255.255.252\\nbfd interval 300 min_rx 300 multiplier 3\\ndescription L3 Border 2 Border iBGP link in Guest VN\\nrouter bgp 65534\\naddress-family ipv4 vrf Guest\\nneighbor 100.126.0.137 remote-as 65534\\nneighbor 100.126.0.137 fall-over bfd\\nneighbor 100.126.0.137 activate\\nneighbor 100.126.1.22 fall-over bfd\\n\",\n    \n    \"rollbackTemplateContent\": \"\",\n    \"templateParams\": [],\n    \"composite\": false,\n    \"projectName\": \"POV_Automation\",\n    \"projectId\": \"{{prjPovAutomation}}\"\n}"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/template-programmer/project/{{prjPovAutomation}}/template",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"template-programmer",
								"project",
								"{{prjPovAutomation}}",
								"template"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"var latestRequest = pm.variables.get(\"latestRequest\");\r",
									"var service = data.response.serviceType;\r",
									"var isError = data.response.isError.toString();\r",
									"\r",
									"\r",
									"if (isError == \"false\") {\r",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");\r",
									"}\r",
									"else {\r",
									"    console.log(\"........ \" + latestRequest + \" generated an ERROR !!!!!\");\r",
									"    console.log(\"........ Service type is \" + service);\r",
									"    console.log(\"........ Failure reason is \" + data.response.failureReason);\r",
									"    \r",
									"}\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/task/{{taskId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"task",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Template Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var data = JSON.parse(responseBody);",
									"",
									"for (var i=0; i < data.length; i++) {",
									"    if (data[i].name == \"POV_Automation\") {",
									"        for (var n=0; n < data[i].templates.length; n++) {",
									"            if(data[i].templates[n].name == \"Guest_Border2\") {",
									"                postman.setEnvironmentVariable(\"templateGuestBorder2Id\",data[i].templates[n].id);",
									"            }",
									"        }",
									"    }",
									"}",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/template-programmer/project",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"template-programmer",
								"project"
							]
						}
					},
					"response": []
				},
				{
					"name": "Commit Template",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"taskId\", data.response.taskId);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"comments\": \"First Commit from API\",\n    \"templateId\": \"{{templateGuestBorder2Id}}\"\n}"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/template-programmer/template/version",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"template-programmer",
								"template",
								"version"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"var latestRequest = pm.variables.get(\"latestRequest\");\r",
									"var service = data.response.serviceType;\r",
									"var isError = data.response.isError.toString();\r",
									"\r",
									"\r",
									"if (isError == \"false\") {\r",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");\r",
									"}\r",
									"else {\r",
									"    console.log(\"........ \" + latestRequest + \" generated an ERROR !!!!!\");\r",
									"    console.log(\"........ Service type is \" + service);\r",
									"    console.log(\"........ Failure reason is \" + data.response.failureReason);\r",
									"    \r",
									"}\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/task/{{taskId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"task",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Template Latest Version",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var data = JSON.parse(responseBody);",
									"var versionsInfo = data[0].versionsInfo;",
									"var latestVersion = 0;",
									"",
									"for (var i=0; i < versionsInfo.length; i++) {",
									"    if (versionsInfo[i].versionsTime !== 0) {",
									"        if (versionsInfo[i].version > latestVersion) {",
									"            latestVersion = versionsInfo[i].version;",
									"            postman.setEnvironmentVariable(\"templateGuestBorder2LatestVersion\", versionsInfo[i].version);",
									"            postman.setEnvironmentVariable(\"templateGuestBorder2LatestVersionId\", versionsInfo[i].id);",
									"        }",
									"    }",
									"}",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/template-programmer/template/version/{{templateGuestBorder2Id}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"template-programmer",
								"template",
								"version",
								"{{templateGuestBorder2Id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Deploy Template",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"forcePushTemplate\": true,\n\n    \"targetInfo\": [\n        {\n            \"id\": \"100.124.0.2\",\n            \"type\": \"MANAGED_DEVICE_IP\",\n            \"params\": {}\n        }\n    ],\n    \"templateId\": \"{{templateGuestBorder2LatestVersionId}}\"\n}"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/template-programmer/template/deploy",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"template-programmer",
								"template",
								"deploy"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "8.3 Block Guest to Guest Traffic",
			"item": [
				{
					"name": "Get Deny Contract Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var data = JSON.parse(responseBody);",
									"",
									"for (var i=0; i < data.response.length; i++) {",
									"     if (data.response[i].name == \"deny\") {",
									"        postman.setEnvironmentVariable(\"contractDenyId\", data.response[i].id);",
									"     }",
									"",
									"}",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/data/customer-facing-service/contract/access/",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"data",
								"customer-facing-service",
								"contract",
								"access",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Apply Deny Policy from Guest to Guest",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"taskId\", data.response.taskId);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"name\": \"No_Guest_2_Guest\",\n        \"description\": \"Block Traffic Between All Guest Users\",\n        \"priority\": 65535,\n        \"contract\": {\n            \"idRef\": \"{{contractDenyId}}\"\n        },\n        \"producer\": {\n            \"scalableGroup\": [\n                {\n                    \"idRef\": \"{{sgtGuestId}}\"\n                }\n            ]\n        },\n        \"consumer\": {\n            \"scalableGroup\": [\n                {\n                    \"idRef\": \"{{sgtGuestId}}\"\n                }\n            ]\n        },\n        \"isEnabled\": true,\n        \"policyScope\": \"2827e5bf-d291-3d54-aeda-3e21b29a9d5d\"\n    }\n]"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/data/customer-facing-service/policy/access/",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"data",
								"customer-facing-service",
								"policy",
								"access",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Status - Pause 1 Min",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"var latestRequest = pm.variables.get(\"latestRequest\");",
									"var service = data.response.serviceType;",
									"var isError = data.response.isError.toString();",
									"",
									"",
									"if (isError == \"false\") {",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");",
									"}",
									"else {",
									"    console.log(\"........ \" + latestRequest + \" generated an ERROR !!!!!\");",
									"    console.log(\"........ Service type is \" + service);",
									"    console.log(\"........ Failure reason is \" + data.response.failureReason);",
									"    ",
									"}",
									"",
									"",
									"",
									"console.log(\"Sleeping for one min.\");",
									"setTimeout(function(){}, 60000);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/task/{{taskId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"task",
								"{{taskId}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "16. Create Restricted",
			"item": [
				{
					"name": "Create Restricted Pool",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"taskId\", data.response.taskId);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"context\":\n\t[{\n\t\t\"contextKey\":\"siteId\",\n\t\t\"contextValue\":\"{{dsgnAreaTopId}}\"\n\t\t\n\t}],\n\t\t\"shared\":true,\n\t\t\"ipPoolOwner\":\"DNAC\",\n\t\t\"parentUuid\":\"{{dsgnGlobalPool1Id}}\",\n\t\t\"ipPoolName\":\"SJC-Restricted-Users\",\n\t\t\"overlapping\":false,\n\t\t\"gateways\":[\"100.110.0.1\"],\n\t\t\"dnsServerIps\":[\"208.67.220.220\",\"208.67.222.222\"],\n\t\t\"dhcpServerIps\":[\"100.127.0.1\",\"100.64.0.100\"],\n\t\t\"ipPoolCidr\":\"100.110.0.0/16\"\n\t\n}"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/ippool/subpool",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"ippool",
								"subpool"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"var latestRequest = pm.variables.get(\"latestRequest\");\r",
									"var service = data.response.serviceType;\r",
									"var isError = data.response.isError.toString();\r",
									"\r",
									"\r",
									"if (isError == \"false\") {\r",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");\r",
									"}\r",
									"else {\r",
									"    console.log(\"........ \" + latestRequest + \" generated an ERROR !!!!!\");\r",
									"    console.log(\"........ Service type is \" + service);\r",
									"    console.log(\"........ Failure reason is \" + data.response.failureReason);\r",
									"    \r",
									"}\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/task/{{taskId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"task",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get SJC-Restricted Reservation ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "186a9a46-305e-4a21-abe6-6b20907ea0ab",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var data = JSON.parse(responseBody);",
									"",
									"for (var i=0; i < data.response.length; i++) {",
									"    if (data.response[i].ipPoolName == \"SJC-Restricted-Users\") {",
									"        postman.setEnvironmentVariable(\"dsgnRestrictedPoolId\", data.response[i].id);",
									"    }",
									"}",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "x-auth-token",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/ippool?parentUuid={{dsgnGlobalPool1Id}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"ippool"
							],
							"query": [
								{
									"key": "parentUuid",
									"value": "{{dsgnGlobalPool1Id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update San Jose with SJC-Restricted Reservation ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"taskId\", data.response.taskId);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n\t{\n\t\t\"instanceType\":\"reference\",\n\t\t\"namespace\":\"global\",\n\t\t\"type\":\"reference.setting\",\n\t\t\"key\":\"ip.pool.generic.{{dsgnRestrictedPoolId}}\",\n\t\t\"value\":\n\t\t[\n\t\t\t{\"objReferences\":[\"{{dsgnRestrictedPoolId}}\"],\n\t\t\t\"type\":\"lan\",\"url\":\"\"\n\t\t\t\t\n\t\t\t}\n\t\t],\n\t\t\"groupUuid\":\"{{dsgnAreaTopId}}\"\n\t\t\n\t}\n]"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/commonsetting/global/{{dsgnAreaTopId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"commonsetting",
								"global",
								"{{dsgnAreaTopId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"var latestRequest = pm.variables.get(\"latestRequest\");\r",
									"var service = data.response.serviceType;\r",
									"var isError = data.response.isError.toString();\r",
									"\r",
									"\r",
									"if (isError == \"false\") {\r",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");\r",
									"}\r",
									"else {\r",
									"    console.log(\"........ \" + latestRequest + \" generated an ERROR !!!!!\");\r",
									"    console.log(\"........ Service type is \" + service);\r",
									"    console.log(\"........ Failure reason is \" + data.response.failureReason);\r",
									"    \r",
									"}\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/task/{{taskId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"task",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get PCI, Finance, Restricted SGT IDs",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "186a9a46-305e-4a21-abe6-6b20907ea0ab",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var data = JSON.parse(responseBody);",
									"",
									"for (var i=0; i < data.response.length; i++) {",
									"    if (data.response[i].name == \"PCI_user\") {",
									"        postman.setEnvironmentVariable(\"sgtPciUsersId\", data.response[i].id);",
									"    }",
									"        if (data.response[i].name == \"finance_user\") {",
									"        postman.setEnvironmentVariable(\"sgtFinanceUserId\", data.response[i].id);",
									"    }",
									"        if (data.response[i].name == \"RestrictedVN_QUARANTINED\") {",
									"        postman.setEnvironmentVariable(\"sgtRestrictVnQuaranId\", data.response[i].id);",
									"    }",
									"}",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "x-auth-token",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/data/customer-facing-service/scalablegroup/",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"data",
								"customer-facing-service",
								"scalablegroup",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Restricted VN with SGTs",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"taskId\", data.response.taskId);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n\t{\n\t\t\"name\":\"Restricted\",\n\t\t\"virtualNetworkContextType\":\"ISOLATED\",\n\t\t\"scalableGroup\":\n\t\t[\n\t\t\t{\"idRef\":\"{{sgtPciUsersId}}\"},\n\t\t\t{\"idRef\":\"{{sgtFinanceUserId}}\"},\n\t\t\t{\"idRef\":\"{{sgtRestrictVnQuaranId}}\"}\n\t\t]\n\t\t\n\t}\n]"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/data/customer-facing-service/virtualnetworkcontext/",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"data",
								"customer-facing-service",
								"virtualnetworkcontext",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Status - Pause 1 Min",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"var latestRequest = pm.variables.get(\"latestRequest\");",
									"var service = data.response.serviceType;",
									"var isError = data.response.isError.toString();",
									"",
									"",
									"if (isError == \"false\") {",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");",
									"}",
									"else {",
									"    console.log(\"........ \" + latestRequest + \" generated an ERROR !!!!!\");",
									"    console.log(\"........ Service type is \" + service);",
									"    console.log(\"........ Failure reason is \" + data.response.failureReason);",
									"    ",
									"}",
									"",
									"",
									"",
									"console.log(\"Sleeping for one min.\");",
									"setTimeout(function(){}, 60000);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/task/{{taskId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"task",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Virtual Network Context",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var data = JSON.parse(responseBody);",
									"",
									"for (var i=0; i < data.response.length; i++) {",
									"    if (data.response[i].name == \"DEFAULT_VN\") {",
									"        postman.setEnvironmentVariable(\"vncDefaultVnId\", data.response[i].id);",
									"    }",
									"",
									"    if (data.response[i].name == \"INFRA_VN\") {",
									"        postman.setEnvironmentVariable(\"vncInfraVnId\", data.response[i].id);",
									"    }",
									"    ",
									"    if (data.response[i].name == \"Campus\") {",
									"        postman.setEnvironmentVariable(\"vncCampusVnId\", data.response[i].id);",
									"    }",
									"",
									"    if (data.response[i].name == \"Guest\") {",
									"        postman.setEnvironmentVariable(\"vncGuestVnId\", data.response[i].id);",
									"    }",
									"    if (data.response[i].name == \"Restricted\") {",
									"        postman.setEnvironmentVariable(\"vncRestrictedVnId\", data.response[i].id);",
									"    }",
									"}",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/data/customer-facing-service/virtualnetworkcontext",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"data",
								"customer-facing-service",
								"virtualnetworkcontext"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Fabric Virtual Network",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var vncDefaultVnId = pm.variables.get(\"vncDefaultVnId\");",
									"var vncCampusId = pm.variables.get(\"vncCampusVnId\");",
									"var vncGuestId = pm.variables.get(\"vncGuestVnId\");",
									"var vncInfraVnId = pm.variables.get(\"vncInfraVnId\");",
									"var vncRestrictedVnId = pm.variables.get(\"vncRestrictedVnId\");",
									"",
									"console.log(vncDefaultVnId);",
									"",
									"var data = JSON.parse(responseBody);",
									"",
									"for (var i=0; i < data.response.length; i++) {",
									"    if (data.response[i].virtualNetworkContextId == vncDefaultVnId) {",
									"        postman.setEnvironmentVariable(\"vnDefaultVnId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnFullName\", data.response[i].name);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnNamespace\", data.response[i].namespace);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnAuthEntityId\", data.response[i].authEntityId);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnContextId\", data.response[i].virtualNetworkContextId);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnAuthEntityClass\", data.response[i].authEntityClass);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnL3Instance\", data.response[i].l3Instance);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnInstanceId\", data.response[i].instanceId);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnResourceVersion\", data.response[i].resourceVersion);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnInstanceVersion\", data.response[i].instanceVersion);",
									"    }",
									"    if (data.response[i].virtualNetworkContextId == vncCampusId) {",
									"        postman.setEnvironmentVariable(\"vnCampusId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"vnCampusFullName\", data.response[i].name);",
									"        postman.setEnvironmentVariable(\"vnCampusNamespace\", data.response[i].namespace);",
									"        postman.setEnvironmentVariable(\"vnCampusAuthEntityId\", data.response[i].authEntityId);",
									"        postman.setEnvironmentVariable(\"vnCampusContextId\", data.response[i].virtualNetworkContextId);",
									"        postman.setEnvironmentVariable(\"vnCampusAuthEntityClass\", data.response[i].authEntityClass);",
									"        postman.setEnvironmentVariable(\"vnCampusL3Instance\", data.response[i].l3Instance);",
									"        postman.setEnvironmentVariable(\"vnCampusInstanceId\", data.response[i].instanceId);",
									"        postman.setEnvironmentVariable(\"vnCampusResourceVersion\", data.response[i].resourceVersion);",
									"        postman.setEnvironmentVariable(\"vnCampusInstanceVersion\", data.response[i].instanceVersion);",
									"    }",
									"    if (data.response[i].virtualNetworkContextId == vncGuestId) {",
									"        postman.setEnvironmentVariable(\"vnGuestId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"vnGuestFullName\", data.response[i].name);",
									"        postman.setEnvironmentVariable(\"vnGuestNamespace\", data.response[i].namespace);",
									"        postman.setEnvironmentVariable(\"vnGuestAuthEntityId\", data.response[i].authEntityId);",
									"        postman.setEnvironmentVariable(\"vnGuestContextId\", data.response[i].virtualNetworkContextId);",
									"        postman.setEnvironmentVariable(\"vnGuestAuthEntityClass\", data.response[i].authEntityClass);",
									"        postman.setEnvironmentVariable(\"vnGuestL3Instance\", data.response[i].l3Instance);",
									"        postman.setEnvironmentVariable(\"vnGuestInstanceId\", data.response[i].instanceId);",
									"        postman.setEnvironmentVariable(\"vnGuestResourceVersion\", data.response[i].resourceVersion);",
									"        postman.setEnvironmentVariable(\"vnGuestInstanceVersion\", data.response[i].instanceVersion);",
									"    }",
									"    if (data.response[i].virtualNetworkContextId == vncInfraVnId) {",
									"        postman.setEnvironmentVariable(\"vnInfraId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"vnInfraFullName\", data.response[i].name);",
									"        postman.setEnvironmentVariable(\"vnInfraNamespace\", data.response[i].namespace);",
									"        postman.setEnvironmentVariable(\"vnInfraAuthEntityId\", data.response[i].authEntityId);",
									"        postman.setEnvironmentVariable(\"vnInfraContextId\", data.response[i].virtualNetworkContextId);",
									"        postman.setEnvironmentVariable(\"vnInfraAuthEntityClass\", data.response[i].authEntityClass);",
									"        postman.setEnvironmentVariable(\"vnInfraL3Instance\", data.response[i].l3Instance);",
									"        postman.setEnvironmentVariable(\"vnInfraInstanceId\", data.response[i].instanceId);",
									"        postman.setEnvironmentVariable(\"vnInfraResourceVersion\", data.response[i].resourceVersion);",
									"        postman.setEnvironmentVariable(\"vnInfraInstanceVersion\", data.response[i].instanceVersion);",
									"    }",
									"    if (data.response[i].virtualNetworkContextId == vncRestrictedVnId) {",
									"        postman.setEnvironmentVariable(\"vnRestrictedId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"vnRestrictedFullName\", data.response[i].name);",
									"        postman.setEnvironmentVariable(\"vnRestrictedNamespace\", data.response[i].namespace);",
									"        postman.setEnvironmentVariable(\"vnRestrictedAuthEntityId\", data.response[i].authEntityId);",
									"        postman.setEnvironmentVariable(\"vnRestrictedContextId\", data.response[i].virtualNetworkContextId);",
									"        postman.setEnvironmentVariable(\"vnRestrictedAuthEntityClass\", data.response[i].authEntityClass);",
									"        postman.setEnvironmentVariable(\"vnRestrictedL3Instance\", data.response[i].l3Instance);",
									"        postman.setEnvironmentVariable(\"vnRestrictedInstanceId\", data.response[i].instanceId);",
									"        postman.setEnvironmentVariable(\"vnRestrictedResourceVersion\", data.response[i].resourceVersion);",
									"        postman.setEnvironmentVariable(\"vnRestrictedInstanceVersion\", data.response[i].instanceVersion);",
									"    }",
									"}",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/data/customer-facing-service/VirtualNetwork",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"data",
								"customer-facing-service",
								"VirtualNetwork"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Fabric Data",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var data = JSON.parse(responseBody);",
									"",
									"",
									"    ",
									"for (var i=0; i < data.response.length; i++) {",
									"    if (data.response[i].name == \"US West\") {",
									"        postman.setEnvironmentVariable(\"fabId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"fabResourceVersion\", data.response[i].resourceVersion);",
									"         }",
									"    if (data.response[i].name.includes(\"San_Jose_US_West\")) {",
									"        postman.setEnvironmentVariable(\"fabSiteId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"fabSiteResourceVersion\", data.response[i].resourceVersion);",
									"        strFabVirtualNetworks=JSON.stringify(data.response[i].virtualNetwork);",
									"        postman.setEnvironmentVariable(\"fabVirtualNetworks\", strFabVirtualNetworks);",
									"         }",
									"    else if (data.response[i].name.includes(\"Transit\")) {",
									"        postman.setEnvironmentVariable(\"fabTransitId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"fabSiteTransitVersion\", data.response[i].resourceVersion);",
									"         }",
									"  ",
									"}",
									"",
									"\tvar latestRequest = pm.info.requestName;",
									"\tpostman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"\tconsole.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/data/customer-facing-service/ConnectivityDomain",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"data",
								"customer-facing-service",
								"ConnectivityDomain"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Device Info - Border 1 and 2 in Fabric with Restricted",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var data = JSON.parse(responseBody);",
									"var vnInfraId = pm.variables.get(\"vnInfraId\");",
									"var vnCampusId = pm.variables.get(\"vnCampusId\");",
									"var vnGuestId = pm.variables.get(\"vnGuestId\");",
									"var vnRestrictedId = pm.variables.get(\"vnRestrictedId\");",
									"",
									"for (var i=0; i < data.response.length; i++) {",
									"    if (data.response[i].name.includes (\"edge-1\")) {",
									"        postman.setEnvironmentVariable(\"edge1DevinfoId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"edge1InstanceId\", data.response[i].instanceId);",
									"        postman.setEnvironmentVariable(\"edge1AuthEntityId\", data.response[i].authEntityId);",
									"        postman.setEnvironmentVariable(\"edge1DisplayName\", data.response[i].displayName);",
									"        postman.setEnvironmentVariable(\"edge1AuthEntityClass\", data.response[i].authEntityClass);",
									"        postman.setEnvironmentVariable(\"edge1InstanceTenantId\", data.response[i].instanceTenantId);",
									"        postman.setEnvironmentVariable(\"edge1CreateTime\", data.response[i].createTime);",
									"        postman.setEnvironmentVariable(\"edge1LastUpdateTime\", data.response[i].lastUpdateTime);",
									"        postman.setEnvironmentVariable(\"edge1Name\", data.response[i].name);",
									"        postman.setEnvironmentVariable(\"edge1Namespace\", data.response[i].namespace);",
									"        postman.setEnvironmentVariable(\"edge1ProvisioningState\", data.response[i].provisioningState);",
									"        postman.setEnvironmentVariable(\"edge1ResourceVersion\", data.response[i].resourceVersion);",
									"        postman.setEnvironmentVariable(\"edge1Type\", data.response[i].type);",
									"        postman.setEnvironmentVariable(\"edge1NetworkDeviceId\", data.response[i].networkDeviceId);",
									"        postman.setEnvironmentVariable(\"edge1SiteId\", data.response[i].siteId);",
									"        strNetworkWideSettings = JSON.stringify(data.response[i].networkWideSettings);",
									"        postman.setEnvironmentVariable(\"edge1NetworkWideSettings\",strNetworkWideSettings );",
									"    }",
									"        if (data.response[i].name.includes (\"cp-border-1\")) {",
									"        postman.setEnvironmentVariable(\"cpborder1DevinfoId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"cpborder1InstanceId\", data.response[i].instanceId);",
									"        postman.setEnvironmentVariable(\"cpborder1AuthEntityId\", data.response[i].authEntityId);",
									"        postman.setEnvironmentVariable(\"cpborder1DisplayName\", data.response[i].displayName);",
									"        postman.setEnvironmentVariable(\"cpborder1AuthEntityClass\", data.response[i].authEntityClass);",
									"        postman.setEnvironmentVariable(\"cpborder1InstanceTenantId\", data.response[i].instanceTenantId);",
									"        postman.setEnvironmentVariable(\"cpborder1CreateTime\", data.response[i].createTime);",
									"        postman.setEnvironmentVariable(\"cpborder1LastUpdateTime\", data.response[i].lastUpdateTime);",
									"        postman.setEnvironmentVariable(\"cpborder1Name\", data.response[i].name);",
									"        postman.setEnvironmentVariable(\"cpborder1Namespace\", data.response[i].namespace);",
									"        postman.setEnvironmentVariable(\"cpborder1ProvisioningState\", data.response[i].provisioningState);",
									"        postman.setEnvironmentVariable(\"cpborder1ResourceVersion\", data.response[i].resourceVersion);",
									"        postman.setEnvironmentVariable(\"cpborder1Type\", data.response[i].type);",
									"        postman.setEnvironmentVariable(\"cpborder1NetworkDeviceId\", data.response[i].networkDeviceId);",
									"        postman.setEnvironmentVariable(\"cpborder1SiteId\", data.response[i].siteId);",
									"        strNetworkWideSettings = JSON.stringify(data.response[i].networkWideSettings);",
									"        postman.setEnvironmentVariable(\"cpborder1NetworkWideSettings\",strNetworkWideSettings );",
									"        postman.setEnvironmentVariable(\"cpborder1DevSettingsId\", data.response[i].deviceSettings.id);",
									"        postman.setEnvironmentVariable(\"cpborder1DevSettingsInstanceId\", data.response[i].deviceSettings.instanceId);",
									"        postman.setEnvironmentVariable(\"cpborder1DevSettingsInstanceVersion\", data.response[i].deviceSettings.instanceVersion);",
									"        postman.setEnvironmentVariable(\"extConnBorder1Int\", data.response[i].deviceSettings.extConnectivitySettings[0].id);",
									"        postman.setEnvironmentVariable(\"extConnBorder1IntInstanceId\", data.response[i].deviceSettings.extConnectivitySettings[0].instanceId);",
									"        postman.setEnvironmentVariable(\"extConnBorder1IntInstanceVersion\", data.response[i].deviceSettings.extConnectivitySettings[0].instanceVersion);",
									"        for (var x=0; x < data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff.length; x++) {",
									"            if (data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].virtualNetwork.idRef == vnInfraId) {",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3InfraId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].id);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3InfraInstanceId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].instanceId);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3InfraInstanceVersion\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].instanceVersion);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3InfraLocalIp\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].localIpAddress);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3InfraRemoteIp\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].remoteIpAddress);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3InfraVlanId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].vlanId);",
									"            }",
									"            if (data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].virtualNetwork.idRef == vnCampusId) {",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3CampusId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].id);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3CampusInstanceId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].instanceId);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3CampusInstanceVersion\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].instanceVersion);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3CampusLocalIp\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].localIpAddress);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3CampusRemoteIp\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].remoteIpAddress);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3CampusVlanId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].vlanId);",
									"                }",
									"            if (data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].virtualNetwork.idRef == vnGuestId) {",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3GuestId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].id);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3GuestInstanceId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].instanceId);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3GuestInstanceVersion\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].instanceVersion);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3GuestLocalIp\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].localIpAddress);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3GuestRemoteIp\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].remoteIpAddress);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3GuestVlanId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].vlanId);",
									"                }",
									"            if (data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].virtualNetwork.idRef == vnRestrictedId) {",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3RestrictedId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].id);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3RestrictedInstanceId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].instanceId);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3RestrictedInstanceVersion\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].instanceVersion);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3RestrictedLocalIp\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].localIpAddress);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3RestrictedRemoteIp\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].remoteIpAddress);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3RestrictedVlanId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].vlanId);",
									"            }",
									"            }",
									"        }",
									"        if (data.response[i].name.includes (\"cp-border-2\")) {",
									"        postman.setEnvironmentVariable(\"cpborder2DevinfoId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"cpborder2InstanceId\", data.response[i].instanceId);",
									"        postman.setEnvironmentVariable(\"cpborder2AuthEntityId\", data.response[i].authEntityId);",
									"        postman.setEnvironmentVariable(\"cpborder2DisplayName\", data.response[i].displayName);",
									"        postman.setEnvironmentVariable(\"cpborder2AuthEntityClass\", data.response[i].authEntityClass);",
									"        postman.setEnvironmentVariable(\"cpborder2InstanceTenantId\", data.response[i].instanceTenantId);",
									"        postman.setEnvironmentVariable(\"cpborder2CreateTime\", data.response[i].createTime);",
									"        postman.setEnvironmentVariable(\"cpborder2LastUpdateTime\", data.response[i].lastUpdateTime);",
									"        postman.setEnvironmentVariable(\"cpborder2Name\", data.response[i].name);",
									"        postman.setEnvironmentVariable(\"cpborder2Namespace\", data.response[i].namespace);",
									"        postman.setEnvironmentVariable(\"cpborder2ProvisioningState\", data.response[i].provisioningState);",
									"        postman.setEnvironmentVariable(\"cpborder2ResourceVersion\", data.response[i].resourceVersion);",
									"        postman.setEnvironmentVariable(\"cpborder2Type\", data.response[i].type);",
									"        postman.setEnvironmentVariable(\"cpborder2NetworkDeviceId\", data.response[i].networkDeviceId);",
									"        postman.setEnvironmentVariable(\"cpborder2SiteId\", data.response[i].siteId);",
									"        strNetworkWideSettings = JSON.stringify(data.response[i].networkWideSettings);",
									"        postman.setEnvironmentVariable(\"cpborder2NetworkWideSettings\",strNetworkWideSettings );",
									"        postman.setEnvironmentVariable(\"cpborder2DevSettingsId\", data.response[i].deviceSettings.id);",
									"        postman.setEnvironmentVariable(\"cpborder2DevSettingsInstanceId\", data.response[i].deviceSettings.instanceId);",
									"        postman.setEnvironmentVariable(\"cpborder2DevSettingsInstanceVersion\", data.response[i].deviceSettings.instanceVersion);",
									"        postman.setEnvironmentVariable(\"extConnBorder2Int\", data.response[i].deviceSettings.extConnectivitySettings[0].id);",
									"        postman.setEnvironmentVariable(\"extConnBorder2IntInstanceId\", data.response[i].deviceSettings.extConnectivitySettings[0].instanceId);",
									"        postman.setEnvironmentVariable(\"extConnBorder2IntInstanceVersion\", data.response[i].deviceSettings.extConnectivitySettings[0].instanceVersion);",
									"        for (var x=0; x < data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff.length; x++) {",
									"\t\t if (data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].virtualNetwork.idRef == vnInfraId) {",
									"\t\t\t\t postman.setEnvironmentVariable(\"extConnBorder2L3InfraId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].id);",
									"\t\t\t\t postman.setEnvironmentVariable(\"extConnBorder2L3InfraInstanceId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].instanceId);",
									"\t\t\t\t postman.setEnvironmentVariable(\"extConnBorder2L3InfraInstanceVersion\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].instanceVersion);",
									"\t\t\t\t postman.setEnvironmentVariable(\"extConnBorder2L3InfraLocalIp\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].localIpAddress);",
									"\t\t\t\t postman.setEnvironmentVariable(\"extConnBorder2L3InfraRemoteIp\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].remoteIpAddress);",
									"\t\t\t\t postman.setEnvironmentVariable(\"extConnBorder2L3InfraVlanId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].vlanId);",
									"\t\t    }",
									"            if (data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].virtualNetwork.idRef == vnCampusId) {",
									"                postman.setEnvironmentVariable(\"extConnBorder2L3CampusId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].id);",
									"                postman.setEnvironmentVariable(\"extConnBorder2L3CampusInstanceId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].instanceId);",
									"                postman.setEnvironmentVariable(\"extConnBorder2L3CampusInstanceVersion\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].instanceVersion);",
									"                postman.setEnvironmentVariable(\"extConnBorder2L3CampusLocalIp\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].localIpAddress);",
									"                postman.setEnvironmentVariable(\"extConnBorder2L3CampusRemoteIp\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].remoteIpAddress);",
									"                postman.setEnvironmentVariable(\"extConnBorder2L3CampusVlanId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].vlanId);",
									"                }",
									"            if (data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].virtualNetwork.idRef == vnGuestId) {",
									"                postman.setEnvironmentVariable(\"extConnBorder2L3GuestId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].id);",
									"                postman.setEnvironmentVariable(\"extConnBorder2L3GuestInstanceId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].instanceId);",
									"                postman.setEnvironmentVariable(\"extConnBorder2L3GuestInstanceVersion\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].instanceVersion);",
									"                postman.setEnvironmentVariable(\"extConnBorder2L3GuestLocalIp\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].localIpAddress);",
									"                postman.setEnvironmentVariable(\"extConnBorder2L3GuestRemoteIp\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].remoteIpAddress);",
									"                postman.setEnvironmentVariable(\"extConnBorder2L3GuestVlanId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].vlanId);",
									"                }",
									"            if (data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].virtualNetwork.idRef == vnRestrictedId) {",
									"                postman.setEnvironmentVariable(\"extConnBorder2L3RestrictedId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].id);",
									"                postman.setEnvironmentVariable(\"extConnBorder2L3RestrictedInstanceId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].instanceId);",
									"                postman.setEnvironmentVariable(\"extConnBorder2L3RestrictedInstanceVersion\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].instanceVersion);",
									"                postman.setEnvironmentVariable(\"extConnBorder2L3RestrictedLocalIp\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].localIpAddress);",
									"                postman.setEnvironmentVariable(\"extConnBorder2L3RestrictedRemoteIp\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].remoteIpAddress);",
									"                postman.setEnvironmentVariable(\"extConnBorder2L3RestrictedVlanId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].vlanId);",
									"                }",
									"\t\t }",
									"    }",
									"}",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/data/customer-facing-service/DeviceInfo",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"data",
								"customer-facing-service",
								"DeviceInfo"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Border1 + Restricted + 1/0/2 to Fabric",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d247b1d4-7550-43b5-b4cf-c1e8e7f92111",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"taskId\", data.response.taskId);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n\t{\r\n\t\t\"id\":\"{{fabSiteId}}\",\r\n\t\t\"type\":\"ConnectivityDomain\",\r\n\t\t\"name\":\"Global/San_Jose_US_West\",\r\n\t\t\"domainType\":\"FABRIC_SITE\",\r\n\t\t\"isDefault\":false,\r\n\t\t\"virtualNetwork\":{{fabVirtualNetworks}},\r\n\t\t\"deviceInfo\":\r\n\t\t[\r\n\t\t\t{\r\n\t\t\t\t\"cfsChangeInfo\":[],\r\n\t\t\t\t\"configs\":[],\t\r\n\t\t\t\t\"createTime\":{{cpborder1CreateTime}},\r\n\t\t\t\t\"deployed\":false,\"deviceInterfaceInfo\":[],\r\n\t\t\t\t\"displayName\":\"{{cpborder1DisplayName}}\",\r\n\t\t\t\t\"id\":\"{{cpborder1DevinfoId}}\",\r\n\t\t\t\t\"instanceId\":{{cpborder1InstanceId}},\r\n\t\t\t\t\"instanceVersion\":{{cpborder1ResourceVersion}},\r\n\t\t\t\t\"isStale\":false,\r\n\t\t\t\t\"lastUpdateTime\":{{cpborder1LastUpdateTime}},\r\n\t\t\t\t\"name\":\"{{devCpBorder1FullName}}\",\r\n\t\t\t\t\"namespace\":\"{{cpborder1Namespace}}\",\r\n\t\t\t\t\"networkDeviceId\":\"{{cpborder1NetworkDeviceId}}\",\r\n\t \t\t\t\"networkWideSettings\":{{cpborder1NetworkWideSettings}},\r\n \t\t\t\t\"provisioningState\":\"DEFINED\",\r\n\t\t\t\t\"roles\":[\"BORDERNODE\",\"MAPSERVER\"],\r\n\t\t\t\t\"siteId\":\"{{dsgnSjc13MdfId}}\",\r\n\t\t\t\t\"transitNetworks\":[{\"idRef\":\"{{fabTransitId}}\"}],\r\n\t\t\t\t\"type\":\"DeviceInfo\",\r\n\t\t\t\t\"wlan\":[],\r\n\t\t\t\t\"otherDevice\":[],\r\n\t\t\t\t\"deviceSettings\":\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\":\"{{cpborder1DevSettingsId}}\",\r\n\t\t\t\t\t\"instanceId\":{{cpborder1DevSettingsInstanceId}},\r\n\t\t\t\t\t\"displayName\":\"0\",\r\n\t\t\t\t\t\"instanceVersion\":{{cpborder1DevSettingsInstanceVersion}},\r\n\t\t\t\t\t\"connectedTo\":[\"INTERNET\"],\r\n\t\t\t\t\t\"cpu\":0,\r\n\t\t\t\t\t\"dhcpEnabled\":false,\r\n\t\t\t\t\t\"externalConnectivityIpPool\":\"{{dsgnTransitPoolId}}\",\r\n\t\t\t\t\t\"externalDomainRoutingProtocol\":\"BGP\",\r\n\t\t\t\t\t\"internalDomainProtocolNumber\":\"65534\",\r\n\t\t\t\t\t\"memory\":0,\r\n\t\t\t\t\t\"nodeType\":[\"EXTERNAL\"],\r\n\t\t\t\t\t\"storage\":0,\r\n\t\t\t\t\t\"extConnectivitySettings\":\r\n\t\t\t\t\t[\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\"externalDomainProtocolNumber\":\"65535\",\r\n\t\t\t\t\t\t\t\"interfaceUuid\":\"GigabitEthernet1/0/2\",\r\n\t\t\t\t\t\t\t\"policyPropagationEnabled\":false,\r\n\t\t\r\n\t\t\t\t\t\t\t\"l2Handoff\":[],\r\n\t\t\t\t\t\t\t\"l3Handoff\":\r\n\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t{\"virtualNetwork\":{\"idRef\":\"{{vnInfraId}}\"}},\r\n\t\t\t\t\t\t\t\t{\"virtualNetwork\":{\"idRef\":\"{{vnCampusId}}\"}},\r\n\t\t\t\t\t\t\t\t{\"virtualNetwork\":{\"idRef\":\"{{vnGuestId}}\"}},\r\n\t\t\t\t\t\t\t\t{\"virtualNetwork\":{\"idRef\":\"{{vnRestrictedId}}\"}}\r\n\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\t{\r\n\t\t\t\t\"cfsChangeInfo\":[],\r\n\t\t\t\t\"configs\":[],\r\n\t\t\t\t\"createTime\":{{edge1CreateTime}},\r\n\t\t\t\t\"deployed\":false,\r\n\t\t\t\t\"deviceInterfaceInfo\":[],\r\n\t\t\t\t\"displayName\":\"{{edge1DisplayName}}\",\r\n\t\t\t\t\"id\":\"{{edge1DevinfoId}}\",\r\n\t\t\t\t\"instanceId\":{{edge1InstanceId}},\r\n\t\t\t\t\"instanceVersion\":{{edge1ResourceVersion}},\r\n\t\t\t\t\"isStale\":false,\r\n\t\t\t\t\"lastUpdateTime\":{{edge1LastUpdateTime}},\r\n\t\t\t\t\"name\":\"{{edge1Name}}\",\r\n\t\t\t\t\"namespace\":\"{{edge1Namespace}}\",\r\n\t\t\t\t\"networkDeviceId\":\"{{edge1NetworkDeviceId}}\",\r\n\t\t\t\t\"networkWideSettings\":{{edge1NetworkWideSettings}},\r\n\t\t\t\t\"provisioningState\":\"DEFINED\",\r\n\t\t\t\t\"roles\":[\"EDGENODE\"],\r\n\t\t\t\t\"siteId\":\"{{dsgnSjc13FirstFloorId}}\",\r\n\t\t\t\t\"transitNetworks\":[],\r\n\t\t\t\t\"type\":\"DeviceInfo\",\r\n\t\t\t\t\"wlan\":[],\r\n\t\t\t\t\"otherDevice\":[]\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"cfsChangeInfo\":[],\r\n\t\t\t\t\"configs\":[],\r\n\t\t\t\t\"createTime\":{{cpborder2CreateTime}},\r\n\t\t\t\t\"deployed\":false,\r\n\t\t\t\t\"deviceInterfaceInfo\":[],\r\n\t\t\t\t\"displayName\":\"{{cpborder2DisplayName}}\",\r\n\t\t\t\t\"id\":\"{{cpborder2DevinfoId}}\",\r\n\t\t\t\t\"instanceId\":{{cpborder2InstanceId}},\r\n\t\t\t\t\"instanceVersion\":{{cpborder2ResourceVersion}},\r\n\t\t\t\t\"isStale\":false,\r\n\t\t\t\t\"lastUpdateTime\":{{cpborder2LastUpdateTime}},\r\n\t\t\t\t\"name\":\"{{cpborder2Name}}\",\r\n\t\t\t\t\"namespace\":\"{{cpborder2Namespace}}\",\r\n\t\t\t\t\"networkDeviceId\":\"{{cpborder2NetworkDeviceId}}\",\r\n\t\t\t\t\"networkWideSettings\":{{cpborder2NetworkWideSettings}},\r\n\t\t\t\t\"provisioningState\":\"DEFINED\",\r\n\t\t\t\t\"roles\":[\"BORDERNODE\",\"MAPSERVER\"],\r\n\t\t\t\t\"siteId\":\"{{dsgnSjc13MdfId}}\",\r\n\t\t\t\t\"transitNetworks\":[{\"idRef\":\"{{fabTransitId}}\"}],\r\n\t\t\t\t\"type\":\"DeviceInfo\",\r\n\t\t\t\t\"wlan\":[],\r\n\t\t\t\t\"otherDevice\":[],\r\n\t\t\t\t\"deviceSettings\":\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\":\"{{cpborder2DevSettingsId}}\",\r\n\t\t\t\t\t\"instanceId\":{{cpborder2DevSettingsInstanceId}},\r\n\t\t\t\t\t\"displayName\":\"0\",\r\n\t\t\t\t\t\"instanceVersion\":{{cpborder2DevSettingsInstanceVersion}},\r\n\t\t\t\t\t\"connectedTo\":[\"INTERNET\"],\r\n\t\t\t\t\t\"cpu\":0,\r\n\t\t\t\t\t\"dhcpEnabled\":false,\r\n\t\t\t\t\t\"externalConnectivityIpPool\":\"{{dsgnTransitPoolId}}\",\r\n\t\t\t\t\t\"externalDomainRoutingProtocol\":\"BGP\",\r\n\t\t\t\t\t\"internalDomainProtocolNumber\":\"65534\",\r\n\t\t\t\t\t\"memory\":0,\r\n\t\t\t\t\t\"nodeType\":[\"EXTERNAL\"],\r\n\t\t\t\t\t\"storage\":0,\r\n\t\t\t\t\t\"extConnectivitySettings\":\r\n\t\t\t\t\t[\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\"id\":\"{{extConnBorder2Int}}\",\r\n\t\t\t\t\t\t\t\"instanceId\":{{extConnBorder2IntInstanceId}},\r\n\t\t\t\t\t\t\t\"displayName\":\"0\",\r\n\t\t\t\t\t\t\t\"instanceVersion\":{{extConnBorder2IntInstanceVersion}},\r\n\t\t\t\t\t\t\t\"externalDomainProtocolNumber\":\"65535\",\r\n\t\t\t\t\t\t\t\"interfaceUuid\":\"GigabitEthernet1/0/2\",\r\n\t\t\t\t\t\t\t\"policyPropagationEnabled\":false,\r\n\t\t\t\t\t\t\t\"policySgtTag\":0,\r\n\t\t\t\t\t\t\t\"l2Handoff\":[],\r\n\t\t\t\t\t\t\t\"l3Handoff\":\r\n\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\"id\":\"{{extConnBorder2L3InfraId}}\",\r\n\t\t\t\t\t\t\t\t\t\"instanceId\":{{extConnBorder2L3InfraInstanceId}},\r\n\t\t\t\t\t\t\t\t\t\"displayName\":\"0\",\r\n\t\t\t\t\t\t\t\t\t\"instanceVersion\":{{extConnBorder2L3InfraInstanceVersion}},\r\n\t\t\t\t\t\t\t\t\t\"localIpAddress\":\"{{extConnBorder2L3InfraLocalIp}}\",\r\n\t\t\t\t\t\t\t\t\t\"remoteIpAddress\":\"{{extConnBorder2L3InfraRemoteIp}}\",\r\n\t\t\t\t\t\t\t\t\t\"vlanId\":{{extConnBorder2L3InfraVlanId}},\r\n\t\t\t\t\t\t\t\t\t\"virtualNetwork\":\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\"idRef\":\"{{vnInfraId}}\"\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\"id\":\"{{extConnBorder2L3CampusId}}\",\r\n\t\t\t\t\t\t\t\t\t\"instanceId\":{{extConnBorder2L3CampusInstanceId}},\r\n\t\t\t\t\t\t\t\t\t\"displayName\":\"0\",\r\n\t\t\t\t\t\t\t\t\t\"instanceVersion\":{{extConnBorder2L3CampusInstanceVersion}},\r\n\t\t\t\t\t\t\t\t\t\"localIpAddress\":\"{{extConnBorder2L3CampusLocalIp}}\",\r\n\t\t\t\t\t\t\t\t\t\"remoteIpAddress\":\"{{extConnBorder2L3CampusRemoteIp}}\",\r\n\t\t\t\t\t\t\t\t\t\"vlanId\":{{extConnBorder2L3CampusVlanId}},\r\n\t\t\t\t\t\t\t\t\t\"virtualNetwork\":\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\"idRef\":\"{{vnCampusId}}\"\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\"id\":\"{{extConnBorder2L3GuestId}}\",\r\n\t\t\t\t\t\t\t\t\t\"instanceId\":{{extConnBorder2L3GuestInstanceId}},\r\n\t\t\t\t\t\t\t\t\t\"displayName\":\"0\",\r\n\t\t\t\t\t\t\t\t\t\"instanceVersion\":{{extConnBorder2L3GuestInstanceVersion}},\r\n\t\t\t\t\t\t\t\t\t\"localIpAddress\":\"{{extConnBorder2L3GuestLocalIp}}\",\r\n\t\t\t\t\t\t\t\t\t\"remoteIpAddress\":\"{{extConnBorder2L3GuestRemoteIp}}\",\r\n\t\t\t\t\t\t\t\t\t\"vlanId\":{{extConnBorder2L3GuestVlanId}},\r\n\t\t\t\t\t\t\t\t\t\"virtualNetwork\":\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\"idRef\":\"{{vnGuestId}}\"\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"multicastInfo\":[],\r\n\t\t\"enableMonitoring\":true,\r\n\t\t\"resourceVersion\":{{fabSiteResourceVersion}},\r\n\t\t\"siteId\":\"{{dsgnAreaTopId}}\",\r\n\t\t\"siteSpecificDomain\":[],\r\n\t\t\"wirelessMulticastFeature\":false,\r\n\t\t\"isNativeMulticastEnabled\":false,\r\n\t\t\"authenticationProfileId\":\"{{authClosedId}}\"\r\n\t\t\t\t\t\t\t\t\r\n\t}\r\n]\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/data/customer-facing-service/ConnectivityDomain",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"data",
								"customer-facing-service",
								"ConnectivityDomain"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Status - Pause 1 Min",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"var latestRequest = pm.variables.get(\"latestRequest\");",
									"var service = data.response.serviceType;",
									"var isError = data.response.isError.toString();",
									"",
									"",
									"if (isError == \"false\") {",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");",
									"}",
									"else {",
									"    console.log(\"........ \" + latestRequest + \" generated an ERROR !!!!!\");",
									"    console.log(\"........ Service type is \" + service);",
									"    console.log(\"........ Failure reason is \" + data.response.failureReason);",
									"    ",
									"}",
									"",
									"",
									"",
									"console.log(\"Sleeping for one min.\");",
									"setTimeout(function(){}, 60000);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/task/{{taskId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"task",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Virtual Network Context",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var data = JSON.parse(responseBody);",
									"",
									"for (var i=0; i < data.response.length; i++) {",
									"    if (data.response[i].name == \"DEFAULT_VN\") {",
									"        postman.setEnvironmentVariable(\"vncDefaultVnId\", data.response[i].id);",
									"    }",
									"",
									"    if (data.response[i].name == \"INFRA_VN\") {",
									"        postman.setEnvironmentVariable(\"vncInfraVnId\", data.response[i].id);",
									"    }",
									"    ",
									"    if (data.response[i].name == \"Campus\") {",
									"        postman.setEnvironmentVariable(\"vncCampusVnId\", data.response[i].id);",
									"    }",
									"",
									"    if (data.response[i].name == \"Guest\") {",
									"        postman.setEnvironmentVariable(\"vncGuestVnId\", data.response[i].id);",
									"    }",
									"    if (data.response[i].name == \"Restricted\") {",
									"        postman.setEnvironmentVariable(\"vncRestrictedVnId\", data.response[i].id);",
									"    }",
									"}",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/data/customer-facing-service/virtualnetworkcontext",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"data",
								"customer-facing-service",
								"virtualnetworkcontext"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Fabric Virtual Network",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var vncDefaultVnId = pm.variables.get(\"vncDefaultVnId\");",
									"var vncCampusId = pm.variables.get(\"vncCampusVnId\");",
									"var vncGuestId = pm.variables.get(\"vncGuestVnId\");",
									"var vncInfraVnId = pm.variables.get(\"vncInfraVnId\");",
									"var vncRestrictedVnId = pm.variables.get(\"vncRestrictedVnId\");",
									"",
									"console.log(vncDefaultVnId);",
									"",
									"var data = JSON.parse(responseBody);",
									"",
									"for (var i=0; i < data.response.length; i++) {",
									"    if (data.response[i].virtualNetworkContextId == vncDefaultVnId) {",
									"        postman.setEnvironmentVariable(\"vnDefaultVnId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnFullName\", data.response[i].name);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnNamespace\", data.response[i].namespace);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnAuthEntityId\", data.response[i].authEntityId);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnContextId\", data.response[i].virtualNetworkContextId);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnAuthEntityClass\", data.response[i].authEntityClass);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnL3Instance\", data.response[i].l3Instance);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnInstanceId\", data.response[i].instanceId);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnResourceVersion\", data.response[i].resourceVersion);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnInstanceVersion\", data.response[i].instanceVersion);",
									"    }",
									"    if (data.response[i].virtualNetworkContextId == vncCampusId) {",
									"        postman.setEnvironmentVariable(\"vnCampusId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"vnCampusFullName\", data.response[i].name);",
									"        postman.setEnvironmentVariable(\"vnCampusNamespace\", data.response[i].namespace);",
									"        postman.setEnvironmentVariable(\"vnCampusAuthEntityId\", data.response[i].authEntityId);",
									"        postman.setEnvironmentVariable(\"vnCampusContextId\", data.response[i].virtualNetworkContextId);",
									"        postman.setEnvironmentVariable(\"vnCampusAuthEntityClass\", data.response[i].authEntityClass);",
									"        postman.setEnvironmentVariable(\"vnCampusL3Instance\", data.response[i].l3Instance);",
									"        postman.setEnvironmentVariable(\"vnCampusInstanceId\", data.response[i].instanceId);",
									"        postman.setEnvironmentVariable(\"vnCampusResourceVersion\", data.response[i].resourceVersion);",
									"        postman.setEnvironmentVariable(\"vnCampusInstanceVersion\", data.response[i].instanceVersion);",
									"    }",
									"    if (data.response[i].virtualNetworkContextId == vncGuestId) {",
									"        postman.setEnvironmentVariable(\"vnGuestId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"vnGuestFullName\", data.response[i].name);",
									"        postman.setEnvironmentVariable(\"vnGuestNamespace\", data.response[i].namespace);",
									"        postman.setEnvironmentVariable(\"vnGuestAuthEntityId\", data.response[i].authEntityId);",
									"        postman.setEnvironmentVariable(\"vnGuestContextId\", data.response[i].virtualNetworkContextId);",
									"        postman.setEnvironmentVariable(\"vnGuestAuthEntityClass\", data.response[i].authEntityClass);",
									"        postman.setEnvironmentVariable(\"vnGuestL3Instance\", data.response[i].l3Instance);",
									"        postman.setEnvironmentVariable(\"vnGuestInstanceId\", data.response[i].instanceId);",
									"        postman.setEnvironmentVariable(\"vnGuestResourceVersion\", data.response[i].resourceVersion);",
									"        postman.setEnvironmentVariable(\"vnGuestInstanceVersion\", data.response[i].instanceVersion);",
									"    }",
									"    if (data.response[i].virtualNetworkContextId == vncInfraVnId) {",
									"        postman.setEnvironmentVariable(\"vnInfraId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"vnInfraFullName\", data.response[i].name);",
									"        postman.setEnvironmentVariable(\"vnInfraNamespace\", data.response[i].namespace);",
									"        postman.setEnvironmentVariable(\"vnInfraAuthEntityId\", data.response[i].authEntityId);",
									"        postman.setEnvironmentVariable(\"vnInfraContextId\", data.response[i].virtualNetworkContextId);",
									"        postman.setEnvironmentVariable(\"vnInfraAuthEntityClass\", data.response[i].authEntityClass);",
									"        postman.setEnvironmentVariable(\"vnInfraL3Instance\", data.response[i].l3Instance);",
									"        postman.setEnvironmentVariable(\"vnInfraInstanceId\", data.response[i].instanceId);",
									"        postman.setEnvironmentVariable(\"vnInfraResourceVersion\", data.response[i].resourceVersion);",
									"        postman.setEnvironmentVariable(\"vnInfraInstanceVersion\", data.response[i].instanceVersion);",
									"    }",
									"    if (data.response[i].virtualNetworkContextId == vncRestrictedVnId) {",
									"        postman.setEnvironmentVariable(\"vnRestrictedId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"vnRestrictedFullName\", data.response[i].name);",
									"        postman.setEnvironmentVariable(\"vnRestrictedNamespace\", data.response[i].namespace);",
									"        postman.setEnvironmentVariable(\"vnRestrictedAuthEntityId\", data.response[i].authEntityId);",
									"        postman.setEnvironmentVariable(\"vnRestrictedContextId\", data.response[i].virtualNetworkContextId);",
									"        postman.setEnvironmentVariable(\"vnRestrictedAuthEntityClass\", data.response[i].authEntityClass);",
									"        postman.setEnvironmentVariable(\"vnRestrictedL3Instance\", data.response[i].l3Instance);",
									"        postman.setEnvironmentVariable(\"vnRestrictedInstanceId\", data.response[i].instanceId);",
									"        postman.setEnvironmentVariable(\"vnRestrictedResourceVersion\", data.response[i].resourceVersion);",
									"        postman.setEnvironmentVariable(\"vnRestrictedInstanceVersion\", data.response[i].instanceVersion);",
									"    }",
									"}",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/data/customer-facing-service/VirtualNetwork",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"data",
								"customer-facing-service",
								"VirtualNetwork"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Fabric Data",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var data = JSON.parse(responseBody);",
									"",
									"",
									"    ",
									"for (var i=0; i < data.response.length; i++) {",
									"    if (data.response[i].name == \"US West\") {",
									"        postman.setEnvironmentVariable(\"fabId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"fabResourceVersion\", data.response[i].resourceVersion);",
									"         }",
									"    if (data.response[i].name.includes(\"San_Jose_US_West\")) {",
									"        postman.setEnvironmentVariable(\"fabSiteId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"fabSiteResourceVersion\", data.response[i].resourceVersion);",
									"        strFabVirtualNetworks=JSON.stringify(data.response[i].virtualNetwork);",
									"        postman.setEnvironmentVariable(\"fabVirtualNetworks\", strFabVirtualNetworks);",
									"         }",
									"    else if (data.response[i].name.includes(\"Transit\")) {",
									"        postman.setEnvironmentVariable(\"fabTransitId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"fabSiteTransitVersion\", data.response[i].resourceVersion);",
									"         }",
									"  ",
									"}",
									"",
									"\tvar latestRequest = pm.info.requestName;",
									"\tpostman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"\tconsole.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/data/customer-facing-service/ConnectivityDomain",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"data",
								"customer-facing-service",
								"ConnectivityDomain"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Device Info - Border 1 and 2 in Fabric with Restricted",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var data = JSON.parse(responseBody);",
									"var vnInfraId = pm.variables.get(\"vnInfraId\");",
									"var vnCampusId = pm.variables.get(\"vnCampusId\");",
									"var vnGuestId = pm.variables.get(\"vnGuestId\");",
									"var vnRestrictedId = pm.variables.get(\"vnRestrictedId\");",
									"",
									"for (var i=0; i < data.response.length; i++) {",
									"    if (data.response[i].name.includes (\"edge-1\")) {",
									"        postman.setEnvironmentVariable(\"edge1DevinfoId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"edge1InstanceId\", data.response[i].instanceId);",
									"        postman.setEnvironmentVariable(\"edge1AuthEntityId\", data.response[i].authEntityId);",
									"        postman.setEnvironmentVariable(\"edge1DisplayName\", data.response[i].displayName);",
									"        postman.setEnvironmentVariable(\"edge1AuthEntityClass\", data.response[i].authEntityClass);",
									"        postman.setEnvironmentVariable(\"edge1InstanceTenantId\", data.response[i].instanceTenantId);",
									"        postman.setEnvironmentVariable(\"edge1CreateTime\", data.response[i].createTime);",
									"        postman.setEnvironmentVariable(\"edge1LastUpdateTime\", data.response[i].lastUpdateTime);",
									"        postman.setEnvironmentVariable(\"edge1Name\", data.response[i].name);",
									"        postman.setEnvironmentVariable(\"edge1Namespace\", data.response[i].namespace);",
									"        postman.setEnvironmentVariable(\"edge1ProvisioningState\", data.response[i].provisioningState);",
									"        postman.setEnvironmentVariable(\"edge1ResourceVersion\", data.response[i].resourceVersion);",
									"        postman.setEnvironmentVariable(\"edge1Type\", data.response[i].type);",
									"        postman.setEnvironmentVariable(\"edge1NetworkDeviceId\", data.response[i].networkDeviceId);",
									"        postman.setEnvironmentVariable(\"edge1SiteId\", data.response[i].siteId);",
									"        strNetworkWideSettings = JSON.stringify(data.response[i].networkWideSettings);",
									"        postman.setEnvironmentVariable(\"edge1NetworkWideSettings\",strNetworkWideSettings );",
									"    }",
									"        if (data.response[i].name.includes (\"cp-border-1\")) {",
									"        postman.setEnvironmentVariable(\"cpborder1DevinfoId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"cpborder1InstanceId\", data.response[i].instanceId);",
									"        postman.setEnvironmentVariable(\"cpborder1AuthEntityId\", data.response[i].authEntityId);",
									"        postman.setEnvironmentVariable(\"cpborder1DisplayName\", data.response[i].displayName);",
									"        postman.setEnvironmentVariable(\"cpborder1AuthEntityClass\", data.response[i].authEntityClass);",
									"        postman.setEnvironmentVariable(\"cpborder1InstanceTenantId\", data.response[i].instanceTenantId);",
									"        postman.setEnvironmentVariable(\"cpborder1CreateTime\", data.response[i].createTime);",
									"        postman.setEnvironmentVariable(\"cpborder1LastUpdateTime\", data.response[i].lastUpdateTime);",
									"        postman.setEnvironmentVariable(\"cpborder1Name\", data.response[i].name);",
									"        postman.setEnvironmentVariable(\"cpborder1Namespace\", data.response[i].namespace);",
									"        postman.setEnvironmentVariable(\"cpborder1ProvisioningState\", data.response[i].provisioningState);",
									"        postman.setEnvironmentVariable(\"cpborder1ResourceVersion\", data.response[i].resourceVersion);",
									"        postman.setEnvironmentVariable(\"cpborder1Type\", data.response[i].type);",
									"        postman.setEnvironmentVariable(\"cpborder1NetworkDeviceId\", data.response[i].networkDeviceId);",
									"        postman.setEnvironmentVariable(\"cpborder1SiteId\", data.response[i].siteId);",
									"        strNetworkWideSettings = JSON.stringify(data.response[i].networkWideSettings);",
									"        postman.setEnvironmentVariable(\"cpborder1NetworkWideSettings\",strNetworkWideSettings );",
									"        postman.setEnvironmentVariable(\"cpborder1DevSettingsId\", data.response[i].deviceSettings.id);",
									"        postman.setEnvironmentVariable(\"cpborder1DevSettingsInstanceId\", data.response[i].deviceSettings.instanceId);",
									"        postman.setEnvironmentVariable(\"cpborder1DevSettingsInstanceVersion\", data.response[i].deviceSettings.instanceVersion);",
									"        postman.setEnvironmentVariable(\"extConnBorder1Int\", data.response[i].deviceSettings.extConnectivitySettings[0].id);",
									"        postman.setEnvironmentVariable(\"extConnBorder1IntInstanceId\", data.response[i].deviceSettings.extConnectivitySettings[0].instanceId);",
									"        postman.setEnvironmentVariable(\"extConnBorder1IntInstanceVersion\", data.response[i].deviceSettings.extConnectivitySettings[0].instanceVersion);",
									"        for (var x=0; x < data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff.length; x++) {",
									"            if (data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].virtualNetwork.idRef == vnInfraId) {",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3InfraId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].id);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3InfraInstanceId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].instanceId);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3InfraInstanceVersion\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].instanceVersion);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3InfraLocalIp\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].localIpAddress);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3InfraRemoteIp\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].remoteIpAddress);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3InfraVlanId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].vlanId);",
									"            }",
									"            if (data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].virtualNetwork.idRef == vnCampusId) {",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3CampusId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].id);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3CampusInstanceId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].instanceId);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3CampusInstanceVersion\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].instanceVersion);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3CampusLocalIp\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].localIpAddress);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3CampusRemoteIp\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].remoteIpAddress);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3CampusVlanId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].vlanId);",
									"                }",
									"            if (data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].virtualNetwork.idRef == vnGuestId) {",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3GuestId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].id);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3GuestInstanceId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].instanceId);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3GuestInstanceVersion\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].instanceVersion);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3GuestLocalIp\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].localIpAddress);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3GuestRemoteIp\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].remoteIpAddress);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3GuestVlanId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].vlanId);",
									"                }",
									"            if (data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].virtualNetwork.idRef == vnRestrictedId) {",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3RestrictedId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].id);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3RestrictedInstanceId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].instanceId);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3RestrictedInstanceVersion\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].instanceVersion);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3RestrictedLocalIp\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].localIpAddress);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3RestrictedRemoteIp\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].remoteIpAddress);",
									"                postman.setEnvironmentVariable(\"extConnBorder1L3RestrictedVlanId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].vlanId);",
									"            }",
									"            }",
									"        }",
									"        if (data.response[i].name.includes (\"cp-border-2\")) {",
									"        postman.setEnvironmentVariable(\"cpborder2DevinfoId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"cpborder2InstanceId\", data.response[i].instanceId);",
									"        postman.setEnvironmentVariable(\"cpborder2AuthEntityId\", data.response[i].authEntityId);",
									"        postman.setEnvironmentVariable(\"cpborder2DisplayName\", data.response[i].displayName);",
									"        postman.setEnvironmentVariable(\"cpborder2AuthEntityClass\", data.response[i].authEntityClass);",
									"        postman.setEnvironmentVariable(\"cpborder2InstanceTenantId\", data.response[i].instanceTenantId);",
									"        postman.setEnvironmentVariable(\"cpborder2CreateTime\", data.response[i].createTime);",
									"        postman.setEnvironmentVariable(\"cpborder2LastUpdateTime\", data.response[i].lastUpdateTime);",
									"        postman.setEnvironmentVariable(\"cpborder2Name\", data.response[i].name);",
									"        postman.setEnvironmentVariable(\"cpborder2Namespace\", data.response[i].namespace);",
									"        postman.setEnvironmentVariable(\"cpborder2ProvisioningState\", data.response[i].provisioningState);",
									"        postman.setEnvironmentVariable(\"cpborder2ResourceVersion\", data.response[i].resourceVersion);",
									"        postman.setEnvironmentVariable(\"cpborder2Type\", data.response[i].type);",
									"        postman.setEnvironmentVariable(\"cpborder2NetworkDeviceId\", data.response[i].networkDeviceId);",
									"        postman.setEnvironmentVariable(\"cpborder2SiteId\", data.response[i].siteId);",
									"        strNetworkWideSettings = JSON.stringify(data.response[i].networkWideSettings);",
									"        postman.setEnvironmentVariable(\"cpborder2NetworkWideSettings\",strNetworkWideSettings );",
									"        postman.setEnvironmentVariable(\"cpborder2DevSettingsId\", data.response[i].deviceSettings.id);",
									"        postman.setEnvironmentVariable(\"cpborder2DevSettingsInstanceId\", data.response[i].deviceSettings.instanceId);",
									"        postman.setEnvironmentVariable(\"cpborder2DevSettingsInstanceVersion\", data.response[i].deviceSettings.instanceVersion);",
									"        postman.setEnvironmentVariable(\"extConnBorder2Int\", data.response[i].deviceSettings.extConnectivitySettings[0].id);",
									"        postman.setEnvironmentVariable(\"extConnBorder2IntInstanceId\", data.response[i].deviceSettings.extConnectivitySettings[0].instanceId);",
									"        postman.setEnvironmentVariable(\"extConnBorder2IntInstanceVersion\", data.response[i].deviceSettings.extConnectivitySettings[0].instanceVersion);",
									"        for (var x=0; x < data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff.length; x++) {",
									"\t\t if (data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].virtualNetwork.idRef == vnInfraId) {",
									"\t\t\t\t postman.setEnvironmentVariable(\"extConnBorder2L3InfraId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].id);",
									"\t\t\t\t postman.setEnvironmentVariable(\"extConnBorder2L3InfraInstanceId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].instanceId);",
									"\t\t\t\t postman.setEnvironmentVariable(\"extConnBorder2L3InfraInstanceVersion\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].instanceVersion);",
									"\t\t\t\t postman.setEnvironmentVariable(\"extConnBorder2L3InfraLocalIp\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].localIpAddress);",
									"\t\t\t\t postman.setEnvironmentVariable(\"extConnBorder2L3InfraRemoteIp\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].remoteIpAddress);",
									"\t\t\t\t postman.setEnvironmentVariable(\"extConnBorder2L3InfraVlanId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].vlanId);",
									"\t\t    }",
									"            if (data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].virtualNetwork.idRef == vnCampusId) {",
									"                postman.setEnvironmentVariable(\"extConnBorder2L3CampusId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].id);",
									"                postman.setEnvironmentVariable(\"extConnBorder2L3CampusInstanceId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].instanceId);",
									"                postman.setEnvironmentVariable(\"extConnBorder2L3CampusInstanceVersion\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].instanceVersion);",
									"                postman.setEnvironmentVariable(\"extConnBorder2L3CampusLocalIp\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].localIpAddress);",
									"                postman.setEnvironmentVariable(\"extConnBorder2L3CampusRemoteIp\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].remoteIpAddress);",
									"                postman.setEnvironmentVariable(\"extConnBorder2L3CampusVlanId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].vlanId);",
									"                }",
									"            if (data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].virtualNetwork.idRef == vnGuestId) {",
									"                postman.setEnvironmentVariable(\"extConnBorder2L3GuestId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].id);",
									"                postman.setEnvironmentVariable(\"extConnBorder2L3GuestInstanceId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].instanceId);",
									"                postman.setEnvironmentVariable(\"extConnBorder2L3GuestInstanceVersion\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].instanceVersion);",
									"                postman.setEnvironmentVariable(\"extConnBorder2L3GuestLocalIp\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].localIpAddress);",
									"                postman.setEnvironmentVariable(\"extConnBorder2L3GuestRemoteIp\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].remoteIpAddress);",
									"                postman.setEnvironmentVariable(\"extConnBorder2L3GuestVlanId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].vlanId);",
									"                }",
									"            if (data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].virtualNetwork.idRef == vnRestrictedId) {",
									"                postman.setEnvironmentVariable(\"extConnBorder2L3RestrictedId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].id);",
									"                postman.setEnvironmentVariable(\"extConnBorder2L3RestrictedInstanceId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].instanceId);",
									"                postman.setEnvironmentVariable(\"extConnBorder2L3RestrictedInstanceVersion\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].instanceVersion);",
									"                postman.setEnvironmentVariable(\"extConnBorder2L3RestrictedLocalIp\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].localIpAddress);",
									"                postman.setEnvironmentVariable(\"extConnBorder2L3RestrictedRemoteIp\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].remoteIpAddress);",
									"                postman.setEnvironmentVariable(\"extConnBorder2L3RestrictedVlanId\", data.response[i].deviceSettings.extConnectivitySettings[0].l3Handoff[x].vlanId);",
									"                }",
									"\t\t }",
									"    }",
									"}",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/data/customer-facing-service/DeviceInfo",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"data",
								"customer-facing-service",
								"DeviceInfo"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Border2 + Restricted + 1/0/2 to Fabric Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d247b1d4-7550-43b5-b4cf-c1e8e7f92111",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"taskId\", data.response.taskId);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n\t{\r\n\t\t\"id\":\"{{fabSiteId}}\",\r\n\t\t\"type\":\"ConnectivityDomain\",\r\n\t\t\"name\":\"Global/San_Jose_US_West\",\r\n\t\t\"domainType\":\"FABRIC_SITE\",\r\n\t\t\"isDefault\":false,\r\n\t\t\"virtualNetwork\":{{fabVirtualNetworks}},\r\n\t\t\"deviceInfo\":\r\n\t\t[\r\n\t\t\t{\r\n\t\t\t\t\"cfsChangeInfo\":[],\r\n\t\t\t\t\"configs\":[],\t\r\n\t\t\t\t\"createTime\":{{cpborder2CreateTime}},\r\n\t\t\t\t\"deployed\":false,\"deviceInterfaceInfo\":[],\r\n\t\t\t\t\"displayName\":\"{{cpborder2DisplayName}}\",\r\n\t\t\t\t\"id\":\"{{cpborder2DevinfoId}}\",\r\n\t\t\t\t\"instanceId\":{{cpborder2InstanceId}},\r\n\t\t\t\t\"instanceVersion\":{{cpborder2ResourceVersion}},\r\n\t\t\t\t\"isStale\":false,\r\n\t\t\t\t\"lastUpdateTime\":{{cpborder2LastUpdateTime}},\r\n\t\t\t\t\"name\":\"{{devCpBorder2FullName}}\",\r\n\t\t\t\t\"namespace\":\"{{cpborder2Namespace}}\",\r\n\t\t\t\t\"networkDeviceId\":\"{{cpborder2NetworkDeviceId}}\",\r\n\t \t\t\t\"networkWideSettings\":{{cpborder2NetworkWideSettings}},\r\n \t\t\t\t\"provisioningState\":\"DEFINED\",\r\n\t\t\t\t\"roles\":[\"BORDERNODE\",\"MAPSERVER\"],\r\n\t\t\t\t\"siteId\":\"{{dsgnSjc13MdfId}}\",\r\n\t\t\t\t\"transitNetworks\":[{\"idRef\":\"{{fabTransitId}}\"}],\r\n\t\t\t\t\"type\":\"DeviceInfo\",\r\n\t\t\t\t\"wlan\":[],\r\n\t\t\t\t\"otherDevice\":[],\r\n\t\t\t\t\"deviceSettings\":\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\":\"{{cpborder2DevSettingsId}}\",\r\n\t\t\t\t\t\"instanceId\":{{cpborder2DevSettingsInstanceId}},\r\n\t\t\t\t\t\"displayName\":\"0\",\r\n\t\t\t\t\t\"instanceVersion\":{{cpborder2DevSettingsInstanceVersion}},\r\n\t\t\t\t\t\"connectedTo\":[\"INTERNET\"],\r\n\t\t\t\t\t\"cpu\":0,\r\n\t\t\t\t\t\"dhcpEnabled\":false,\r\n\t\t\t\t\t\"externalConnectivityIpPool\":\"{{dsgnTransitPoolId}}\",\r\n\t\t\t\t\t\"externalDomainRoutingProtocol\":\"BGP\",\r\n\t\t\t\t\t\"internalDomainProtocolNumber\":\"65534\",\r\n\t\t\t\t\t\"memory\":0,\r\n\t\t\t\t\t\"nodeType\":[\"EXTERNAL\"],\r\n\t\t\t\t\t\"storage\":0,\r\n\t\t\t\t\t\"extConnectivitySettings\":\r\n\t\t\t\t\t[\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\"externalDomainProtocolNumber\":\"65535\",\r\n\t\t\t\t\t\t\t\"interfaceUuid\":\"GigabitEthernet1/0/2\",\r\n\t\t\t\t\t\t\t\"policyPropagationEnabled\":false,\r\n\t\t\r\n\t\t\t\t\t\t\t\"l2Handoff\":[],\r\n\t\t\t\t\t\t\t\"l3Handoff\":\r\n\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t{\"virtualNetwork\":{\"idRef\":\"{{vnInfraId}}\"}},\r\n\t\t\t\t\t\t\t\t{\"virtualNetwork\":{\"idRef\":\"{{vnCampusId}}\"}},\r\n\t\t\t\t\t\t\t\t{\"virtualNetwork\":{\"idRef\":\"{{vnGuestId}}\"}},\r\n\t\t\t\t\t\t\t\t{\"virtualNetwork\":{\"idRef\":\"{{vnRestrictedId}}\"}}\r\n\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\t{\r\n\t\t\t\t\"cfsChangeInfo\":[],\r\n\t\t\t\t\"configs\":[],\r\n\t\t\t\t\"createTime\":{{edge1CreateTime}},\r\n\t\t\t\t\"deployed\":false,\r\n\t\t\t\t\"deviceInterfaceInfo\":[],\r\n\t\t\t\t\"displayName\":\"{{edge1DisplayName}}\",\r\n\t\t\t\t\"id\":\"{{edge1DevinfoId}}\",\r\n\t\t\t\t\"instanceId\":{{edge1InstanceId}},\r\n\t\t\t\t\"instanceVersion\":{{edge1ResourceVersion}},\r\n\t\t\t\t\"isStale\":false,\r\n\t\t\t\t\"lastUpdateTime\":{{edge1LastUpdateTime}},\r\n\t\t\t\t\"name\":\"{{edge1Name}}\",\r\n\t\t\t\t\"namespace\":\"{{edge1Namespace}}\",\r\n\t\t\t\t\"networkDeviceId\":\"{{edge1NetworkDeviceId}}\",\r\n\t\t\t\t\"networkWideSettings\":{{edge1NetworkWideSettings}},\r\n\t\t\t\t\"provisioningState\":\"DEFINED\",\r\n\t\t\t\t\"roles\":[\"EDGENODE\"],\r\n\t\t\t\t\"siteId\":\"{{dsgnSjc13FirstFloorId}}\",\r\n\t\t\t\t\"transitNetworks\":[],\r\n\t\t\t\t\"type\":\"DeviceInfo\",\r\n\t\t\t\t\"wlan\":[],\r\n\t\t\t\t\"otherDevice\":[]\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"cfsChangeInfo\":[],\r\n\t\t\t\t\"configs\":[],\r\n\t\t\t\t\"createTime\":{{cpborder1CreateTime}},\r\n\t\t\t\t\"deployed\":false,\r\n\t\t\t\t\"deviceInterfaceInfo\":[],\r\n\t\t\t\t\"displayName\":\"{{cpborder1DisplayName}}\",\r\n\t\t\t\t\"id\":\"{{cpborder1DevinfoId}}\",\r\n\t\t\t\t\"instanceId\":{{cpborder1InstanceId}},\r\n\t\t\t\t\"instanceVersion\":{{cpborder1ResourceVersion}},\r\n\t\t\t\t\"isStale\":false,\r\n\t\t\t\t\"lastUpdateTime\":{{cpborder1LastUpdateTime}},\r\n\t\t\t\t\"name\":\"{{cpborder1Name}}\",\r\n\t\t\t\t\"namespace\":\"{{cpborder1Namespace}}\",\r\n\t\t\t\t\"networkDeviceId\":\"{{cpborder1NetworkDeviceId}}\",\r\n\t\t\t\t\"networkWideSettings\":{{cpborder1NetworkWideSettings}},\r\n\t\t\t\t\"provisioningState\":\"DEFINED\",\r\n\t\t\t\t\"roles\":[\"BORDERNODE\",\"MAPSERVER\"],\r\n\t\t\t\t\"siteId\":\"{{dsgnSjc13MdfId}}\",\r\n\t\t\t\t\"transitNetworks\":[{\"idRef\":\"{{fabTransitId}}\"}],\r\n\t\t\t\t\"type\":\"DeviceInfo\",\r\n\t\t\t\t\"wlan\":[],\r\n\t\t\t\t\"otherDevice\":[],\r\n\t\t\t\t\"deviceSettings\":\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\":\"{{cpborder1DevSettingsId}}\",\r\n\t\t\t\t\t\"instanceId\":{{cpborder1DevSettingsInstanceId}},\r\n\t\t\t\t\t\"displayName\":\"0\",\r\n\t\t\t\t\t\"instanceVersion\":{{cpborder1DevSettingsInstanceVersion}},\r\n\t\t\t\t\t\"connectedTo\":[\"INTERNET\"],\r\n\t\t\t\t\t\"cpu\":0,\r\n\t\t\t\t\t\"dhcpEnabled\":false,\r\n\t\t\t\t\t\"externalConnectivityIpPool\":\"{{dsgnTransitPoolId}}\",\r\n\t\t\t\t\t\"externalDomainRoutingProtocol\":\"BGP\",\r\n\t\t\t\t\t\"internalDomainProtocolNumber\":\"65534\",\r\n\t\t\t\t\t\"memory\":0,\r\n\t\t\t\t\t\"nodeType\":[\"EXTERNAL\"],\r\n\t\t\t\t\t\"storage\":0,\r\n\t\t\t\t\t\"extConnectivitySettings\":\r\n\t\t\t\t\t[\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\"id\":\"{{extConnBorder1Int}}\",\r\n\t\t\t\t\t\t\t\"instanceId\":{{extConnBorder1IntInstanceId}},\r\n\t\t\t\t\t\t\t\"displayName\":\"0\",\r\n\t\t\t\t\t\t\t\"instanceVersion\":{{extConnBorder1IntInstanceVersion}},\r\n\t\t\t\t\t\t\t\"externalDomainProtocolNumber\":\"65535\",\r\n\t\t\t\t\t\t\t\"interfaceUuid\":\"GigabitEthernet1/0/2\",\r\n\t\t\t\t\t\t\t\"policyPropagationEnabled\":false,\r\n\t\t\t\t\t\t\t\"policySgtTag\":0,\r\n\t\t\t\t\t\t\t\"l2Handoff\":[],\r\n\t\t\t\t\t\t\t\"l3Handoff\":\r\n\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\"id\":\"{{extConnBorder1L3InfraId}}\",\r\n\t\t\t\t\t\t\t\t\t\"instanceId\":{{extConnBorder1L3InfraInstanceId}},\r\n\t\t\t\t\t\t\t\t\t\"displayName\":\"0\",\r\n\t\t\t\t\t\t\t\t\t\"instanceVersion\":{{extConnBorder1L3InfraInstanceVersion}},\r\n\t\t\t\t\t\t\t\t\t\"localIpAddress\":\"{{extConnBorder1L3InfraLocalIp}}\",\r\n\t\t\t\t\t\t\t\t\t\"remoteIpAddress\":\"{{extConnBorder1L3InfraRemoteIp}}\",\r\n\t\t\t\t\t\t\t\t\t\"vlanId\":{{extConnBorder1L3InfraVlanId}},\r\n\t\t\t\t\t\t\t\t\t\"virtualNetwork\":\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\"idRef\":\"{{vnInfraId}}\"\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\"id\":\"{{extConnBorder1L3CampusId}}\",\r\n\t\t\t\t\t\t\t\t\t\"instanceId\":{{extConnBorder1L3CampusInstanceId}},\r\n\t\t\t\t\t\t\t\t\t\"displayName\":\"0\",\r\n\t\t\t\t\t\t\t\t\t\"instanceVersion\":{{extConnBorder1L3CampusInstanceVersion}},\r\n\t\t\t\t\t\t\t\t\t\"localIpAddress\":\"{{extConnBorder1L3CampusLocalIp}}\",\r\n\t\t\t\t\t\t\t\t\t\"remoteIpAddress\":\"{{extConnBorder1L3CampusRemoteIp}}\",\r\n\t\t\t\t\t\t\t\t\t\"vlanId\":{{extConnBorder1L3CampusVlanId}},\r\n\t\t\t\t\t\t\t\t\t\"virtualNetwork\":\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\"idRef\":\"{{vnCampusId}}\"\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\"id\":\"{{extConnBorder1L3GuestId}}\",\r\n\t\t\t\t\t\t\t\t\t\"instanceId\":{{extConnBorder1L3GuestInstanceId}},\r\n\t\t\t\t\t\t\t\t\t\"displayName\":\"0\",\r\n\t\t\t\t\t\t\t\t\t\"instanceVersion\":{{extConnBorder1L3GuestInstanceVersion}},\r\n\t\t\t\t\t\t\t\t\t\"localIpAddress\":\"{{extConnBorder1L3GuestLocalIp}}\",\r\n\t\t\t\t\t\t\t\t\t\"remoteIpAddress\":\"{{extConnBorder1L3GuestRemoteIp}}\",\r\n\t\t\t\t\t\t\t\t\t\"vlanId\":{{extConnBorder1L3GuestVlanId}},\r\n\t\t\t\t\t\t\t\t\t\"virtualNetwork\":\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\"idRef\":\"{{vnGuestId}}\"\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\"id\":\"{{extConnBorder1L3RestrictedId}}\",\r\n\t\t\t\t\t\t\t\t\t\"instanceId\":{{extConnBorder1L3RestrictedInstanceId}},\r\n\t\t\t\t\t\t\t\t\t\"displayName\":\"0\",\r\n\t\t\t\t\t\t\t\t\t\"instanceVersion\":{{extConnBorder1L3RestrictedInstanceVersion}},\r\n\t\t\t\t\t\t\t\t\t\"localIpAddress\":\"{{extConnBorder1L3RestrictedLocalIp}}\",\r\n\t\t\t\t\t\t\t\t\t\"remoteIpAddress\":\"{{extConnBorder1L3RestrictedRemoteIp}}\",\r\n\t\t\t\t\t\t\t\t\t\"vlanId\":{{extConnBorder1L3RestrictedVlanId}},\r\n\t\t\t\t\t\t\t\t\t\"virtualNetwork\":\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\"idRef\":\"{{vnRestrictedId}}\"\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"multicastInfo\":[],\r\n\t\t\"enableMonitoring\":true,\r\n\t\t\"resourceVersion\":{{fabSiteResourceVersion}},\r\n\t\t\"siteId\":\"{{dsgnAreaTopId}}\",\r\n\t\t\"siteSpecificDomain\":[],\r\n\t\t\"wirelessMulticastFeature\":false,\r\n\t\t\"isNativeMulticastEnabled\":false,\r\n\t\t\"authenticationProfileId\":\"{{authClosedId}}\"\r\n\t\t\t\t\t\t\t\t\r\n\t}\r\n]\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/data/customer-facing-service/ConnectivityDomain",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"data",
								"customer-facing-service",
								"ConnectivityDomain"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Status - Pause 1 Min",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"var latestRequest = pm.variables.get(\"latestRequest\");",
									"var service = data.response.serviceType;",
									"var isError = data.response.isError.toString();",
									"",
									"",
									"if (isError == \"false\") {",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");",
									"}",
									"else {",
									"    console.log(\"........ \" + latestRequest + \" generated an ERROR !!!!!\");",
									"    console.log(\"........ Service type is \" + service);",
									"    console.log(\"........ Failure reason is \" + data.response.failureReason);",
									"    ",
									"}",
									"",
									"",
									"",
									"console.log(\"Sleeping for one min.\");",
									"setTimeout(function(){}, 60000);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/task/{{taskId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"task",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Virtual Network Context",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var data = JSON.parse(responseBody);",
									"",
									"for (var i=0; i < data.response.length; i++) {",
									"    if (data.response[i].name == \"DEFAULT_VN\") {",
									"        postman.setEnvironmentVariable(\"vncDefaultVnId\", data.response[i].id);",
									"    }",
									"",
									"    if (data.response[i].name == \"INFRA_VN\") {",
									"        postman.setEnvironmentVariable(\"vncInfraVnId\", data.response[i].id);",
									"    }",
									"    ",
									"    if (data.response[i].name == \"Campus\") {",
									"        postman.setEnvironmentVariable(\"vncCampusVnId\", data.response[i].id);",
									"    }",
									"",
									"    if (data.response[i].name == \"Guest\") {",
									"        postman.setEnvironmentVariable(\"vncGuestVnId\", data.response[i].id);",
									"    }",
									"    if (data.response[i].name == \"Restricted\") {",
									"        postman.setEnvironmentVariable(\"vncRestrictedVnId\", data.response[i].id);",
									"    }",
									"}",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/data/customer-facing-service/virtualnetworkcontext",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"data",
								"customer-facing-service",
								"virtualnetworkcontext"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Fabric Virtual Network",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var vncDefaultVnId = pm.variables.get(\"vncDefaultVnId\");",
									"var vncCampusId = pm.variables.get(\"vncCampusVnId\");",
									"var vncGuestId = pm.variables.get(\"vncGuestVnId\");",
									"var vncInfraVnId = pm.variables.get(\"vncInfraVnId\");",
									"var vncRestrictedVnId = pm.variables.get(\"vncRestrictedVnId\");",
									"",
									"console.log(vncDefaultVnId);",
									"",
									"var data = JSON.parse(responseBody);",
									"",
									"for (var i=0; i < data.response.length; i++) {",
									"    if (data.response[i].virtualNetworkContextId == vncDefaultVnId) {",
									"        postman.setEnvironmentVariable(\"vnDefaultVnId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnFullName\", data.response[i].name);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnNamespace\", data.response[i].namespace);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnAuthEntityId\", data.response[i].authEntityId);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnContextId\", data.response[i].virtualNetworkContextId);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnAuthEntityClass\", data.response[i].authEntityClass);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnL3Instance\", data.response[i].l3Instance);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnInstanceId\", data.response[i].instanceId);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnResourceVersion\", data.response[i].resourceVersion);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnInstanceVersion\", data.response[i].instanceVersion);",
									"    }",
									"    if (data.response[i].virtualNetworkContextId == vncCampusId) {",
									"        postman.setEnvironmentVariable(\"vnCampusId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"vnCampusFullName\", data.response[i].name);",
									"        postman.setEnvironmentVariable(\"vnCampusNamespace\", data.response[i].namespace);",
									"        postman.setEnvironmentVariable(\"vnCampusAuthEntityId\", data.response[i].authEntityId);",
									"        postman.setEnvironmentVariable(\"vnCampusContextId\", data.response[i].virtualNetworkContextId);",
									"        postman.setEnvironmentVariable(\"vnCampusAuthEntityClass\", data.response[i].authEntityClass);",
									"        postman.setEnvironmentVariable(\"vnCampusL3Instance\", data.response[i].l3Instance);",
									"        postman.setEnvironmentVariable(\"vnCampusInstanceId\", data.response[i].instanceId);",
									"        postman.setEnvironmentVariable(\"vnCampusResourceVersion\", data.response[i].resourceVersion);",
									"        postman.setEnvironmentVariable(\"vnCampusInstanceVersion\", data.response[i].instanceVersion);",
									"    }",
									"    if (data.response[i].virtualNetworkContextId == vncGuestId) {",
									"        postman.setEnvironmentVariable(\"vnGuestId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"vnGuestFullName\", data.response[i].name);",
									"        postman.setEnvironmentVariable(\"vnGuestNamespace\", data.response[i].namespace);",
									"        postman.setEnvironmentVariable(\"vnGuestAuthEntityId\", data.response[i].authEntityId);",
									"        postman.setEnvironmentVariable(\"vnGuestContextId\", data.response[i].virtualNetworkContextId);",
									"        postman.setEnvironmentVariable(\"vnGuestAuthEntityClass\", data.response[i].authEntityClass);",
									"        postman.setEnvironmentVariable(\"vnGuestL3Instance\", data.response[i].l3Instance);",
									"        postman.setEnvironmentVariable(\"vnGuestInstanceId\", data.response[i].instanceId);",
									"        postman.setEnvironmentVariable(\"vnGuestResourceVersion\", data.response[i].resourceVersion);",
									"        postman.setEnvironmentVariable(\"vnGuestInstanceVersion\", data.response[i].instanceVersion);",
									"    }",
									"    if (data.response[i].virtualNetworkContextId == vncInfraVnId) {",
									"        postman.setEnvironmentVariable(\"vnInfraId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"vnInfraFullName\", data.response[i].name);",
									"        postman.setEnvironmentVariable(\"vnInfraNamespace\", data.response[i].namespace);",
									"        postman.setEnvironmentVariable(\"vnInfraAuthEntityId\", data.response[i].authEntityId);",
									"        postman.setEnvironmentVariable(\"vnInfraContextId\", data.response[i].virtualNetworkContextId);",
									"        postman.setEnvironmentVariable(\"vnInfraAuthEntityClass\", data.response[i].authEntityClass);",
									"        postman.setEnvironmentVariable(\"vnInfraL3Instance\", data.response[i].l3Instance);",
									"        postman.setEnvironmentVariable(\"vnInfraInstanceId\", data.response[i].instanceId);",
									"        postman.setEnvironmentVariable(\"vnInfraResourceVersion\", data.response[i].resourceVersion);",
									"        postman.setEnvironmentVariable(\"vnInfraInstanceVersion\", data.response[i].instanceVersion);",
									"    }",
									"    if (data.response[i].virtualNetworkContextId == vncRestrictedVnId) {",
									"        postman.setEnvironmentVariable(\"vnRestrictedId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"vnRestrictedFullName\", data.response[i].name);",
									"        postman.setEnvironmentVariable(\"vnRestrictedNamespace\", data.response[i].namespace);",
									"        postman.setEnvironmentVariable(\"vnRestrictedAuthEntityId\", data.response[i].authEntityId);",
									"        postman.setEnvironmentVariable(\"vnRestrictedContextId\", data.response[i].virtualNetworkContextId);",
									"        postman.setEnvironmentVariable(\"vnRestrictedAuthEntityClass\", data.response[i].authEntityClass);",
									"        postman.setEnvironmentVariable(\"vnRestrictedL3Instance\", data.response[i].l3Instance);",
									"        postman.setEnvironmentVariable(\"vnRestrictedInstanceId\", data.response[i].instanceId);",
									"        postman.setEnvironmentVariable(\"vnRestrictedResourceVersion\", data.response[i].resourceVersion);",
									"        postman.setEnvironmentVariable(\"vnRestrictedInstanceVersion\", data.response[i].instanceVersion);",
									"    }",
									"}",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/data/customer-facing-service/VirtualNetwork",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"data",
								"customer-facing-service",
								"VirtualNetwork"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Fabric Data",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var data = JSON.parse(responseBody);",
									"",
									"",
									"    ",
									"for (var i=0; i < data.response.length; i++) {",
									"    if (data.response[i].name == \"US West\") {",
									"        postman.setEnvironmentVariable(\"fabId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"fabResourceVersion\", data.response[i].resourceVersion);",
									"         }",
									"    if (data.response[i].name.includes(\"San_Jose_US_West\")) {",
									"        postman.setEnvironmentVariable(\"fabSiteId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"fabSiteResourceVersion\", data.response[i].resourceVersion);",
									"        strFabVirtualNetworks=JSON.stringify(data.response[i].virtualNetwork);",
									"        postman.setEnvironmentVariable(\"fabVirtualNetworks\", strFabVirtualNetworks);",
									"         }",
									"    else if (data.response[i].name.includes(\"Transit\")) {",
									"        postman.setEnvironmentVariable(\"fabTransitId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"fabSiteTransitVersion\", data.response[i].resourceVersion);",
									"         }",
									"  ",
									"}",
									"",
									"\tvar latestRequest = pm.info.requestName;",
									"\tpostman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"\tconsole.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/data/customer-facing-service/ConnectivityDomain",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"data",
								"customer-facing-service",
								"ConnectivityDomain"
							]
						}
					},
					"response": []
				},
				{
					"name": "Bind IP Pool to Restricted",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d247b1d4-7550-43b5-b4cf-c1e8e7f92111",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"taskId\", data.response.taskId);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n\t{\r\n\t\t\"fabricOverride\":[],\r\n\t\t\"segment\":\r\n\t\t[\r\n\t\t\t{\r\n\t\t\t\t\"type\":\"Segment\",\r\n\t\t\t\t\"name\":\"{{authPolicyRestricted}}\",\r\n\t\t\t\t\"trafficType\":\"DATA\",\r\n\t\t\t\t\"ipPoolId\":\"{{dsgnRestrictedPoolId}}\",\r\n\t\t\t\t\"isCriticalPool\":false,\r\n\t\t\t\t\"isFloodAndLearn\":true,\r\n\t\t\t\t\"isSelectiveFloodingEnabled\":false,\r\n\t\t\t\t\"isApProvisioning\":false,\r\n\t\t\t\t\"isDefaultEnterprise\":false,\r\n\t\t\t\t\"scalableGroupId\":\"\",\r\n\t\t\t\t\"isExtendedProvisioning\":false,\r\n\t\t\t\t\"connectivityDomain\":\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"idRef\":\"{{fabSiteId}}\"\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"id\":\"{{vnRestrictedId}}\",\r\n\t\t\"name\":\"{{vnRestrictedFullName}}\",\r\n\t\t\"type\":\"VirtualNetwork\",\r\n\t\t\"isDefault\":false,\r\n\t\t\"isInfra\":false,\r\n\t\t\"l3Instance\":{{vnRestrictedL3Instance}},\r\n\t\t\"namespace\":\"{{vnRestrictedNamespace}}\",\r\n\t\t\"instanceId\":{{vnRestrictedInstanceId}},\r\n\t\t\"displayName\":\"0\",\r\n\t\t\"deployPending\":\"NONE\",\r\n\t\t\"instanceVersion\":{{vnRestrictedInstanceVersion}},\r\n\t\t\"deployed\":false,\r\n\t\t\"isStale\":false,\r\n\t\t\"provisioningState\":\"DEFINED\",\r\n\t\t\"cfsChangeInfo\":[],\r\n\t\t\"virtualNetworkContextId\":\"{{vnRestrictedContextId}}\",\r\n\t\t\"resourceVersion\":{{vnRestrictedResourceVersion}}\r\n\t}\r\n]"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/data/customer-facing-service/VirtualNetwork",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"data",
								"customer-facing-service",
								"VirtualNetwork"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Status - Pause 1 Min",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"var latestRequest = pm.variables.get(\"latestRequest\");",
									"var service = data.response.serviceType;",
									"var isError = data.response.isError.toString();",
									"",
									"",
									"if (isError == \"false\") {",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");",
									"}",
									"else {",
									"    console.log(\"........ \" + latestRequest + \" generated an ERROR !!!!!\");",
									"    console.log(\"........ Service type is \" + service);",
									"    console.log(\"........ Failure reason is \" + data.response.failureReason);",
									"    ",
									"}",
									"",
									"",
									"",
									"console.log(\"Sleeping for one min.\");",
									"setTimeout(function(){}, 60000);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/task/{{taskId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"task",
								"{{taskId}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "16.1 Deploy Restricted- Border 1 Switch Config",
			"item": [
				{
					"name": "Create Template",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"taskId\", data.response.taskId);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Restricted_Border1\",\n    \"description\": \"Configuration for Border 1 Restricted\",\n    \"tags\": [],\n    \"deviceTypes\": [\n        {\n            \"productFamily\": \"Switches and Hubs\"\n        }\n    ],\n    \"softwareType\": \"IOS-XE\",\n    \"softwareVariant\": \"XE\",\n    \"templateContent\": \"int vlan 43\\nvrf forward Restricted\\nip address 100.126.0.141 255.255.255.252\\nbfd interval 300 min_rx 300 multiplier 3\\ndesc L3 Border 2 Border iBGP link in restricted VN\\nroute-map prefer_border1_in permit 10\\nset local-preference 1000\\nrouter bgp 65534\\naddress-family ipv4 vrf Restricted\\nneighbor 100.126.0.142 remote-as 65534\\nneighbor 100.126.0.142 fall-over bfd\\nneighbor 100.126.0.142 activate\\nneighbor 100.126.1.26 route-map prefer_border1_in in\\n\",\n    \n    \"rollbackTemplateContent\": \"\",\n    \"templateParams\": [],\n    \"composite\": false,\n    \"projectName\": \"POV_Automation\",\n    \"projectId\": \"{{prjPovAutomation}}\"\n}"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/template-programmer/project/{{prjPovAutomation}}/template",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"template-programmer",
								"project",
								"{{prjPovAutomation}}",
								"template"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"var latestRequest = pm.variables.get(\"latestRequest\");\r",
									"var service = data.response.serviceType;\r",
									"var isError = data.response.isError.toString();\r",
									"\r",
									"\r",
									"if (isError == \"false\") {\r",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");\r",
									"}\r",
									"else {\r",
									"    console.log(\"........ \" + latestRequest + \" generated an ERROR !!!!!\");\r",
									"    console.log(\"........ Service type is \" + service);\r",
									"    console.log(\"........ Failure reason is \" + data.response.failureReason);\r",
									"    \r",
									"}\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/task/{{taskId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"task",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Template Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var data = JSON.parse(responseBody);",
									"",
									"for (var i=0; i < data.length; i++) {",
									"    if (data[i].name == \"POV_Automation\") {",
									"        for (var n=0; n < data[i].templates.length; n++) {",
									"            if(data[i].templates[n].name == \"Restricted_Border1\") {",
									"                postman.setEnvironmentVariable(\"templateRestrictedBorder1Id\",data[i].templates[n].id);",
									"            }",
									"        }",
									"    }",
									"}",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/template-programmer/project",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"template-programmer",
								"project"
							]
						}
					},
					"response": []
				},
				{
					"name": "Commit Template",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"taskId\", data.response.taskId);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"comments\": \"First Commit from API\",\n    \"templateId\": \"{{templateRestrictedBorder1Id}}\"\n}"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/template-programmer/template/version",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"template-programmer",
								"template",
								"version"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"var latestRequest = pm.variables.get(\"latestRequest\");\r",
									"var service = data.response.serviceType;\r",
									"var isError = data.response.isError.toString();\r",
									"\r",
									"\r",
									"if (isError == \"false\") {\r",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");\r",
									"}\r",
									"else {\r",
									"    console.log(\"........ \" + latestRequest + \" generated an ERROR !!!!!\");\r",
									"    console.log(\"........ Service type is \" + service);\r",
									"    console.log(\"........ Failure reason is \" + data.response.failureReason);\r",
									"    \r",
									"}\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/task/{{taskId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"task",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Template Latest Version",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var data = JSON.parse(responseBody);",
									"var versionsInfo = data[0].versionsInfo;",
									"var latestVersion = 0;",
									"",
									"for (var i=0; i < versionsInfo.length; i++) {",
									"    if (versionsInfo[i].versionsTime !== 0) {",
									"        if (versionsInfo[i].version > latestVersion) {",
									"            latestVersion = versionsInfo[i].version;",
									"            postman.setEnvironmentVariable(\"templateRestrictedBorder1LatestVersion\", versionsInfo[i].version);",
									"            postman.setEnvironmentVariable(\"templateRestrictedBorder1LatestVersionId\", versionsInfo[i].id);",
									"        }",
									"    }",
									"}",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/template-programmer/template/version/{{templateRestrictedBorder1Id}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"template-programmer",
								"template",
								"version",
								"{{templateRestrictedBorder1Id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Deploy Template",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"forcePushTemplate\": true,\n\n    \"targetInfo\": [\n        {\n            \"id\": \"100.124.0.1\",\n            \"type\": \"MANAGED_DEVICE_IP\",\n            \"params\": {}\n        }\n    ],\n    \"templateId\": \"{{templateRestrictedBorder1LatestVersionId}}\"\n}"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/template-programmer/template/deploy",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"template-programmer",
								"template",
								"deploy"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "16.2 Deploy Restricted- Border 2 Switch Config",
			"item": [
				{
					"name": "Create Template",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"taskId\", data.response.taskId);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Restricted_Border2\",\n    \"description\": \"Configuration for Border 2 Restricted\",\n    \"tags\": [],\n    \"deviceTypes\": [\n        {\n            \"productFamily\": \"Switches and Hubs\"\n        }\n    ],\n    \"softwareType\": \"IOS-XE\",\n    \"softwareVariant\": \"XE\",\n    \"templateContent\": \"int vlan 43\\nvrf forwarding Restricted\\nip address 100.126.0.142 255.255.255.252\\nbfd interval 300 min_rx 300 multiplier 3\\ndesc L3 Border 2 Border iBGP link in Restricted VN\\nrouter bgp 65534\\naddress-family ipv4 vrf Restricted\\nneighbor 100.126.0.141 remote-as 65534\\nneighbor 100.126.0.141 fall-over bfd\\nneighbor 100.126.0.141 activate\\nneighbor 100.126.0.141 weight 65535\\n\",\n    \n    \"rollbackTemplateContent\": \"\",\n    \"templateParams\": [],\n    \"composite\": false,\n    \"projectName\": \"POV_Automation\",\n    \"projectId\": \"{{prjPovAutomation}}\"\n}"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/template-programmer/project/{{prjPovAutomation}}/template",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"template-programmer",
								"project",
								"{{prjPovAutomation}}",
								"template"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"var latestRequest = pm.variables.get(\"latestRequest\");\r",
									"var service = data.response.serviceType;\r",
									"var isError = data.response.isError.toString();\r",
									"\r",
									"\r",
									"if (isError == \"false\") {\r",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");\r",
									"}\r",
									"else {\r",
									"    console.log(\"........ \" + latestRequest + \" generated an ERROR !!!!!\");\r",
									"    console.log(\"........ Service type is \" + service);\r",
									"    console.log(\"........ Failure reason is \" + data.response.failureReason);\r",
									"    \r",
									"}\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/task/{{taskId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"task",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Template Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var data = JSON.parse(responseBody);",
									"",
									"for (var i=0; i < data.length; i++) {",
									"    if (data[i].name == \"POV_Automation\") {",
									"        for (var n=0; n < data[i].templates.length; n++) {",
									"            if(data[i].templates[n].name == \"Restricted_Border2\") {",
									"                postman.setEnvironmentVariable(\"templateRestrictedBorder2Id\",data[i].templates[n].id);",
									"            }",
									"        }",
									"    }",
									"}",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/template-programmer/project",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"template-programmer",
								"project"
							]
						}
					},
					"response": []
				},
				{
					"name": "Commit Template",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"taskId\", data.response.taskId);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"comments\": \"First Commit from API\",\n    \"templateId\": \"{{templateRestrictedBorder2Id}}\"\n}"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/template-programmer/template/version",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"template-programmer",
								"template",
								"version"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"var latestRequest = pm.variables.get(\"latestRequest\");\r",
									"var service = data.response.serviceType;\r",
									"var isError = data.response.isError.toString();\r",
									"\r",
									"\r",
									"if (isError == \"false\") {\r",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");\r",
									"}\r",
									"else {\r",
									"    console.log(\"........ \" + latestRequest + \" generated an ERROR !!!!!\");\r",
									"    console.log(\"........ Service type is \" + service);\r",
									"    console.log(\"........ Failure reason is \" + data.response.failureReason);\r",
									"    \r",
									"}\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/task/{{taskId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"task",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Template Latest Version",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var data = JSON.parse(responseBody);",
									"var versionsInfo = data[0].versionsInfo;",
									"var latestVersion = 0;",
									"",
									"for (var i=0; i < versionsInfo.length; i++) {",
									"    if (versionsInfo[i].versionsTime !== 0) {",
									"        if (versionsInfo[i].version > latestVersion) {",
									"            latestVersion = versionsInfo[i].version;",
									"            postman.setEnvironmentVariable(\"templateRestrictedBorder2LatestVersion\", versionsInfo[i].version);",
									"            postman.setEnvironmentVariable(\"templateRestrictedBorder2LatestVersionId\", versionsInfo[i].id);",
									"        }",
									"    }",
									"}",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/template-programmer/template/version/{{templateRestrictedBorder2Id}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"template-programmer",
								"template",
								"version",
								"{{templateRestrictedBorder2Id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Deploy Template",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"forcePushTemplate\": true,\n\n    \"targetInfo\": [\n        {\n            \"id\": \"100.124.0.2\",\n            \"type\": \"MANAGED_DEVICE_IP\",\n            \"params\": {}\n        }\n    ],\n    \"templateId\": \"{{templateRestrictedBorder2LatestVersionId}}\"\n}"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/template-programmer/template/deploy",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"template-programmer",
								"template",
								"deploy"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "9. Discover APs And WLC",
			"item": [
				{
					"name": "Create SJC AP Pool",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"taskId\", data.response.taskId);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"context\":\n\t[{\n\t\t\"contextKey\":\"siteId\",\n\t\t\"contextValue\":\"{{dsgnAreaTopId}}\"\n\t\t\n\t}],\n\t\t\"shared\":true,\n\t\t\"ipPoolOwner\":\"DNAC\",\n\t\t\"parentUuid\":\"{{dsgnGlobalPool1Id}}\",\n\t\t\"ipPoolName\":\"SJC-AP-Pool\",\n\t\t\"overlapping\":false,\n\t\t\"gateways\":[\"100.123.0.1\"],\n\t\t\"dnsServerIps\":[\"208.67.220.220\",\"208.67.222.222\"],\n\t\t\"dhcpServerIps\":[\"100.127.0.1\",\"100.64.0.100\"],\n\t\t\"ipPoolCidr\":\"100.123.0.0/16\"\n\t\n}"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/ippool/subpool",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"ippool",
								"subpool"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"var latestRequest = pm.variables.get(\"latestRequest\");\r",
									"var service = data.response.serviceType;\r",
									"var isError = data.response.isError.toString();\r",
									"\r",
									"\r",
									"if (isError == \"false\") {\r",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");\r",
									"}\r",
									"else {\r",
									"    console.log(\"........ \" + latestRequest + \" generated an ERROR !!!!!\");\r",
									"    console.log(\"........ Service type is \" + service);\r",
									"    console.log(\"........ Failure reason is \" + data.response.failureReason);\r",
									"    \r",
									"}\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/task/{{taskId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"task",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get SJC AP Reservation ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "186a9a46-305e-4a21-abe6-6b20907ea0ab",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var data = JSON.parse(responseBody);",
									"",
									"for (var i=0; i < data.response.length; i++) {",
									"    if (data.response[i].ipPoolName == \"SJC-AP-Pool\") {",
									"        postman.setEnvironmentVariable(\"dsgnApPoolId\", data.response[i].id);",
									"    }",
									"}",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "x-auth-token",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/ippool?parentUuid={{dsgnGlobalPool1Id}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"ippool"
							],
							"query": [
								{
									"key": "parentUuid",
									"value": "{{dsgnGlobalPool1Id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update San Jose with SJC AP Reservation ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"taskId\", data.response.taskId);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n\t{\n\t\t\"instanceType\":\"reference\",\n\t\t\"namespace\":\"global\",\n\t\t\"type\":\"reference.setting\",\n\t\t\"key\":\"ip.pool.generic.{{dsgnApPoolId}}\",\n\t\t\"value\":\n\t\t[\n\t\t\t{\"objReferences\":[\"{{dsgnApPoolId}}\"],\n\t\t\t\"type\":\"lan\",\"url\":\"\"\n\t\t\t\t\n\t\t\t}\n\t\t],\n\t\t\"groupUuid\":\"{{dsgnAreaTopId}}\"\n\t\t\n\t}\n]"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/commonsetting/global/{{dsgnAreaTopId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"commonsetting",
								"global",
								"{{dsgnAreaTopId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"var latestRequest = pm.variables.get(\"latestRequest\");\r",
									"var service = data.response.serviceType;\r",
									"var isError = data.response.isError.toString();\r",
									"\r",
									"\r",
									"if (isError == \"false\") {\r",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");\r",
									"}\r",
									"else {\r",
									"    console.log(\"........ \" + latestRequest + \" generated an ERROR !!!!!\");\r",
									"    console.log(\"........ Service type is \" + service);\r",
									"    console.log(\"........ Failure reason is \" + data.response.failureReason);\r",
									"    \r",
									"}\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/task/{{taskId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"task",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Virtual Network Context",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var data = JSON.parse(responseBody);",
									"",
									"for (var i=0; i < data.response.length; i++) {",
									"    if (data.response[i].name == \"DEFAULT_VN\") {",
									"        postman.setEnvironmentVariable(\"vncDefaultVnId\", data.response[i].id);",
									"    }",
									"",
									"    if (data.response[i].name == \"INFRA_VN\") {",
									"        postman.setEnvironmentVariable(\"vncInfraVnId\", data.response[i].id);",
									"    }",
									"    ",
									"    if (data.response[i].name == \"Campus\") {",
									"        postman.setEnvironmentVariable(\"vncCampusVnId\", data.response[i].id);",
									"    }",
									"",
									"    if (data.response[i].name == \"Guest\") {",
									"        postman.setEnvironmentVariable(\"vncGuestVnId\", data.response[i].id);",
									"    }",
									"}",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/data/customer-facing-service/virtualnetworkcontext",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"data",
								"customer-facing-service",
								"virtualnetworkcontext"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Fabric Virtual Network",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var vncDefaultVnId = pm.variables.get(\"vncDefaultVnId\");",
									"var vncCampusId = pm.variables.get(\"vncCampusVnId\");",
									"var vncGuestId = pm.variables.get(\"vncGuestVnId\");",
									"var vncInfraVnId = pm.variables.get(\"vncInfraVnId\");",
									"",
									"console.log(vncDefaultVnId);",
									"",
									"var data = JSON.parse(responseBody);",
									"",
									"for (var i=0; i < data.response.length; i++) {",
									"    if (data.response[i].virtualNetworkContextId == vncDefaultVnId) {",
									"        postman.setEnvironmentVariable(\"vnDefaultVnId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnFullName\", data.response[i].name);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnNamespace\", data.response[i].namespace);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnAuthEntityId\", data.response[i].authEntityId);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnContextId\", data.response[i].virtualNetworkContextId);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnAuthEntityClass\", data.response[i].authEntityClass);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnL3Instance\", data.response[i].l3Instance);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnInstanceId\", data.response[i].instanceId);",
									"        postman.setEnvironmentVariable(\"vnDefaultVnResourceVersion\", data.response[i].resourceVersion);",
									"    }",
									"    if (data.response[i].virtualNetworkContextId == vncCampusId) {",
									"        postman.setEnvironmentVariable(\"vnCampusId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"vnCampusFullName\", data.response[i].name);",
									"        postman.setEnvironmentVariable(\"vnCampusNamespace\", data.response[i].namespace);",
									"        postman.setEnvironmentVariable(\"vnCampusAuthEntityId\", data.response[i].authEntityId);",
									"        postman.setEnvironmentVariable(\"vnCampusContextId\", data.response[i].virtualNetworkContextId);",
									"        postman.setEnvironmentVariable(\"vnCampusAuthEntityClass\", data.response[i].authEntityClass);",
									"        postman.setEnvironmentVariable(\"vnCampusL3Instance\", data.response[i].l3Instance);",
									"        postman.setEnvironmentVariable(\"vnCampusInstanceId\", data.response[i].instanceId);",
									"        postman.setEnvironmentVariable(\"vnCampusResourceVersion\", data.response[i].resourceVersion);",
									"    }",
									"    if (data.response[i].virtualNetworkContextId == vncGuestId) {",
									"        postman.setEnvironmentVariable(\"vnGuestId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"vnGuestFullName\", data.response[i].name);",
									"        postman.setEnvironmentVariable(\"vnGuestNamespace\", data.response[i].namespace);",
									"        postman.setEnvironmentVariable(\"vnGuestAuthEntityId\", data.response[i].authEntityId);",
									"        postman.setEnvironmentVariable(\"vnGuestContextId\", data.response[i].virtualNetworkContextId);",
									"        postman.setEnvironmentVariable(\"vnGuestAuthEntityClass\", data.response[i].authEntityClass);",
									"        postman.setEnvironmentVariable(\"vnGuestL3Instance\", data.response[i].l3Instance);",
									"        postman.setEnvironmentVariable(\"vnGuestInstanceId\", data.response[i].instanceId);",
									"        postman.setEnvironmentVariable(\"vnGuestResourceVersion\", data.response[i].resourceVersion);",
									"    }",
									"    if (data.response[i].virtualNetworkContextId == vncInfraVnId) {",
									"        postman.setEnvironmentVariable(\"vnInfraId\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"vnInfraFullName\", data.response[i].name);",
									"        postman.setEnvironmentVariable(\"vnInfraNamespace\", data.response[i].namespace);",
									"        postman.setEnvironmentVariable(\"vnInfraAuthEntityId\", data.response[i].authEntityId);",
									"        postman.setEnvironmentVariable(\"vnInfraContextId\", data.response[i].virtualNetworkContextId);",
									"        postman.setEnvironmentVariable(\"vnInfraAuthEntityClass\", data.response[i].authEntityClass);",
									"        postman.setEnvironmentVariable(\"vnInfraL3Instance\", data.response[i].l3Instance);",
									"        postman.setEnvironmentVariable(\"vnInfraInstanceId\", data.response[i].instanceId);",
									"        postman.setEnvironmentVariable(\"vnInfraResourceVersion\", data.response[i].resourceVersion);",
									"    }",
									"",
									"}",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/data/customer-facing-service/VirtualNetwork",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"data",
								"customer-facing-service",
								"VirtualNetwork"
							]
						}
					},
					"response": []
				},
				{
					"name": "Bind AP IP Pool to INFRA VN",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d247b1d4-7550-43b5-b4cf-c1e8e7f92111",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"taskId\", data.response.taskId);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n\t{\n\t\t\"fabricOverride\":[],\n\t\t\"segment\":\n\t\t[\n\t\t\t{\n\t\t\t\t\"type\":\"Segment\",\n\t\t\t\t\"name\":\"100_123_0_0-INFRA_VN\",\n\t\t\t\t\"trafficType\":\"DATA\",\n\t\t\t\t\"ipPoolId\":\"{{dsgnApPoolId}}\",\n\t\t\t\t\"isCriticalPool\":false,\n\t\t\t\t\"isFloodAndLearn\":true,\n\t\t\t\t\"isSelectiveFloodingEnabled\":false,\n\t\t\t\t\"isApProvisioning\":true,\n\t\t\t\t\"isDefaultEnterprise\":false,\n\t\t\t\t\"scalableGroupId\":\"\",\n\t\t\t\t\"isExtendedProvisioning\":false,\n\t\t\t\t\"connectivityDomain\":\n\t\t\t\t\t{\n\t\t\t\t\t\t\"idRef\":\"{{fabSiteId}}\"\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t\"id\":\"{{vnInfraId}}\",\n\t\t\"name\":\"{{vnInfraFullName}}\",\n\t\t\"type\":\"VirtualNetwork\",\n\t\t\"isDefault\":false,\n\t\t\"isInfra\":true,\n\t\t\"l3Instance\":{{vnInfraL3Instance}},\n\t\t\"namespace\":\"{{vnInfraNamespace}}\",\n\t\t\"instanceId\":{{vnInfraInstanceId}},\n\t\t\"displayName\":\"0\",\n\t\t\"deployPending\":\"NONE\",\n\t\t\"instanceVersion\":{{vnInfraResourceVersion}},\n\t\t\"deployed\":false,\n\t\t\"isStale\":false,\n\t\t\"provisioningState\":\"UNKNOWN\",\n\t\t\"cfsChangeInfo\":[],\n\t\t\"virtualNetworkContextId\":\"{{vnInfraContextId}}\",\n\t\t\"resourceVersion\":0\n\t\t\n\t}\n]"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/data/customer-facing-service/VirtualNetwork",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"data",
								"customer-facing-service",
								"VirtualNetwork"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"var latestRequest = pm.variables.get(\"latestRequest\");\r",
									"var service = data.response.serviceType;\r",
									"var isError = data.response.isError.toString();\r",
									"\r",
									"\r",
									"if (isError == \"false\") {\r",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");\r",
									"}\r",
									"else {\r",
									"    console.log(\"........ \" + latestRequest + \" generated an ERROR !!!!!\");\r",
									"    console.log(\"........ Service type is \" + service);\r",
									"    console.log(\"........ Failure reason is \" + data.response.failureReason);\r",
									"    \r",
									"}\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/task/{{taskId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"task",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Start WLC Discovery",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "625de92c-9727-41e8-a7f7-636cff529e44",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"taskId\", data.response.taskId);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\t{\"discoveryType\":\"Range\",\n\t\"preferredMgmtIPMethod\":\"UseLoopBack\",\n\t\"ipAddressList\":\"100.127.100.10-100.127.100.10\",\n\t\"ipFilterList\":[],\n\t\"protocolOrder\":\"ssh,telnet\",\n\t\"cdpLevel\":\"16\",\n\t\"lldpLevel\":\"16\",\n\t\"globalCredentialIdList\":[\n\t\t\"{{credCliUserId}}\",\n\t\t\"{{credSnmpRoId}}\",\n\t\t\"{{credSnmpRwId}}\"\n\t\t],\n\t\"timeout\":\"5\",\n\t\"retry\":\"3\",\n\t\"name\":\"Wireless Discovery\"}"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/discovery",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"discovery"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Status - Pause 1 Min",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"var latestRequest = pm.variables.get(\"latestRequest\");",
									"var service = data.response.serviceType;",
									"var isError = data.response.isError.toString();",
									"",
									"",
									"if (isError == \"false\") {",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");",
									"}",
									"else {",
									"    console.log(\"........ \" + latestRequest + \" generated an ERROR !!!!!\");",
									"    console.log(\"........ Service type is \" + service);",
									"    console.log(\"........ Failure reason is \" + data.response.failureReason);",
									"    ",
									"}",
									"",
									"",
									"",
									"console.log(\"Sleeping for one min.\");",
									"setTimeout(function(){}, 60000);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/task/{{taskId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"task",
								"{{taskId}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "10 - Create and Assign Corporate SSID",
			"item": [
				{
					"name": "Create Campus WLAN",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d247b1d4-7550-43b5-b4cf-c1e8e7f92111",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"taskId\", data.response.taskId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"instanceType\": \"wlan\",\n        \"namespace\": \"wlan\",\n        \"type\": \"wlan.setting\",\n        \"key\": \"wlan.info.SDA-POV-Campus{{podNumber}}\",\n        \"value\": [\n            {\n                \"ssid\": \"SDA-POV-Campus{{podNumber}}\",\n                \"profileName\": \"\",\n                \"wlanType\": \"Enterprise\",\n                \"authType\": \"wpa2_enterprise\",\n                \"authServer\": \"auth_ise\",\n                \"authSecServer\": \"\",\n                \"redirectUrl\": \"\",\n                \"peerIp\": \"\",\n                \"isEnabled\": true,\n                \"isEmailReqd\": false,\n                \"isFabric\": true,\n                \"fabricId\": null,\n                \"isFastLaneEnabled\": true,\n                \"isMacFilteringEnabled\": false,\n                \"trafficType\": \"voicedata\",\n                \"radioPolicy\": 0,\n                \"wlanBandSelectEnable\": false,\n                \"scalableGroupTag\": \"\",\n                \"passphrase\": \"\",\n                \"portalType\": \"\",\n                \"portalName\": \"\",\n                \"redirectUrlType\": \"\",\n                \"externalAuthIpAddress\": \"\",\n                \"isBroadcastSSID\": true,\n                \"fastTransition\": \"ADAPTIVE\"\n            }\n        ],\n        \"groupUuid\": \"-1\"\n    }\n]"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/commonsetting/wlan/-1",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"commonsetting",
								"wlan",
								"-1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"var latestRequest = pm.variables.get(\"latestRequest\");\r",
									"var service = data.response.serviceType;\r",
									"var isError = data.response.isError.toString();\r",
									"\r",
									"\r",
									"if (isError == \"false\") {\r",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");\r",
									"}\r",
									"else {\r",
									"    console.log(\"........ \" + latestRequest + \" generated an ERROR !!!!!\");\r",
									"    console.log(\"........ Service type is \" + service);\r",
									"    console.log(\"........ Failure reason is \" + data.response.failureReason);\r",
									"    \r",
									"}\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/task/{{taskId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"task",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Wireless Site Profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d247b1d4-7550-43b5-b4cf-c1e8e7f92111",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"taskId\", data.response.taskId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"attributesList\": [],\n    \"groupTypeList\": [],\n    \"id\": \"\",\n    \"interfaceList\": [],\n    \"lastUpdatedBy\": \"\",\n    \"lastUpdatedDatetime\": 0,\n    \"name\": \"Wireless-SSIDs\",\n    \"namespace\": \"wlan\",\n    \"namingPrefix\": \"\",\n    \"primaryDeviceType\": \"\",\n    \"secondaryDeviceType\": \"\",\n    \"profileAttributes\": [\n        {\n            \"key\": \"wireless.ssid\",\n            \"value\": \"SDA-POV-Campus{{podNumber}}\",\n            \"attribs\": [\n                {\n                    \"key\": \"wireless.fabric\",\n                    \"value\": true\n                },\n                {\n                    \"key\": \"wireless.flexConnect\",\n                    \"value\": false\n                },\n                {\n                    \"key\": \"wireless.authMode\",\n                    \"value\": \"central\"\n                },\n                {\n                    \"key\": \"wireless.trafficSwitchingMode\",\n                    \"value\": \"fabric\"\n                }\n            ]\n        }\n    ],\n    \"siteAssociationId\": \"\",\n    \"siteProfileType\": \"\",\n    \"siteProfileUuid\": \"\",\n    \"status\": \"\",\n    \"version\": 0\n}"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/siteprofile",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"siteprofile"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"var latestRequest = pm.variables.get(\"latestRequest\");\r",
									"var service = data.response.serviceType;\r",
									"var isError = data.response.isError.toString();\r",
									"\r",
									"\r",
									"if (isError == \"false\") {\r",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");\r",
									"}\r",
									"else {\r",
									"    console.log(\"........ \" + latestRequest + \" generated an ERROR !!!!!\");\r",
									"    console.log(\"........ Service type is \" + service);\r",
									"    console.log(\"........ Failure reason is \" + data.response.failureReason);\r",
									"    \r",
									"}\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/task/{{taskId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"task",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Wireless Profile Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var data = JSON.parse(responseBody);",
									"",
									"for (var i=0; i < data.response.length; i++) {",
									"    if (data.response[i].name == \"Wireless-SSIDs\") {",
									"        postman.setEnvironmentVariable(\"profileWirelessId\", data.response[i].siteProfileUuid);",
									"    }",
									"",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/siteprofile?namespace=wlan&includeSites=true",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"siteprofile"
							],
							"query": [
								{
									"key": "namespace",
									"value": "wlan"
								},
								{
									"key": "includeSites",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Assign San Jose to Wireless Profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d247b1d4-7550-43b5-b4cf-c1e8e7f92111",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"taskId\", data.response.taskId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/siteprofile/{{profileWirelessId}}/site/{{dsgnAreaTopId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"siteprofile",
								"{{profileWirelessId}}",
								"site",
								"{{dsgnAreaTopId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"var latestRequest = pm.variables.get(\"latestRequest\");\r",
									"var service = data.response.serviceType;\r",
									"var isError = data.response.isError.toString();\r",
									"\r",
									"\r",
									"if (isError == \"false\") {\r",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");\r",
									"}\r",
									"else {\r",
									"    console.log(\"........ \" + latestRequest + \" generated an ERROR !!!!!\");\r",
									"    console.log(\"........ Service type is \" + service);\r",
									"    console.log(\"........ Failure reason is \" + data.response.failureReason);\r",
									"    \r",
									"}\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/task/{{taskId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"task",
								"{{taskId}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "End",
			"item": [],
			"protocolProfileBehavior": {}
		}
	],
	"protocolProfileBehavior": {}
}