{
	"info": {
		"_postman_id": "3796a3fd-8604-4294-b999-3b55408f2b93",
		"name": "SDA_PoV_1.3",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "0. Prep",
			"item": [
				{
					"name": "Get Auth Token (P13)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "74e2bbf2-4d8a-4812-ae57-e05c65f9106d",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"dnacToken\", data.Token);",
									"",
									";",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{dnacAdminPwd}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{dnacAdmin}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{dnacAddress}}/dna/system/api/v1/auth/token",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"dna",
								"system",
								"api",
								"v1",
								"auth",
								"token"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "1. Discover",
			"item": [
				{
					"name": "Set Global CLI Credentials (P13)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1ac78577-215e-4ed9-8822-80df88fcb090",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"taskId\", data.response.taskId);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-auth-token",
								"value": "{{dnacToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n\t{\n\t\t\"username\":\"{{credCliUser}}\",\n\t\t\"password\":\"{{credCliPwd}}\",\n\t\t\"enablePassword\":\"{{credCliEnablePwd}}\"\n\t}\n]"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/dna/intent/api/v1/global-credential/cli",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"dna",
								"intent",
								"api",
								"v1",
								"global-credential",
								"cli"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Status (P13)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"var latestRequest = pm.variables.get(\"latestRequest\");\r",
									"var service = data.response.serviceType;\r",
									"var isError = data.response.isError.toString();\r",
									"\r",
									"\r",
									"if (isError == \"false\") {\r",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");\r",
									"}\r",
									"else {\r",
									"    console.log(\"........ \" + latestRequest + \" generated an ERROR !!!!!\");\r",
									"    console.log(\"........ Service type is \" + service);\r",
									"    console.log(\"........ Failure reason is \" + data.response.failureReason);\r",
									"    \r",
									"}\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-auth-token",
								"value": "{{dnacToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/dna/intent/api/v1/task/{{taskId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"dna",
								"intent",
								"api",
								"v1",
								"task",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Set SNMPv2 Read-Only String (P13)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0ccd56d4-b107-459a-8386-dcd497563e75",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"taskId\", data.response.taskId);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest)",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-auth-token",
								"value": "{{dnacToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[{\"description\":\"{{credSnmpRo}}\",\"readCommunity\":\"{{credSnmpRo}}\"}]"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/dna/intent/api/v1/global-credential/snmpv2-read-community",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"dna",
								"intent",
								"api",
								"v1",
								"global-credential",
								"snmpv2-read-community"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Status (P13)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"var latestRequest = pm.variables.get(\"latestRequest\");\r",
									"var service = data.response.serviceType;\r",
									"var isError = data.response.isError.toString();\r",
									"\r",
									"\r",
									"if (isError == \"false\") {\r",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");\r",
									"}\r",
									"else {\r",
									"    console.log(\"........ \" + latestRequest + \" generated an ERROR !!!!!\");\r",
									"    console.log(\"........ Service type is \" + service);\r",
									"    console.log(\"........ Failure reason is \" + data.response.failureReason);\r",
									"    \r",
									"}\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/dna/intent/api/v1/task/{{taskId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"dna",
								"intent",
								"api",
								"v1",
								"task",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Set SNMPv2 Read-Write String (P13)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "75367aa9-4d0e-4173-953f-aa9dc52d91f7",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"taskId\", data.response.taskId);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[{\"description\":\"{{credSnmpRw}}\",\"writeCommunity\":\"{{credSnmpRw}}\"}]"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/dna/intent/api/v1/global-credential/snmpv2-write-community",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"dna",
								"intent",
								"api",
								"v1",
								"global-credential",
								"snmpv2-write-community"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Status (P13)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"var latestRequest = pm.variables.get(\"latestRequest\");\r",
									"var service = data.response.serviceType;\r",
									"var isError = data.response.isError.toString();\r",
									"\r",
									"\r",
									"if (isError == \"false\") {\r",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");\r",
									"}\r",
									"else {\r",
									"    console.log(\"........ \" + latestRequest + \" generated an ERROR !!!!!\");\r",
									"    console.log(\"........ Service type is \" + service);\r",
									"    console.log(\"........ Failure reason is \" + data.response.failureReason);\r",
									"    \r",
									"}\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/task/{{taskId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"task",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get netadmin ID (P13)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3bf4fce6-02fe-45d8-8363-3ff290e0048a",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var data = JSON.parse(responseBody);",
									"var credCliUser = pm.variables.get(\"credCliUser\");",
									"",
									"for (var i=0; i < data.response.length; i++) {",
									"    if (data.response[i].username == credCliUser) {",
									"        postman.setEnvironmentVariable(\"credCliUserId\", data.response[i].id);",
									"    }",
									"}",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest)",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-auth-token",
								"value": "{{dnacToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/dna/intent/api/v1/global-credential?credentialSubType=CLI",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"dna",
								"intent",
								"api",
								"v1",
								"global-credential"
							],
							"query": [
								{
									"key": "credentialSubType",
									"value": "CLI"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get SNMP RO ID (P13)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5c03295c-aecc-4d1c-ad82-f2c1cf9242fb",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var data = JSON.parse(responseBody);",
									"var credSnmpRo = pm.variables.get(\"credSnmpRo\");",
									"",
									"for (var i=0; i < data.response.length; i++) {",
									"    if (data.response[i].description == credSnmpRo) {",
									"        postman.setEnvironmentVariable(\"credSnmpRoId\", data.response[i].id);",
									"    }",
									"}",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest)",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-auth-token",
								"value": "{{dnacToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/dna/intent/api/v1/global-credential?credentialSubType=SNMPV2_READ_COMMUNITY",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"dna",
								"intent",
								"api",
								"v1",
								"global-credential"
							],
							"query": [
								{
									"key": "credentialSubType",
									"value": "SNMPV2_READ_COMMUNITY"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get SNMP RW ID (P13)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9184fe21-c167-43fa-8092-da0c91f596dc",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var data = JSON.parse(responseBody);",
									"var credSnmpRw = pm.variables.get(\"credSnmpRw\");",
									"",
									"for (var i=0; i < data.response.length; i++) {",
									"    if (data.response[i].description == credSnmpRw) {",
									"        postman.setEnvironmentVariable(\"credSnmpRwId\", data.response[i].id);",
									"    }",
									"}",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest)",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-auth-token",
								"value": "{{dnacToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/dna/intent/api/v1/global-credential?credentialSubType=SNMPV2_WRITE_COMMUNITY",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"dna",
								"intent",
								"api",
								"v1",
								"global-credential"
							],
							"query": [
								{
									"key": "credentialSubType",
									"value": "SNMPV2_WRITE_COMMUNITY"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Start Discovery (P13)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "625de92c-9727-41e8-a7f7-636cff529e44",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"taskId\", data.response.taskId);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-auth-token",
								"value": "{{dnacToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\t{\"discoveryType\":\"Range\",\n\t\"preferredMgmtIPMethod\":\"UseLoopBack\",\n\t\"ipAddressList\":\"100.124.0.1-100.124.1.1\",\n\t\"ipFilterList\":[],\n\t\"protocolOrder\":\"ssh,telnet\",\n\t\"cdpLevel\":\"16\",\n\t\"lldpLevel\":\"16\",\n\t\"globalCredentialIdList\":[\n\t\t\"{{credCliUserId}}\",\n\t\t\"{{credSnmpRoId}}\",\n\t\t\"{{credSnmpRwId}}\"\n\t\t],\n\t\"timeout\":\"5\",\n\t\"retry\":\"3\",\n\t\"name\":\"Initial Discovery\"}"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/dna/intent/api/v1/discovery",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"dna",
								"intent",
								"api",
								"v1",
								"discovery"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Status (P13)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"var latestRequest = pm.variables.get(\"latestRequest\");\r",
									"var service = data.response.serviceType;\r",
									"var isError = data.response.isError.toString();\r",
									"\r",
									"\r",
									"if (isError == \"false\") {\r",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");\r",
									"}\r",
									"else {\r",
									"    console.log(\"........ \" + latestRequest + \" generated an ERROR !!!!!\");\r",
									"    console.log(\"........ Service type is \" + service);\r",
									"    console.log(\"........ Failure reason is \" + data.response.failureReason);\r",
									"    \r",
									"}\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/task/{{taskId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"task",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Network Device Info - Wait for Discovery to Complete (P13)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3bf4fce6-02fe-45d8-8363-3ff290e0048a",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var data = JSON.parse(responseBody);",
									"var devCpBorder1Name = pm.variables.get(\"devCpBorder1Name\");",
									"var devCpBorder2Name = pm.variables.get(\"devCpBorder2Name\");",
									"var devEdge1Name = pm.variables.get(\"devEdge1Name\");",
									"",
									"var inprogress = 0;",
									"",
									"for (var i=0; i < data.response.length; i++) {",
									"    if (data.response[i].collectionStatus == \"In Progress\"){",
									"        inprogress +=1;",
									"    }",
									"    else if (data.response[i].hostname.includes(devCpBorder1Name)) {",
									"        postman.setEnvironmentVariable(\"devCpBorder1Id\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"devCpBorder1FullName\", data.response[i].hostname);",
									"        postman.setEnvironmentVariable(\"devCpBorder1MgmtIp\", data.response[i].managementIpAddress);",
									"    }",
									"    else if (data.response[i].hostname.includes (devCpBorder2Name)) {",
									"        postman.setEnvironmentVariable(\"devCpBorder2Id\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"devCpBorder2FullName\", data.response[i].hostname);",
									"        postman.setEnvironmentVariable(\"devCpBorder2MgmtIp\", data.response[i].managementIpAddress);",
									"    }",
									"    else if (data.response[i].hostname.includes (devEdge1Name)) {",
									"        postman.setEnvironmentVariable(\"devEdge1Id\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"devEdge1FullName\", data.response[i].hostname);",
									"        postman.setEnvironmentVariable(\"devEdge1MgmtIp\", data.response[i].managementIpAddress);",
									"    }",
									"}",
									"",
									"if (data.response.length === 0) {",
									"    inprogress +=3;",
									"}",
									"",
									"if (inprogress > 0) {",
									"    console.log(\"Sleeping for one min.\");",
									"    setTimeout(function(){}, 60000);",
									"    postman.setNextRequest(\"Get Network Device Info - Wait for Discovery to Complete (P13)\");",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/network-device/",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"network-device",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Set cp-border-1 Device Role (P13)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fb8416e0-6953-4830-888f-36c80b39ce44",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"taskId\", data.response.taskId);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest)",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-auth-token",
								"value": "{{dnacToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"id\":\"{{devCpBorder1Id}}\",\n\t\"role\":\"BORDER ROUTER\",\n\t\"roleSource\":\"MANUAL\"}"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/dna/intent/api/v1/network-device/brief",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"dna",
								"intent",
								"api",
								"v1",
								"network-device",
								"brief"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Status (P13)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"var latestRequest = pm.variables.get(\"latestRequest\");\r",
									"var service = data.response.serviceType;\r",
									"var isError = data.response.isError.toString();\r",
									"\r",
									"\r",
									"if (isError == \"false\") {\r",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");\r",
									"}\r",
									"else {\r",
									"    console.log(\"........ \" + latestRequest + \" generated an ERROR !!!!!\");\r",
									"    console.log(\"........ Service type is \" + service);\r",
									"    console.log(\"........ Failure reason is \" + data.response.failureReason);\r",
									"    \r",
									"}\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/task/{{taskId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"task",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Set cp-border-2 Device Role (P13)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "467def2b-193c-46ba-91fb-0c1f5c51cb5d",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"taskId\", data.response.taskId);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest)",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-auth-token",
								"value": "{{dnacToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"id\":\"{{devCpBorder2Id}}\",\n\t\"role\":\"BORDER ROUTER\",\n\t\"roleSource\":\"MANUAL\"}"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/dna/intent/api/v1/network-device/brief",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"dna",
								"intent",
								"api",
								"v1",
								"network-device",
								"brief"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Status (P13)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"var latestRequest = pm.variables.get(\"latestRequest\");\r",
									"var service = data.response.serviceType;\r",
									"var isError = data.response.isError.toString();\r",
									"\r",
									"\r",
									"if (isError == \"false\") {\r",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");\r",
									"}\r",
									"else {\r",
									"    console.log(\"........ \" + latestRequest + \" generated an ERROR !!!!!\");\r",
									"    console.log(\"........ Service type is \" + service);\r",
									"    console.log(\"........ Failure reason is \" + data.response.failureReason);\r",
									"    \r",
									"}\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/task/{{taskId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"task",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Set edge-1 Device Role (P13)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e359114d-af50-4991-8a72-9e3b55427823",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"taskId\", data.response.taskId);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest)",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-auth-token",
								"value": "{{dnacToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"id\":\"{{devEdge1Id}}\",\n\t\"role\":\"ACCESS\",\n\t\"roleSource\":\"MANUAL\"}"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/dna/intent/api/v1/network-device/brief",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"dna",
								"intent",
								"api",
								"v1",
								"network-device",
								"brief"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Status (P13)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"var latestRequest = pm.variables.get(\"latestRequest\");\r",
									"var service = data.response.serviceType;\r",
									"var isError = data.response.isError.toString();\r",
									"\r",
									"\r",
									"if (isError == \"false\") {\r",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");\r",
									"}\r",
									"else {\r",
									"    console.log(\"........ \" + latestRequest + \" generated an ERROR !!!!!\");\r",
									"    console.log(\"........ Service type is \" + service);\r",
									"    console.log(\"........ Failure reason is \" + data.response.failureReason);\r",
									"    \r",
									"}\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/task/{{taskId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"task",
								"{{taskId}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "2. Initial Design",
			"item": [
				{
					"name": "Get Global Object ID (P13)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"dsgnGlobalId\", data.response[0].id);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);",
									"",
									"console.log(\"Sleeping for 30 seconds.\");",
									"setTimeout(function(){}, 30000);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/dna/intent/api/v1/site?name=global",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"dna",
								"intent",
								"api",
								"v1",
								"site"
							],
							"query": [
								{
									"key": "name",
									"value": "global"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create San Jose Area (P13)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"executionId\", data.executionId);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-auth-token",
								"value": "{{dnacToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"type\": \"area\",\n    \"site\": {\n        \"area\": {\n            \"name\": \"San Jose\",\n            \"parentName\": \"Global\"\n        }\n    }\n}"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/dna/intent/api/v1/site",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"dna",
								"intent",
								"api",
								"v1",
								"site"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Execution Status (P13)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "671ef7a1-d4ea-408c-8774-c7c25f015f38",
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"var latestRequest = pm.variables.get(\"latestRequest\");\r",
									"var execStatus = data.status;\r",
									"\r",
									"\r",
									"if (execStatus == \"SUCCESS\") {\r",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");\r",
									"}\r",
									"else {\r",
									"    console.log(\"........ \" + latestRequest + \" status returned was \" + execStatus);\r",
									"    console.log(\"Sleeping for 30 seconds.\");\r",
									"    setTimeout(function(){}, 30000);\r",
									"}\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/dna/platform/management/business-api/v1/execution-status/{{executionId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"dna",
								"platform",
								"management",
								"business-api",
								"v1",
								"execution-status",
								"{{executionId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get San Jose Area Id (P13)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var data = JSON.parse(responseBody);",
									"",
									"for (var i=0; i < data.response.length; i++) {",
									"",
									"    if (data.response[i].name == \"San Jose\") {",
									"        postman.setEnvironmentVariable(\"dsgnAreaTopId\", data.response[i].id);",
									"    }",
									"",
									"}",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/dna/intent/api/v1/site?groupNameHierarchy=\"Global/San Jose\"",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"dna",
								"intent",
								"api",
								"v1",
								"site"
							],
							"query": [
								{
									"key": "groupNameHierarchy",
									"value": "\"Global/San Jose\""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create SJC-13 (P13)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"executionId\", data.executionId);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"type\": \"building\",\n    \"site\": {\n    \t\n        \"area\": {\n            \"name\": \"San Jose\",\n            \"parentName\": \"Global\"\n        },\n        \"building\": {\n            \"name\": \"SJC-13\",\n            \"address\": \"3675 Cisco Way, San Jose, California 95134\"\n        }\n    }\n}"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/dna/intent/api/v1/site",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"dna",
								"intent",
								"api",
								"v1",
								"site"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Execution Status (P13)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "671ef7a1-d4ea-408c-8774-c7c25f015f38",
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"var latestRequest = pm.variables.get(\"latestRequest\");\r",
									"var execStatus = data.status;\r",
									"\r",
									"\r",
									"if (execStatus == \"SUCCESS\") {\r",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");\r",
									"}\r",
									"else {\r",
									"    console.log(\"........ \" + latestRequest + \" status returned was \" + execStatus);\r",
									"    console.log(\"Sleeping for 30 seconds.\");\r",
									"    setTimeout(function(){}, 30000);\r",
									"}\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/dna/platform/management/business-api/v1/execution-status/{{executionId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"dna",
								"platform",
								"management",
								"business-api",
								"v1",
								"execution-status",
								"{{executionId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get SJC-13 Object ID (P13)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var data = JSON.parse(responseBody);",
									"",
									"for (var i=0; i < data.response.length; i++) {",
									"",
									"    if (data.response[i].name == \"SJC-13\") {",
									"        postman.setEnvironmentVariable(\"dsgnBldg13Id\", data.response[i].id);",
									"    }",
									"",
									"}",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-auth-token",
								"value": "{{dnacToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/dna/intent/api/v1/site?groupNameHierarchy=\"Global/San Jose/SJC-13\"",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"dna",
								"intent",
								"api",
								"v1",
								"site"
							],
							"query": [
								{
									"key": "groupNameHierarchy",
									"value": "\"Global/San Jose/SJC-13\""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create SJC-13-1 (P13)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"executionId\", data.executionId);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"type\": \"floor\",\n    \"site\": {\n    \t\"area\": {\n            \"name\": \"San Jose\",\n            \"parentName\": \"Global\"\n        },\n        \"building\": {\n            \"name\": \"SJC-13\",\n            \"parentName\": \"San Jose\"\n        },\n        \"floor\": {\n        \t\"name\": \"SJC-13-1\",\n        \t\"parentName\": \"SJC-13\",\n        \t\"width\": \"100\",\n        \t\"length\": \"100\",\n        \t\"height\": \"10\",\n        \t\"rfModel\": \"Cubes And Walled Offices\"\n        }\n    }\n}"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/dna/intent/api/v1/site",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"dna",
								"intent",
								"api",
								"v1",
								"site"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Execution Status (P13)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "671ef7a1-d4ea-408c-8774-c7c25f015f38",
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"var latestRequest = pm.variables.get(\"latestRequest\");\r",
									"var execStatus = data.status;\r",
									"\r",
									"\r",
									"if (execStatus == \"SUCCESS\") {\r",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");\r",
									"}\r",
									"else {\r",
									"    console.log(\"........ \" + latestRequest + \" status returned was \" + execStatus);\r",
									"    console.log(\"Sleeping for 30 seconds.\");\r",
									"    setTimeout(function(){}, 30000);\r",
									"}\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/dna/platform/management/business-api/v1/execution-status/{{executionId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"dna",
								"platform",
								"management",
								"business-api",
								"v1",
								"execution-status",
								"{{executionId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get SJC-13-1 Floor ID (P13)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "479e440f-62e7-445f-b894-bc3a3d97e5d3",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var data = JSON.parse(responseBody);",
									"",
									"for (var i=0; i < data.response.length; i++) {",
									"",
									"    if (data.response[i].name == \"SJC-13-1\") {",
									"        postman.setEnvironmentVariable(\"dsgnSjc13FirstFloorId\", data.response[i].id);",
									"    }",
									"",
									"}",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/dna/intent/api/v1/site?groupNameHierarchy=\"Global/San Jose/SJC-13-1\"",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"dna",
								"intent",
								"api",
								"v1",
								"site"
							],
							"query": [
								{
									"key": "groupNameHierarchy",
									"value": "\"Global/San Jose/SJC-13-1\""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create SJC-13-MDF (P13)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"executionId\", data.executionId);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"type\": \"floor\",\n    \"site\": {\n    \t\"area\": {\n            \"name\": \"San Jose\",\n            \"parentName\": \"Global\"\n        },\n        \"building\": {\n            \"name\": \"SJC-13\",\n            \"parentName\": \"San Jose\"\n        },\n        \"floor\": {\n        \t\"name\": \"SJC-13-MDF\",\n        \t\"parentName\": \"SJC-13\",\n        \t\"width\": \"100\",\n        \t\"length\": \"100\",\n        \t\"height\": \"10\",\n        \t\"rfModel\": \"Cubes And Walled Offices\"\n        }\n    }\n}"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/dna/intent/api/v1/site",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"dna",
								"intent",
								"api",
								"v1",
								"site"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Execution Status (P13)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "671ef7a1-d4ea-408c-8774-c7c25f015f38",
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"var latestRequest = pm.variables.get(\"latestRequest\");\r",
									"var execStatus = data.status;\r",
									"\r",
									"\r",
									"if (execStatus == \"SUCCESS\") {\r",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");\r",
									"}\r",
									"else {\r",
									"    console.log(\"........ \" + latestRequest + \" status returned was \" + execStatus);\r",
									"    console.log(\"Sleeping for 30 seconds.\");\r",
									"    setTimeout(function(){}, 30000);\r",
									"}\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/dna/platform/management/business-api/v1/execution-status/{{executionId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"dna",
								"platform",
								"management",
								"business-api",
								"v1",
								"execution-status",
								"{{executionId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get SJC-13-MDF Floor ID (P13)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "479e440f-62e7-445f-b894-bc3a3d97e5d3",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var data = JSON.parse(responseBody);",
									"",
									"for (var i=0; i < data.response.length; i++) {",
									"",
									"    if (data.response[i].name == \"SJC-13-MDF\") {",
									"        postman.setEnvironmentVariable(\"dsgnSjc13MdfId\", data.response[i].id);",
									"    }",
									"",
									"}",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/dna/intent/api/v1/site?groupNameHierarchy=\"Global/San Jose/SJC-13/SJC-13-MDF\"",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"dna",
								"intent",
								"api",
								"v1",
								"site"
							],
							"query": [
								{
									"key": "groupNameHierarchy",
									"value": "\"Global/San Jose/SJC-13/SJC-13-MDF\""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create SJC-14 (P13)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"executionId\", data.executionId);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"type\": \"building\",\n    \"site\": {\n    \t\n        \"area\": {\n            \"name\": \"San Jose\",\n            \"parentName\": \"Global\"\n        },\n        \"building\": {\n            \"name\": \"SJC-14\",\n            \"address\": \"3625 Cisco Way, San Jose, California 95134, United States\"\n        }\n    }\n}"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/dna/intent/api/v1/site",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"dna",
								"intent",
								"api",
								"v1",
								"site"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Execution Status (P13)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "671ef7a1-d4ea-408c-8774-c7c25f015f38",
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"var latestRequest = pm.variables.get(\"latestRequest\");\r",
									"var execStatus = data.status;\r",
									"\r",
									"\r",
									"if (execStatus == \"SUCCESS\") {\r",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");\r",
									"}\r",
									"else {\r",
									"    console.log(\"........ \" + latestRequest + \" status returned was \" + execStatus);\r",
									"    console.log(\"Sleeping for 30 seconds.\");\r",
									"    setTimeout(function(){}, 30000);\r",
									"}\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/dna/platform/management/business-api/v1/execution-status/{{executionId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"dna",
								"platform",
								"management",
								"business-api",
								"v1",
								"execution-status",
								"{{executionId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Execution Status (P13)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "671ef7a1-d4ea-408c-8774-c7c25f015f38",
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"var latestRequest = pm.variables.get(\"latestRequest\");\r",
									"var execStatus = data.status;\r",
									"\r",
									"\r",
									"if (execStatus == \"SUCCESS\") {\r",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");\r",
									"}\r",
									"else {\r",
									"    console.log(\"........ \" + latestRequest + \" status returned was \" + data.response.failureReason);\r",
									"    console.log(\"Sleeping for 30 seconds.\");\r",
									"    setTimeout(function(){}, 30000);\r",
									"}\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/dna/platform/management/business-api/v1/execution-status/{{executionId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"dna",
								"platform",
								"management",
								"business-api",
								"v1",
								"execution-status",
								"{{executionId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create SJC-14-1 (P13)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"executionId\", data.executionId);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"type\": \"floor\",\n    \"site\": {\n    \t\"area\": {\n            \"name\": \"San Jose\",\n            \"parentName\": \"Global\"\n        },\n        \"building\": {\n            \"name\": \"SJC-14\",\n            \"parentName\": \"San Jose\"\n        },\n        \"floor\": {\n        \t\"name\": \"SJC-14-1\",\n        \t\"parentName\": \"SJC-14\",\n        \t\"width\": \"100\",\n        \t\"length\": \"100\",\n        \t\"height\": \"10\",\n        \t\"rfModel\": \"Cubes And Walled Offices\"\n        }\n    }\n}"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/dna/intent/api/v1/site",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"dna",
								"intent",
								"api",
								"v1",
								"site"
							]
						}
					},
					"response": []
				},
				{
					"name": "X13 Get Global Configuration Version",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var data = JSON.parse(responseBody);",
									"",
									"postman.setEnvironmentVariable(\"dsgnGlobalConfVersion\",data.response[0].version + 1);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/commonsetting/global/-1",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"commonsetting",
								"global",
								"-1"
							]
						}
					},
					"response": []
				},
				{
					"name": "X13 Set Global Design Settings and Activate Global Credentials",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"taskId\", data.response.taskId);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[{\n\t\"instanceType\":\"pan\",\n\t\"namespace\":\"global\",\n\t\"type\":\"pan.setting\",\n\t\"key\":\"aaa.server.pan.network\",\n\t\"version\": {{dsgnGlobalConfVersion}},\n\t\"value\":[\"100.64.0.100\"],\n\t\"groupUuid\":\"-1\",\n\t\"inheritedGroupUuid\":\"\",\n\t\"inheritedGroupName\":\"\"\n\t\n},\n{\n    \"instanceType\": \"aaa\",\n    \"namespace\": \"global\",\n    \"type\": \"aaa.setting\",\n    \"key\": \"aaa.network.server.1\",\n    \"version\": {{dsgnGlobalConfVersion}},\n    \"value\": [{\n    \t\"ipAddress\": \"100.64.0.100\",\n    \t\"protocol\": \"TACACS\"\n\t}],\n    \"groupUuid\": \"-1\",\n    \"inheritedGroupUuid\": \"\",\n    \"inheritedGroupName\": \"\"\n},\n{\n    \"instanceType\": \"pan\",\n    \"namespace\": \"global\",\n    \"type\": \"pan.setting\",\n    \"key\": \"aaa.server.pan.endpoint\",\n    \"version\": {{dsgnGlobalConfVersion}},\n    \"value\": [\"100.64.0.100\"],\n    \"groupUuid\": \"-1\",\n    \"inheritedGroupUuid\": \"\",\n    \"inheritedGroupName\": \"\"\n},\n{\n    \"instanceType\": \"aaa\",\n    \"namespace\": \"global\",\n    \"type\": \"aaa.setting\",\n    \"key\": \"aaa.endpoint.server.1\",\n    \"version\": {{dsgnGlobalConfVersion}},\n    \"value\": [{\n    \t\"ipAddress\": \"100.64.0.100\",\n    \t\"protocol\": \"RADIUS\"\n\t}],\n    \"groupUuid\": \"-1\",\n    \"inheritedGroupUuid\": \"\",\n    \"inheritedGroupName\": \"\"\n},\n{\n    \"instanceType\": \"ip\",\n    \"namespace\": \"global\",\n    \"type\": \"ip.address\",\n    \"key\": \"ntp.server\",\n    \"version\": {{dsgnGlobalConfVersion}},\n    \"value\": [\"100.127.0.1\"],\n    \"groupUuid\": \"-1\",\n    \"inheritedGroupUuid\": \"\",\n    \"inheritedGroupName\": \"\"\n},\n{\n    \"instanceType\": \"ip\",\n    \"namespace\": \"global\",\n    \"type\": \"ip.address\",\n    \"key\": \"dhcp.server\",\n    \"version\": {{dsgnGlobalConfVersion}},\n    \"value\": [\"100.127.0.1\",\"100.64.0.100\"],\n    \"groupUuid\": \"-1\",\n    \"inheritedGroupUuid\": \"\",\n    \"inheritedGroupName\": \"\"\n},\n{\n    \"instanceType\": \"dns\",\n    \"namespace\": \"global\",\n    \"type\": \"dns.setting\",\n    \"key\": \"dns.server\",\n    \"version\": {{dsgnGlobalConfVersion}},\n    \"value\": [\n{\n    \"domainName\": \"dcloud.cisco.com\",\n    \"primaryIpAddress\": \"208.67.222.222\",\n    \"secondaryIpAddress\": \"208.67.220.220\"\n}\n    ],\n    \"groupUuid\": \"-1\",\n    \"inheritedGroupUuid\": \"\",\n    \"inheritedGroupName\": \"\"\n},   \n{\n\t\"instanceType\":\"reference\",\n\t\"namespace\":\"global\",\n\t\"type\":\"reference.setting\",\n\t\"key\":\"credential.cli\",\n\t\"version\":{{dsgnGlobalConfVersion}},\n\t\"value\":[{\n\t\t\"objReferences\":[\"{{credCliUserId}}\"],\n\t\t\"type\":\"credential_cli\",\n\t\t\"url\":\"\"\n\t\t\n\t}],\n\t\"groupUuid\":\"-1\",\n\t\"inheritedGroupUuid\":\"\",\n\t\"inheritedGroupName\":\"\"},\n{\n\t\"instanceType\":\"reference\",\n\t\"namespace\":\"global\",\n\t\"type\":\"reference.setting\",\n\t\"key\":\"credential.snmp_v2_read\",\n\t\"version\":{{dsgnGlobalConfVersion}},\n\t\"value\":[{\n\t\t\"objReferences\":[\"{{credSnmpRoId}}\"],\n\t\t\"type\":\"credential_snmp_v2_read\",\n\t\t\"url\":\"\"\n\t\t\n\t}],\n\t\"groupUuid\":\"-1\",\n\t\"inheritedGroupUuid\":\"\",\n\t\"inheritedGroupName\":\"\"},\n\n{\n\t\"instanceType\":\"reference\",\n\t\"namespace\":\"global\",\n\t\"type\":\"reference.setting\",\n\t\"key\":\"credential.snmp_v2_write\",\n\t\"version\":{{dsgnGlobalConfVersion}},\n\t\"value\":[{\n\t\t\"objReferences\":[\"{{credSnmpRwId}}\"],\n\t\t\"type\":\"credential_snmp_v2_write\",\n\t\t\"url\":\"\"\n\t\t\n\t}],\n\t\"groupUuid\":\"-1\",\n\t\"inheritedGroupUuid\":\"\",\n\t\"inheritedGroupName\":\"\"\n\t\n}]"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/api/v1/commonsetting/global/-1",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v1",
								"commonsetting",
								"global",
								"-1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Status (P13)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"var latestRequest = pm.variables.get(\"latestRequest\");\r",
									"var service = data.response.serviceType;\r",
									"var isError = data.response.isError.toString();\r",
									"\r",
									"\r",
									"if (isError == \"false\") {\r",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");\r",
									"}\r",
									"else {\r",
									"    console.log(\"........ \" + latestRequest + \" generated an ERROR !!!!!\");\r",
									"    console.log(\"........ Service type is \" + service);\r",
									"    console.log(\"........ Failure reason is \" + data.response.failureReason);\r",
									"    \r",
									"}\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-auth-token",
								"value": "{{dnacToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/dna/intent/api/v1/task/{{taskId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"dna",
								"intent",
								"api",
								"v1",
								"task",
								"{{taskId}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "3. Initial Design Provisioning",
			"item": [
				{
					"name": "Add edge-1 to SJC-13-1 (P13)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"executionId\", data.executionId);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"device\": [\n\t\t{\n\t\t\t\"ip\":\"100.124.1.1\"\n\t\t}\n\t\t]\n}"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/dna/system/api/v1/site/{{dsgnSjc13FirstFloorId}}/device",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"dna",
								"system",
								"api",
								"v1",
								"site",
								"{{dsgnSjc13FirstFloorId}}",
								"device"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add cp-borders to SJC-13-MDF (P13)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"executionId\", data.executionId);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"device\": [\n\t\t{\n\t\t\t\"ip\":\"100.124.0.1\"\n\t\t},\n\t\t{\n\t\t\t\"ip\":\"100.124.0.2\"\n\t\t}\n\t\t]\n}"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/dna/system/api/v1/site/{{dsgnSjc13MdfId}}/device",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"dna",
								"system",
								"api",
								"v1",
								"site",
								"{{dsgnSjc13MdfId}}",
								"device"
							]
						}
					},
					"response": []
				},
				{
					"name": "X13 Update Edge-1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"taskId\", data.response.taskId);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n\t{\n\t\t\"type\":\"DeviceInfo\",\n\t\t\"name\":\"{{devEdge1FullName}}\",\n\t\t\"networkDeviceId\":\"{{devEdge1Id}}\",\n\t\t\"siteId\":\"{{dsgnSjc13FirstFloorId}}\"\n\t\t\n\t}\n]"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/data/customer-facing-service/DeviceInfo",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"data",
								"customer-facing-service",
								"DeviceInfo"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Status (P13)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"var latestRequest = pm.variables.get(\"latestRequest\");\r",
									"var service = data.response.serviceType;\r",
									"var isError = data.response.isError.toString();\r",
									"\r",
									"\r",
									"if (isError == \"false\") {\r",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");\r",
									"}\r",
									"else {\r",
									"    console.log(\"........ \" + latestRequest + \" generated an ERROR !!!!!\");\r",
									"    console.log(\"........ Service type is \" + service);\r",
									"    console.log(\"........ Failure reason is \" + data.response.failureReason);\r",
									"    \r",
									"}\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-auth-token",
								"value": "{{dnacToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/dna/intent/api/v1/task/{{taskId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"dna",
								"intent",
								"api",
								"v1",
								"task",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "X13 Update cp-border-1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"taskId\", data.response.taskId);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n\t{\n\t\t\"type\":\"DeviceInfo\",\n\t\t\"name\":\"{{devCpBorder1FullName}}\",\n\t\t\"networkDeviceId\":\"{{devCpBorder1Id}}\",\n\t\t\"siteId\":\"{{dsgnSjc13MdfId}}\"\n\t\t\n\t}\n]"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/data/customer-facing-service/DeviceInfo",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"data",
								"customer-facing-service",
								"DeviceInfo"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Status (P13)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"var latestRequest = pm.variables.get(\"latestRequest\");\r",
									"var service = data.response.serviceType;\r",
									"var isError = data.response.isError.toString();\r",
									"\r",
									"\r",
									"if (isError == \"false\") {\r",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");\r",
									"}\r",
									"else {\r",
									"    console.log(\"........ \" + latestRequest + \" generated an ERROR !!!!!\");\r",
									"    console.log(\"........ Service type is \" + service);\r",
									"    console.log(\"........ Failure reason is \" + data.response.failureReason);\r",
									"    \r",
									"}\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-auth-token",
								"value": "{{dnacToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/dna/intent/api/v1/task/{{taskId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"dna",
								"intent",
								"api",
								"v1",
								"task",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "X13 Update cp-border-2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"taskId\", data.response.taskId);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n\t{\n\t\t\"type\":\"DeviceInfo\",\n\t\t\"name\":\"{{devCpBorder2FullName}}\",\n\t\t\"networkDeviceId\":\"{{devCpBorder2Id}}\",\n\t\t\"siteId\":\"{{dsgnSjc13MdfId}}\"\n\t\t\n\t}\n]"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/data/customer-facing-service/DeviceInfo",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"data",
								"customer-facing-service",
								"DeviceInfo"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Status (P13)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"var latestRequest = pm.variables.get(\"latestRequest\");\r",
									"var service = data.response.serviceType;\r",
									"var isError = data.response.isError.toString();\r",
									"\r",
									"\r",
									"if (isError == \"false\") {\r",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");\r",
									"}\r",
									"else {\r",
									"    console.log(\"........ \" + latestRequest + \" generated an ERROR !!!!!\");\r",
									"    console.log(\"........ Service type is \" + service);\r",
									"    console.log(\"........ Failure reason is \" + data.response.failureReason);\r",
									"    \r",
									"}\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-auth-token",
								"value": "{{dnacToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/dna/intent/api/v1/task/{{taskId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"dna",
								"intent",
								"api",
								"v1",
								"task",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Network Settings (P13)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3bf4fce6-02fe-45d8-8363-3ff290e0048a",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"var devCpBorder1Name = pm.variables.get(\"devCpBorder1Name\");",
									"var devCpBorder2Name = pm.variables.get(\"devCpBorder2Name\");",
									"var devEdge1Name = pm.variables.get(\"devEdge1Name\");",
									"",
									"for (var i=0; i < data.response.length; i++) {",
									"    if (data.response[i].hostname.includes(devCpBorder1Name)) {",
									"        postman.setEnvironmentVariable(\"devCpBorder1Id\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"devCpBorder1FullName\", data.response[i].hostname);",
									"        postman.setEnvironmentVariable(\"devCpBorder1MgmtIp\", data.response[i].managementIpAddress);",
									"    }",
									"    else if (data.response[i].hostname.includes (devCpBorder2Name)) {",
									"        postman.setEnvironmentVariable(\"devCpBorder2Id\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"devCpBorder2FullName\", data.response[i].hostname);",
									"        postman.setEnvironmentVariable(\"devCpBorder2MgmtIp\", data.response[i].managementIpAddress);",
									"    }",
									"    else if (data.response[i].hostname.includes (devEdge1Name)) {",
									"        postman.setEnvironmentVariable(\"devEdge1Id\", data.response[i].id);",
									"        postman.setEnvironmentVariable(\"devEdge1FullName\", data.response[i].hostname);",
									"        postman.setEnvironmentVariable(\"devEdge1MgmtIp\", data.response[i].managementIpAddress);",
									"    }",
									"}",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/dna/intent/api/v1/network-device",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"dna",
								"intent",
								"api",
								"v1",
								"network-device"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Status - Pause 1 min (P13)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"var latestRequest = pm.variables.get(\"latestRequest\");\r",
									"var service = data.response.serviceType;\r",
									"var isError = data.response.isError.toString();\r",
									"\r",
									"\r",
									"if (isError == \"false\") {\r",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");\r",
									"}\r",
									"else {\r",
									"    console.log(\"........ \" + latestRequest + \" generated an ERROR !!!!!\");\r",
									"    console.log(\"........ Service type is \" + service);\r",
									"    console.log(\"........ Failure reason is \" + data.response.failureReason);\r",
									"    \r",
									"}\r",
									"\r",
									"console.log(\"Sleeping for one min.\");\r",
									"setTimeout(function(){}, 60000);\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/dna/intent/api/v1/task/{{taskId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"dna",
								"intent",
								"api",
								"v1",
								"task",
								"{{taskId}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "4. Define Fabric and Border Automation",
			"item": [
				{
					"name": "X13 Create Global-Pool-1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"taskId\", data.response.taskId);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"ipPoolCidr\": \"100.96.0.0/11\",\n    \"ipPoolName\": \"Global-Pool-1\",\n    \"gateways\": [\n        \"100.96.0.1\"\n    ],\n    \"dhcpServerIps\": [],\n    \"dnsServerIps\": [],\n    \"context\": [\n        {\n            \"contextKey\": \"type\",\n            \"contextValue\": \"generic\",\n            \"owner\": \"DNAC\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/ippool",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"ippool"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Status (P13)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"var latestRequest = pm.variables.get(\"latestRequest\");\r",
									"var service = data.response.serviceType;\r",
									"var isError = data.response.isError.toString();\r",
									"\r",
									"\r",
									"if (isError == \"false\") {\r",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");\r",
									"}\r",
									"else {\r",
									"    console.log(\"........ \" + latestRequest + \" generated an ERROR !!!!!\");\r",
									"    console.log(\"........ Service type is \" + service);\r",
									"    console.log(\"........ Failure reason is \" + data.response.failureReason);\r",
									"    \r",
									"}\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-auth-token",
								"value": "{{dnacToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/dna/intent/api/v1/task/{{taskId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"dna",
								"intent",
								"api",
								"v1",
								"task",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "X13 Get Global IP Pool ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var data = JSON.parse(responseBody);",
									"",
									"for (var i=0; i < data.response.length; i++) {",
									"    if (data.response[i].ipPoolName == \"Global-Pool-1\") {",
									"        postman.setEnvironmentVariable(\"dsgnGlobalPool1Id\", data.response[i].id);",
									"    }",
									"}",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-auth-token",
								"value": "{{dnacToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/ippool",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"ippool"
							]
						}
					},
					"response": []
				},
				{
					"name": "X13 Create Transit-Pool",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"taskId\", data.response.taskId);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"groupName\": \"Transit-Pool\",\n    \"type\": \"generic\",\n    \"siteId\": \"{{dsgnAreaTopId}}\",\n    \"ipPools\": [\n        {\n            \"parentUuid\": \"{{dsgnGlobalPool1Id}}\",\n            \"dhcpServerIps\": [],\n            \"dnsServerIps\": [],\n            \"ipPoolOwner\": \"DNAC\",\n            \"shared\": true,\n            \"gateways\": [\n                \"100.126.1.1\"\n            ],\n            \"ipPoolCidr\": \"100.126.1.0/24\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/ippool/group",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"ippool",
								"group"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Status (P13)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"var latestRequest = pm.variables.get(\"latestRequest\");\r",
									"var service = data.response.serviceType;\r",
									"var isError = data.response.isError.toString();\r",
									"\r",
									"\r",
									"if (isError == \"false\") {\r",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");\r",
									"}\r",
									"else {\r",
									"    console.log(\"........ \" + latestRequest + \" generated an ERROR !!!!!\");\r",
									"    console.log(\"........ Service type is \" + service);\r",
									"    console.log(\"........ Failure reason is \" + data.response.failureReason);\r",
									"    \r",
									"}\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-auth-token",
								"value": "{{dnacToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/dna/intent/api/v1/task/{{taskId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"dna",
								"intent",
								"api",
								"v1",
								"task",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "X13 Get Transit-Pool Reservation ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "186a9a46-305e-4a21-abe6-6b20907ea0ab",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var data = JSON.parse(responseBody);",
									"",
									"for (var i=0; i < data.response.length; i++) {",
									"    if (data.response[i].ipPoolName == \"Transit-Pool\") {",
									"        postman.setEnvironmentVariable(\"dsgnTransitPoolId\", data.response[i].groupUuid);",
									"    }",
									"}",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "x-auth-token",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/ippool?parentUuid={{dsgnGlobalPool1Id}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"ippool"
							],
							"query": [
								{
									"key": "parentUuid",
									"value": "{{dsgnGlobalPool1Id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "X13 Create Area-Transit",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"executionId\", data.executionId);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n\t{\n\t\t\"type\":\"ConnectivityDomain\",\n\t\t\"name\":\"Area-Transit\",\n\t\t\"description\":\"\",\n\t\t\"domainType\":\"TRANSIT\",\n\t\t\"enableMonitoring\":true,\n\t\t\"transitType\":\"IP\",\n\t\t\"transitMetaData\":\n\t\t[\n\t\t\t{\"name\":\"BGP\",\n\t\t\t\"value\":\"65535\"\n\t\t\t\t\n\t\t\t}\n\t\t],\n\t\t\"deviceInfo\":[]\n\t\t\n\t}\n]"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/data/customer-facing-service/ConnectivityDomain",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"data",
								"customer-facing-service",
								"ConnectivityDomain"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Status (P13)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"var latestRequest = pm.variables.get(\"latestRequest\");\r",
									"var service = data.response.serviceType;\r",
									"var isError = data.response.isError.toString();\r",
									"\r",
									"\r",
									"if (isError == \"false\") {\r",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");\r",
									"}\r",
									"else {\r",
									"    console.log(\"........ \" + latestRequest + \" generated an ERROR !!!!!\");\r",
									"    console.log(\"........ Service type is \" + service);\r",
									"    console.log(\"........ Failure reason is \" + data.response.failureReason);\r",
									"    \r",
									"}\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-auth-token",
								"value": "{{dnacToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/dna/intent/api/v1/task/{{taskId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"dna",
								"intent",
								"api",
								"v1",
								"task",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "X13 Get Virtual Network Context",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"console.log(\"Sleeping for 2 Seconds.  Gathering variables.\");",
									"setTimeout(function(){}, 2000);",
									"",
									"var data = JSON.parse(responseBody);",
									"",
									"for (var i=0; i < data.response.length; i++) {",
									"    if (data.response[i].name == \"DEFAULT_VN\") {",
									"        postman.setEnvironmentVariable(\"vncDefaultVnId\", data.response[i].id);",
									"    }",
									"",
									"    if (data.response[i].name == \"INFRA_VN\") {",
									"        postman.setEnvironmentVariable(\"vncInfraVnId\", data.response[i].id);",
									"    }",
									"    ",
									"    if (data.response[i].name == \"Campus\") {",
									"        postman.setEnvironmentVariable(\"vncCampusVnId\", data.response[i].id);",
									"    }",
									"",
									"    if (data.response[i].name == \"Guest\") {",
									"        postman.setEnvironmentVariable(\"vncGuestVnId\", data.response[i].id);",
									"    }",
									"}",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/data/customer-facing-service/virtualnetworkcontext",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"data",
								"customer-facing-service",
								"virtualnetworkcontext"
							]
						}
					},
					"response": []
				},
				{
					"name": "X13 Create US West Fabric",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"taskId\", data.response.taskId);",
									"",
									"var latestRequest = pm.info.requestName;",
									"postman.setEnvironmentVariable(\"latestRequest\", latestRequest);",
									"console.log (\"Sending request \" + latestRequest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{dnacToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n\t{\n\t\t\"type\":\"ConnectivityDomain\",\n\t\t\"name\":\"US West\",\n\t\t\"description\":\"\",\n\t\t\"domainType\":\"FABRIC_LAN\",\n\t\t\"virtualNetwork\":[],\n\t\t\"isDefault\":false,\n\t\t\"enableMonitoring\":true,\n\t\t\"siteSpecificDomain\":\n\t\t[\n\t\t\t{\"type\":\"ConnectivityDomain\",\n\t\t\t\"name\":\"Global/San_Jose_US_West\",\n\t\t\t\"description\":\"\",\n\t\t\t\"domainType\":\"FABRIC_SITE\",\n\t\t\t\"siteId\":\"{{dsgnAreaTopId}}\",\n\t\t\t\"virtualNetwork\":\n\t\t\t[\n\t\t\t\t{\n\t\t\t\t\t\"name\":\"DEFAULT_VN-Global/San_Jose_US_West\",\n\t\t\t\t\t\"isDefault\":true,\n\t\t\t\t\t\"isInfra\":false,\n\t\t\t\t\t\"virtualNetworkContextId\":\"{{vncDefaultVnId}}\",\n\t\t\t\t\t\"type\":\"VirtualNetwork\"\n\t\t\t\t\t\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\":\"INFRA_VN-Global/San_Jose_US_West\",\n\t\t\t\t\t\"isDefault\":false,\n\t\t\t\t\t\"isInfra\":true,\n\t\t\t\t\t\"virtualNetworkContextId\":\"{{vncInfraVnId}}\",\n\t\t\t\t\t\"type\":\"VirtualNetwork\"\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"isDefault\":false,\n\t\t\t\"enableMonitoring\":true\n\t\t\t\t\n\t\t\t}\n\t\t]\n\t\t\n\t}\n]"
						},
						"url": {
							"raw": "https://{{dnacAddress}}/api/v2/data/customer-facing-service/ConnectivityDomain",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"api",
								"v2",
								"data",
								"customer-facing-service",
								"ConnectivityDomain"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Status (P13)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "645deb90-b35a-42ff-a003-cd7618815137",
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"var latestRequest = pm.variables.get(\"latestRequest\");\r",
									"var service = data.response.serviceType;\r",
									"var isError = data.response.isError.toString();\r",
									"\r",
									"\r",
									"if (isError == \"false\") {\r",
									"    console.log(\"........\" + latestRequest + \" submitted successfully.\");\r",
									"}\r",
									"else {\r",
									"    console.log(\"........ \" + latestRequest + \" generated an ERROR !!!!!\");\r",
									"    console.log(\"........ Service type is \" + service);\r",
									"    console.log(\"........ Failure reason is \" + data.response.failureReason);\r",
									"    \r",
									"}\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-auth-token",
								"value": "{{dnacToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{dnacAddress}}/dna/intent/api/v1/task/{{taskId}}",
							"protocol": "https",
							"host": [
								"{{dnacAddress}}"
							],
							"path": [
								"dna",
								"intent",
								"api",
								"v1",
								"task",
								"{{taskId}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"protocolProfileBehavior": {}
}